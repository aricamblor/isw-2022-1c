

----STARTUP---- (30 May 2022 20:59:06) as /home/clinux01/Documentos/marsRover/linux64/CuisUniversity-5096.image!


----End fileIn of /home/clinux01/Documentos/marsRover/linux64/MarsRover-Logger.st----!
!AlgoTest methodsFor: 'as yet unclassified' stamp: 'fm 5/30/2022 21:01:05' prior: 50474156!
test05

	| marsRover logger logStream |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	logger := MarsRoverLogger followHeadingChangesOn: marsRover.
	
	marsRover process: 'r'.
	
	logStream := logger readStream.
	self assert: 'East' equals: logStream nextLine.
	self assert: logStream atEnd.! !
!AlgoTest methodsFor: 'as yet unclassified' stamp: 'fm 5/30/2022 21:03:25'!
test06

	| marsRover logger logStream |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	logger := MarsRoverLogger followHeadingChangesOn: marsRover.
	
	marsRover process: 'lll'.
	
	logStream := logger readStream.
	self assert: 'North' equals: logStream nextLine.
	self assert: 'West' equals: logStream nextLine.
	self assert: 'South' equals: logStream nextLine.
	self assert: logStream atEnd.! !

!testRun: #AlgoTest #test06 stamp: 'fm 5/30/2022 21:03:26'!
FAILURE!
!MarsRover methodsFor: 'heading' stamp: 'fm 5/30/2022 21:04:32' prior: 50474372!
headNorth
	
	head := MarsRoverHeadingNorth for: self.
	headingLogger ifNotNil: [headingLogger headingChangedTo: head]! !
!MarsRover methodsFor: 'heading' stamp: 'fm 5/30/2022 21:04:35' prior: 50474376!
headSouth
	
	head := MarsRoverHeadingSouth for: self.
	headingLogger ifNotNil: [headingLogger headingChangedTo: head]! !
!MarsRover methodsFor: 'heading' stamp: 'fm 5/30/2022 21:04:39' prior: 50474380!
headWest
	
	head := MarsRoverHeadingWest for: self.
	headingLogger ifNotNil: [headingLogger headingChangedTo: head]! !

!testRun: #AlgoTest #test01 stamp: 'fm 5/30/2022 21:04:43'!
PASSED!

!testRun: #AlgoTest #test02 stamp: 'fm 5/30/2022 21:04:43'!
PASSED!

!testRun: #AlgoTest #test03 stamp: 'fm 5/30/2022 21:04:43'!
PASSED!

!testRun: #AlgoTest #test04 stamp: 'fm 5/30/2022 21:04:43'!
PASSED!

!testRun: #AlgoTest #test05 stamp: 'fm 5/30/2022 21:04:43'!
PASSED!

!testRun: #AlgoTest #test06 stamp: 'fm 5/30/2022 21:04:43'!
ERROR!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'fm 5/30/2022 21:04:43'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'fm 5/30/2022 21:04:43'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'fm 5/30/2022 21:04:43'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'fm 5/30/2022 21:04:43'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'fm 5/30/2022 21:04:43'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'fm 5/30/2022 21:04:43'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'fm 5/30/2022 21:04:43'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'fm 5/30/2022 21:04:43'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'fm 5/30/2022 21:04:43'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'fm 5/30/2022 21:04:43'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'fm 5/30/2022 21:04:43'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'fm 5/30/2022 21:04:43'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'fm 5/30/2022 21:04:43'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'fm 5/30/2022 21:04:43'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'fm 5/30/2022 21:04:43'!
PASSED!

!testRun: #AlgoTest #test06 stamp: 'fm 5/30/2022 21:04:43'!
ERROR!
!MarsRoverHeadingNorth methodsFor: 'heading' stamp: 'fm 5/30/2022 21:05:23'!
accept: aVisitor

	^aVisitor visitMarsRoverHeadingNorth: self! !
!MarsRoverHeadingSouth methodsFor: 'heading' stamp: 'fm 5/30/2022 21:05:44'!
accept: aVisitor

	^aVisitor visitMarsRoverHeadingSouth: self! !
!MarsRoverHeadingWest methodsFor: 'heading' stamp: 'fm 5/30/2022 21:05:53'!
accept: aVisitor

	^aVisitor visitMarsRoverHeadingWest: self! !

!testRun: #AlgoTest #test01 stamp: 'fm 5/30/2022 21:06:01'!
PASSED!

!testRun: #AlgoTest #test02 stamp: 'fm 5/30/2022 21:06:01'!
PASSED!

!testRun: #AlgoTest #test03 stamp: 'fm 5/30/2022 21:06:01'!
PASSED!

!testRun: #AlgoTest #test04 stamp: 'fm 5/30/2022 21:06:01'!
PASSED!

!testRun: #AlgoTest #test05 stamp: 'fm 5/30/2022 21:06:01'!
PASSED!

!testRun: #AlgoTest #test06 stamp: 'fm 5/30/2022 21:06:01'!
ERROR!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'fm 5/30/2022 21:06:01'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'fm 5/30/2022 21:06:01'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'fm 5/30/2022 21:06:01'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'fm 5/30/2022 21:06:01'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'fm 5/30/2022 21:06:01'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'fm 5/30/2022 21:06:01'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'fm 5/30/2022 21:06:01'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'fm 5/30/2022 21:06:01'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'fm 5/30/2022 21:06:01'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'fm 5/30/2022 21:06:01'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'fm 5/30/2022 21:06:01'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'fm 5/30/2022 21:06:01'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'fm 5/30/2022 21:06:01'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'fm 5/30/2022 21:06:01'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'fm 5/30/2022 21:06:01'!
PASSED!

!testRun: #AlgoTest #test06 stamp: 'fm 5/30/2022 21:06:01'!
ERROR!
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'fm 5/30/2022 21:06:32'!
visitMarsRoverHeadingNorth: aMarsRoverHeadingNorth
	
	log nextPutAll: 'North'; newLine! !
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'fm 5/30/2022 21:06:45'!
visitMarsRoverHeadingWest: aMarsRoverHeadingWest
	
	log nextPutAll: 'West'; newLine! !
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'fm 5/30/2022 21:06:54'!
visitMarsRoverHeadingSouth: aMarsRoverHeadingSouth
	
	log nextPutAll: 'South'; newLine! !

!testRun: #AlgoTest #test01 stamp: 'fm 5/30/2022 21:06:58'!
PASSED!

!testRun: #AlgoTest #test02 stamp: 'fm 5/30/2022 21:06:58'!
PASSED!

!testRun: #AlgoTest #test03 stamp: 'fm 5/30/2022 21:06:58'!
PASSED!

!testRun: #AlgoTest #test04 stamp: 'fm 5/30/2022 21:06:58'!
PASSED!

!testRun: #AlgoTest #test05 stamp: 'fm 5/30/2022 21:06:58'!
PASSED!

!testRun: #AlgoTest #test06 stamp: 'fm 5/30/2022 21:06:58'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'fm 5/30/2022 21:06:58'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'fm 5/30/2022 21:06:58'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'fm 5/30/2022 21:06:58'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'fm 5/30/2022 21:06:58'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'fm 5/30/2022 21:06:58'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'fm 5/30/2022 21:06:58'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'fm 5/30/2022 21:06:58'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'fm 5/30/2022 21:06:58'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'fm 5/30/2022 21:06:58'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'fm 5/30/2022 21:06:58'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'fm 5/30/2022 21:06:58'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'fm 5/30/2022 21:06:58'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'fm 5/30/2022 21:06:58'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'fm 5/30/2022 21:06:58'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'fm 5/30/2022 21:06:58'!
PASSED!
!AlgoTest methodsFor: 'as yet unclassified' stamp: 'fm 5/30/2022 21:08:06'!
test07

	| marsRover logger logStream |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	logger := MarsRoverLogger followPositionAndHeadingChangesOn: marsRover.
	
	marsRover process: 'lll'.
	
	logStream := logger readStream.
	self assert: 'North' equals: logStream nextLine.
	self assert: 'West' equals: logStream nextLine.
	self assert: 'South' equals: logStream nextLine.
	self assert: logStream atEnd.! !

!testRun: #AlgoTest #test07 stamp: 'fm 5/30/2022 21:08:08'!
ERROR!
!MarsRoverLogger class methodsFor: 'instance creation' stamp: 'fm 5/30/2022 21:08:13'!
followPositionAndHeadingChangesOn: aMarsRover 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeFollowPositionAndHeadingChangesOn: aMarsRover ! !
!MarsRoverLogger class methodsFor: 'instance creation' stamp: 'fm 5/30/2022 21:08:42' prior: 50475064!
followPositionAndHeadingChangesOn: aMarsRover 

	^self new initializeFollowPositionAndHeadingChangesOn: aMarsRover! !

!testRun: #AlgoTest #test07 stamp: 'fm 5/30/2022 21:08:44'!
ERROR!

!classDefinition: #MarsRoverLogger category: 'MarsRover-WithHeading' stamp: 'fm 5/30/2022 21:08:50'!
Object subclass: #MarsRoverLogger
	instanceVariableNames: 'log marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverLogger methodsFor: 'initialization' stamp: 'fm 5/30/2022 21:08:50'!
initializeFollowPositionAndHeadingChangesOn: aMarsRover 
	self shouldBeImplemented.
	marsRover := aMarsRover.! !
!MarsRoverLogger methodsFor: 'initialization' stamp: 'fm 5/30/2022 21:09:33' prior: 50475091!
initializeFollowPositionAndHeadingChangesOn: aMarsRover 

	aMarsRover followHeadingChangesWith: self.
	aMarsRover followPositionChangesWith: self.! !

!testRun: #AlgoTest #test07 stamp: 'fm 5/30/2022 21:09:36'!
PASSED!

!testRun: #AlgoTest #test01 stamp: 'fm 5/30/2022 21:09:36'!
PASSED!

!testRun: #AlgoTest #test02 stamp: 'fm 5/30/2022 21:09:36'!
PASSED!

!testRun: #AlgoTest #test03 stamp: 'fm 5/30/2022 21:09:36'!
PASSED!

!testRun: #AlgoTest #test04 stamp: 'fm 5/30/2022 21:09:36'!
PASSED!

!testRun: #AlgoTest #test05 stamp: 'fm 5/30/2022 21:09:36'!
PASSED!

!testRun: #AlgoTest #test06 stamp: 'fm 5/30/2022 21:09:37'!
PASSED!

!testRun: #AlgoTest #test07 stamp: 'fm 5/30/2022 21:09:37'!
PASSED!

marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.!

logger := MarsRoverLogger followPositionAndHeadingChangesOn: marsRover.!

marsRover process: 'rfrl'.!

logStream := logger readStream.!
!AlgoTest methodsFor: 'as yet unclassified' stamp: 'fm 5/30/2022 21:14:58' prior: 50475045!
test07

	| marsRover logger logStream |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	logger := MarsRoverLogger followPositionAndHeadingChangesOn: marsRover.
	
	marsRover process: 'rfr'.
	
	logStream := logger readStream.
	self assert: 'South' equals: logStream nextLine.
	self assert: '1@0' equals: logStream nextLine.
	self assert: 'West' equals: logStream nextLine.
	self assert: logStream atEnd.! !

!testRun: #AlgoTest #test07 stamp: 'fm 5/30/2022 21:14:59'!
PASSED!

!testRun: #AlgoTest #test01 stamp: 'fm 5/30/2022 21:14:59'!
PASSED!

!testRun: #AlgoTest #test02 stamp: 'fm 5/30/2022 21:14:59'!
PASSED!

!testRun: #AlgoTest #test03 stamp: 'fm 5/30/2022 21:14:59'!
PASSED!

!testRun: #AlgoTest #test04 stamp: 'fm 5/30/2022 21:14:59'!
PASSED!

!testRun: #AlgoTest #test05 stamp: 'fm 5/30/2022 21:14:59'!
PASSED!

!testRun: #AlgoTest #test06 stamp: 'fm 5/30/2022 21:14:59'!
PASSED!

!testRun: #AlgoTest #test07 stamp: 'fm 5/30/2022 21:14:59'!
PASSED!

TestCase subclass: #WindowTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #WindowTest category: 'MarsRover-WithHeading' stamp: 'fm 5/30/2022 21:16:59'!
TestCase subclass: #WindowTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverWindow category: 'MarsRover-WithHeading' stamp: 'fm 5/30/2022 21:18:57'!
Object subclass: #MarsRoverWindow
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!WindowTest methodsFor: 'no messages' stamp: 'fm 5/30/2022 21:18:52'!
test01

	| marsRover logger logStream |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	logger := MarsRoverWindow followPositionAndHeadingChangesOn: marsRover.
	
	marsRover process: ''.
	
	logStream := logger positionField.
	
	self assert: '' equals: logger positionField! !
!WindowTest methodsFor: 'as yet unclassified' stamp: 'fm 5/30/2022 21:19:05' prior: 50475183!
test01

	| marsRover logger |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	logger := MarsRoverWindow followPositionAndHeadingChangesOn: marsRover.
	
	marsRover process: ''.
	
	self assert: '' equals: logger positionField! !
!WindowTest methodsFor: 'as yet unclassified' stamp: 'fm 5/30/2022 21:19:11' prior: 50475196!
test01

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow followPositionAndHeadingChangesOn: marsRover.
	
	marsRover process: ''.
	
	self assert: '' equals: window positionField! !

!testRun: #WindowTest #test01 stamp: 'fm 5/30/2022 21:21:01'!
ERROR!
!MarsRoverWindow class methodsFor: 'instance creation' stamp: 'fm 5/30/2022 21:21:54'!
followPositionAndHeadingChangesOn: aMarsRover 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeFollowPositionAndHeadingChangesOn: aMarsRover ! !
!MarsRoverWindow class methodsFor: 'instance creation' stamp: 'fm 5/30/2022 21:22:07' prior: 50475220!
followPositionAndHeadingChangesOn: aMarsRover 
	
	^self new initializeFollowPositionAndHeadingChangesOn: aMarsRover! !

!testRun: #WindowTest #test01 stamp: 'fm 5/30/2022 21:22:20'!
ERROR!

!classDefinition: #MarsRoverWindow category: 'MarsRover-WithHeading' stamp: 'fm 5/30/2022 21:22:34'!
Object subclass: #MarsRoverWindow
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverWindow methodsFor: 'initialization' stamp: 'fm 5/30/2022 21:22:34'!
initializeFollowPositionAndHeadingChangesOn: aMarsRover 
	self shouldBeImplemented.
	marsRover := aMarsRover.! !
!MarsRoverWindow methodsFor: 'initialization' stamp: 'fm 5/30/2022 21:22:43' prior: 50475247!
initializeFollowPositionAndHeadingChangesOn: aMarsRover! !

!testRun: #WindowTest #test01 stamp: 'fm 5/30/2022 21:22:44'!
ERROR!
!WindowTest methodsFor: 'as yet unclassified' stamp: 'fm 5/30/2022 21:24:06' prior: 50475207!
test01

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow followPositionChangesOn: marsRover.
	
	marsRover process: ''.
	
	self assert: '' equals: window positionField! !

!testRun: #WindowTest #test01 stamp: 'fm 5/30/2022 21:24:08'!
ERROR!
!MarsRoverWindow class methodsFor: 'instance creation' stamp: 'fm 5/30/2022 21:24:12'!
followPositionChangesOn: aMarsRover 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeFollowPositionChangesOn: aMarsRover ! !
!MarsRoverWindow class methodsFor: 'instance creation' stamp: 'fm 5/30/2022 21:24:17' prior: 50475274!
followPositionChangesOn: aMarsRover 

	^self new initializeFollowPositionChangesOn: aMarsRover! !

!testRun: #WindowTest #test01 stamp: 'fm 5/30/2022 21:24:18'!
ERROR!
!MarsRoverWindow methodsFor: 'initialization' stamp: 'fm 5/30/2022 21:24:23'!
initializeFollowPositionChangesOn: aMarsRover 
	self shouldBeImplemented.
	marsRover := aMarsRover.! !
!MarsRoverWindow methodsFor: 'initialization' stamp: 'fm 5/30/2022 21:24:35' prior: 50475292!
initializeFollowPositionChangesOn: aMarsRover! !

!testRun: #WindowTest #test01 stamp: 'fm 5/30/2022 21:24:36'!
ERROR!
!MarsRoverWindow methodsFor: 'accessing' stamp: 'fm 5/30/2022 21:24:45'!
positionField
	self shouldBeImplemented.! !
!MarsRoverWindow methodsFor: 'accessing' stamp: 'fm 5/30/2022 21:25:29' prior: 50475305!
positionField

	^''! !

!testRun: #WindowTest #test01 stamp: 'fm 5/30/2022 21:25:30'!
PASSED!

!testRun: #WindowTest #test01 stamp: 'fm 5/30/2022 21:25:30'!
PASSED!
!WindowTest methodsFor: 'as yet unclassified' stamp: 'fm 5/30/2022 21:26:58'!
test02

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow followPositionChangesOn: marsRover.
	
	marsRover process: 'f'.
	
	self assert: '2@1' equals: window positionField! !

!testRun: #WindowTest #test02 stamp: 'fm 5/30/2022 21:26:59'!
FAILURE!
!MarsRoverWindow methodsFor: 'initialization' stamp: 'fm 5/30/2022 21:28:36' prior: 50475299!
initializeFollowPositionChangesOn: aMarsRover

	aMarsRover followPositionChangesWith: self! !

!classDefinition: #MarsRoverWindow category: 'MarsRover-WithHeading' stamp: 'fm 5/30/2022 21:30:29'!
Object subclass: #MarsRoverWindow
	instanceVariableNames: 'marsRover positionField'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverWindow methodsFor: 'accessing' stamp: 'fm 5/30/2022 21:30:27'!
positionChangedTo: aPosition

	positionField := aPosition! !
!MarsRoverWindow methodsFor: 'initialization' stamp: 'fm 5/30/2022 21:30:50' prior: 50475331!
initializeFollowPositionChangesOn: aMarsRover

	positionField := ''.
	aMarsRover followPositionChangesWith: self! !
!MarsRoverWindow methodsFor: 'accessing' stamp: 'fm 5/30/2022 21:30:56' prior: 50475310!
positionField

	^ positionField ! !

!testRun: #WindowTest #test02 stamp: 'fm 5/30/2022 21:30:58'!
FAILURE!
!MarsRoverWindow methodsFor: 'accessing' stamp: 'fm 5/30/2022 21:31:17' prior: 50475345!
positionChangedTo: aPosition

	positionField := aPosition asString! !

!testRun: #WindowTest #test02 stamp: 'fm 5/30/2022 21:31:18'!
PASSED!

!testRun: #WindowTest #test01 stamp: 'fm 5/30/2022 21:31:18'!
PASSED!

!testRun: #WindowTest #test02 stamp: 'fm 5/30/2022 21:31:18'!
PASSED!

marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.!

window := MarsRoverWindow followPositionChangesOn: marsRover.!

marsRover process: 'fffbb'.!

window positionField!

window positionField!

marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow followPositionChangesOn: marsRover.
	
	marsRover process: 'ffffff'.!

window positionField!
!WindowTest methodsFor: 'as yet unclassified' stamp: 'fm 5/30/2022 21:34:48'!
test03

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow followHeadingChangesOn: marsRover.
	
	marsRover process: ''.
	
	self assert: '' equals: window headingField! !

!testRun: #WindowTest #test03 stamp: 'fm 5/30/2022 21:34:50'!
ERROR!
!MarsRoverWindow class methodsFor: 'instance creation' stamp: 'fm 5/30/2022 21:34:54'!
followHeadingChangesOn: aMarsRover 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeFollowHeadingChangesOn: aMarsRover ! !
!MarsRoverWindow class methodsFor: 'instance creation' stamp: 'fm 5/30/2022 21:34:59' prior: 50475401!
followHeadingChangesOn: aMarsRover 
	
	^self new initializeFollowHeadingChangesOn: aMarsRover! !

!testRun: #WindowTest #test03 stamp: 'fm 5/30/2022 21:35:01'!
ERROR!
!MarsRoverWindow methodsFor: 'initialization' stamp: 'fm 5/30/2022 21:35:05'!
initializeFollowHeadingChangesOn: aMarsRover 
	self shouldBeImplemented.
	marsRover := aMarsRover.! !

!classDefinition: #MarsRoverWindow category: 'MarsRover-WithHeading' stamp: 'fm 5/30/2022 21:35:25'!
Object subclass: #MarsRoverWindow
	instanceVariableNames: 'marsRover positionField headingField'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverWindow methodsFor: 'initialization' stamp: 'fm 5/30/2022 21:35:24' prior: 50475419!
initializeFollowHeadingChangesOn: aMarsRover

	headingField := ''! !

!testRun: #WindowTest #test03 stamp: 'fm 5/30/2022 21:35:26'!
ERROR!
!MarsRoverWindow methodsFor: 'accessing' stamp: 'fm 5/30/2022 21:35:31'!
headingField
	self shouldBeImplemented.
	^headingField! !
!MarsRoverWindow methodsFor: 'accessing' stamp: 'fm 5/30/2022 21:35:35' prior: 50475441!
headingField

	^ headingField! !

!testRun: #WindowTest #test03 stamp: 'fm 5/30/2022 21:35:37'!
PASSED!

!testRun: #WindowTest #test01 stamp: 'fm 5/30/2022 21:35:37'!
PASSED!

!testRun: #WindowTest #test02 stamp: 'fm 5/30/2022 21:35:37'!
PASSED!

!testRun: #WindowTest #test03 stamp: 'fm 5/30/2022 21:35:37'!
PASSED!
!WindowTest methodsFor: 'as yet unclassified' stamp: 'fm 5/30/2022 21:36:40'!
test04

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow followHeadingChangesOn: marsRover.
	
	marsRover process: 'rrr'.
	
	self assert: 'South' equals: window headingField! !
!WindowTest methodsFor: 'as yet unclassified' stamp: 'fm 5/30/2022 21:36:49' prior: 50475459!
test04

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow followHeadingChangesOn: marsRover.
	
	marsRover process: 'rrr'.
	
	self assert: 'North' equals: window headingField! !

!testRun: #WindowTest #test04 stamp: 'fm 5/30/2022 21:36:51'!
FAILURE!
!MarsRoverWindow methodsFor: 'initialization' stamp: 'fm 5/30/2022 21:37:24' prior: 50475434!
initializeFollowHeadingChangesOn: aMarsRover

	headingField := ''.
	aMarsRover followHeadingChangesWith: self.! !

!testRun: #WindowTest #test04 stamp: 'fm 5/30/2022 21:37:27'!
ERROR!
!MarsRoverWindow methodsFor: 'accessing' stamp: 'fm 5/30/2022 21:38:37'!
headingChangedTo: aMarsRoverHeadingSouth 
	self shouldBeImplemented.! !
!MarsRoverWindow methodsFor: 'accessing' stamp: 'fm 5/30/2022 21:40:27' prior: 50475492!
headingChangedTo: aMarsRoverHeading
	
	headingField := aMarsRoverHeading! !

!testRun: #WindowTest #test04 stamp: 'fm 5/30/2022 21:40:31'!
ERROR!

!testRun: #WindowTest #test04 stamp: 'fm 5/30/2022 21:40:48'!
FAILURE!
!MarsRoverWindow methodsFor: 'accessing' stamp: 'fm 5/30/2022 21:42:42' prior: 50475446!
headingField

	^ headingField asString! !

!testRun: #WindowTest #test04 stamp: 'fm 5/30/2022 21:42:45'!
FAILURE!
!MarsRoverWindow methodsFor: 'accessing' stamp: 'fm 5/30/2022 21:51:06' prior: 50475498!
headingChangedTo: aMarsRoverHeading
	
	aMarsRoverHeading accept: self! !

!testRun: #WindowTest #test01 stamp: 'fm 5/30/2022 21:51:13'!
PASSED!

!testRun: #WindowTest #test02 stamp: 'fm 5/30/2022 21:51:13'!
PASSED!

!testRun: #WindowTest #test03 stamp: 'fm 5/30/2022 21:51:13'!
PASSED!

!testRun: #WindowTest #test04 stamp: 'fm 5/30/2022 21:51:13'!
ERROR!

!testRun: #WindowTest #test04 stamp: 'fm 5/30/2022 21:51:13'!
ERROR!
!MarsRoverWindow methodsFor: 'accessing' stamp: 'fm 5/30/2022 21:51:48'!
visitMarsRoverHeadingEast: aMarsRoverHeadingEast
	
	headingField := 'East'! !
!MarsRoverWindow methodsFor: 'accessing' stamp: 'fm 5/30/2022 21:51:59'!
visitMarsRoverHeadingWest: aMarsRoverHeadingWest
	
	headingField := 'West'! !
!MarsRoverWindow methodsFor: 'accessing' stamp: 'fm 5/30/2022 21:52:11'!
visitMarsRoverHeadingNorth: aMarsRoverHeadingNorth
	
	headingField := 'North'! !
!MarsRoverWindow methodsFor: 'accessing' stamp: 'fm 5/30/2022 21:52:22'!
visitMarsRoverHeadingSouth: aMarsRoverHeadingSouth
	
	headingField := 'South'! !

!testRun: #AlgoTest #test01 stamp: 'fm 5/30/2022 21:52:34'!
PASSED!

!testRun: #AlgoTest #test02 stamp: 'fm 5/30/2022 21:52:34'!
PASSED!

!testRun: #AlgoTest #test03 stamp: 'fm 5/30/2022 21:52:34'!
PASSED!

!testRun: #AlgoTest #test04 stamp: 'fm 5/30/2022 21:52:34'!
PASSED!

!testRun: #AlgoTest #test05 stamp: 'fm 5/30/2022 21:52:34'!
PASSED!

!testRun: #AlgoTest #test06 stamp: 'fm 5/30/2022 21:52:34'!
PASSED!

!testRun: #AlgoTest #test07 stamp: 'fm 5/30/2022 21:52:34'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'fm 5/30/2022 21:52:34'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'fm 5/30/2022 21:52:34'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'fm 5/30/2022 21:52:34'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'fm 5/30/2022 21:52:34'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'fm 5/30/2022 21:52:34'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'fm 5/30/2022 21:52:34'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'fm 5/30/2022 21:52:34'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'fm 5/30/2022 21:52:34'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'fm 5/30/2022 21:52:34'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'fm 5/30/2022 21:52:34'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'fm 5/30/2022 21:52:34'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'fm 5/30/2022 21:52:34'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'fm 5/30/2022 21:52:34'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'fm 5/30/2022 21:52:34'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'fm 5/30/2022 21:52:34'!
PASSED!

!testRun: #WindowTest #test01 stamp: 'fm 5/30/2022 21:52:34'!
PASSED!

!testRun: #WindowTest #test02 stamp: 'fm 5/30/2022 21:52:34'!
PASSED!

!testRun: #WindowTest #test03 stamp: 'fm 5/30/2022 21:52:34'!
PASSED!

!testRun: #WindowTest #test04 stamp: 'fm 5/30/2022 21:52:34'!
PASSED!

----SNAPSHOT----(30 May 2022 21:52:39) CuisUniversity-5096.image priorSource: 4557982!

----SNAPSHOT----(30 May 2022 21:52:58) CuisUniversity-5096.image priorSource: 4607315!

----STARTUP---- (31 May 2022 18:26:07) as /mnt/c/Users/Ari/Desktop/Ingenieria/CuisUniversity/MarsRoverReturned/linux64/CuisUniversity-5096.image!

!WindowTest methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 18:32:30'!
test05

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow followPositionAndHeadingChangesOn: marsRover.
	
	marsRover process: ''.
	
	self assert: 'North' equals: window headingField! !
!WindowTest methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 18:35:34' prior: 50475640!
test05

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow followPositionAndHeadingChangesOn: marsRover.
	
	marsRover process: 'l'.
	
	self assert: 'North' equals: window headingField.
	self assert: '' equals: window positionField.
	
	marsRover process: 'f'.
	
	self assert: 'North' equals: window headingField.
	self assert: '1@2' equals: window positionField.! !
!WindowTest methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 18:36:37' prior: 50475651!
test05

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow followPositionAndHeadingChangesOn: marsRover.
	
	self assert: 'North' equals: window headingField.
	self assert: '' equals: window positionField.
	
	marsRover process: 'l'.
	
	self assert: 'North' equals: window headingField.
	self assert: '' equals: window positionField.
	
	marsRover process: 'f'.
	
	self assert: 'North' equals: window headingField.
	self assert: '1@2' equals: window positionField.! !

!testRun: #WindowTest #test05 stamp: 'AEC 5/31/2022 18:36:42'!
FAILURE!
!WindowTest methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 18:36:49' prior: 50475668!
test05

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow followPositionAndHeadingChangesOn: marsRover.
	
	self assert: '' equals: window headingField.
	self assert: '' equals: window positionField.
	
	marsRover process: 'l'.
	
	self assert: 'North' equals: window headingField.
	self assert: '' equals: window positionField.
	
	marsRover process: 'f'.
	
	self assert: 'North' equals: window headingField.
	self assert: '1@2' equals: window positionField.! !

!testRun: #WindowTest #test05 stamp: 'AEC 5/31/2022 18:36:50'!
FAILURE!
!MarsRoverWindow methodsFor: 'initialization' stamp: 'AEC 5/31/2022 18:37:41' prior: 50475254!
initializeFollowPositionAndHeadingChangesOn: aMarsRover

	self initializeFollowHeadingChangesOn: aMarsRover.
	self initializeFollowPositionChangesOn: aMarsRover ! !

!testRun: #AlgoTest #test01 stamp: 'AEC 5/31/2022 18:37:47'!
PASSED!

!testRun: #AlgoTest #test02 stamp: 'AEC 5/31/2022 18:37:47'!
PASSED!

!testRun: #AlgoTest #test03 stamp: 'AEC 5/31/2022 18:37:47'!
PASSED!

!testRun: #AlgoTest #test04 stamp: 'AEC 5/31/2022 18:37:47'!
PASSED!

!testRun: #AlgoTest #test05 stamp: 'AEC 5/31/2022 18:37:47'!
PASSED!

!testRun: #AlgoTest #test06 stamp: 'AEC 5/31/2022 18:37:47'!
PASSED!

!testRun: #AlgoTest #test07 stamp: 'AEC 5/31/2022 18:37:47'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'AEC 5/31/2022 18:37:47'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'AEC 5/31/2022 18:37:47'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'AEC 5/31/2022 18:37:47'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'AEC 5/31/2022 18:37:47'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'AEC 5/31/2022 18:37:47'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'AEC 5/31/2022 18:37:47'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'AEC 5/31/2022 18:37:47'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'AEC 5/31/2022 18:37:47'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'AEC 5/31/2022 18:37:47'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'AEC 5/31/2022 18:37:47'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'AEC 5/31/2022 18:37:47'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'AEC 5/31/2022 18:37:47'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'AEC 5/31/2022 18:37:47'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'AEC 5/31/2022 18:37:47'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'AEC 5/31/2022 18:37:47'!
PASSED!

!testRun: #WindowTest #test01 stamp: 'AEC 5/31/2022 18:37:47'!
PASSED!

!testRun: #WindowTest #test02 stamp: 'AEC 5/31/2022 18:37:47'!
PASSED!

!testRun: #WindowTest #test03 stamp: 'AEC 5/31/2022 18:37:47'!
PASSED!

!testRun: #WindowTest #test04 stamp: 'AEC 5/31/2022 18:37:47'!
PASSED!

!testRun: #WindowTest #test05 stamp: 'AEC 5/31/2022 18:37:47'!
PASSED!

----SNAPSHOT----(31 May 2022 18:40:05) CuisUniversity-5096.image priorSource: 4607403!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 18:40:45'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head positionLogger headingLogger observers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'initialization' stamp: 'AEC 5/31/2022 18:40:44' prior: 50474360!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType for: self .
	observers := OrderedCollection new.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 18:41:14' prior: 50474465!
followHeadingChangesWith: aMarsRoverLogger 
	
	observers add: aMarsRoverLogger! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 18:41:25' prior: 50474471!
followPositionChangesWith: aMarsRoverLogger 
	
	observers add: aMarsRoverLogger! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 18:45:16'!
attach: aMarsRoverLogger 
	
	observers add: aMarsRoverLogger! !
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 18:45:16' prior: 50474694!
followHeadingChangesOn: aMarsRover 
	
	aMarsRover attach: self! !
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 18:45:16' prior: 50475098!
initializeFollowPositionAndHeadingChangesOn: aMarsRover 

	aMarsRover attach: self.
	aMarsRover followPositionChangesWith: self.! !
!MarsRoverWindow methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 18:45:16' prior: 50475483!
initializeFollowHeadingChangesOn: aMarsRover

	headingField := ''.
	aMarsRover attach: self.! !

!methodRemoval: MarsRover #followHeadingChangesWith: stamp: 'AEC 5/31/2022 18:45:16'!
followHeadingChangesWith: aMarsRoverLogger 
	
	observers add: aMarsRoverLogger!

!methodRemoval: MarsRover #followPositionChangesWith: stamp: 'AEC 5/31/2022 18:45:35'!
followPositionChangesWith: aMarsRoverLogger 
	
	observers add: aMarsRoverLogger!
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 18:45:42' prior: 50474700!
followPositionChangesOn: aMarsRover 
	
	aMarsRover attach: self! !
!MarsRoverLogger methodsFor: 'initialization' stamp: 'AEC 5/31/2022 18:45:51' prior: 50475845!
initializeFollowPositionAndHeadingChangesOn: aMarsRover 

	aMarsRover attach: self.! !
!MarsRoverWindow methodsFor: 'initialization' stamp: 'AEC 5/31/2022 18:45:58' prior: 50475350!
initializeFollowPositionChangesOn: aMarsRover

	positionField := ''.
	aMarsRover attach: self! !
!MarsRoverWindow methodsFor: 'initialization' stamp: 'AEC 5/31/2022 18:46:53' prior: 50475712!
initializeFollowPositionAndHeadingChangesOn: aMarsRover

	self initializeFollowHeadingChangesOn: aMarsRover.
	self initializeFollowPositionChangesOn: aMarsRover ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 18:47:11' prior: 50475833!
attach: anObserver 
	
	observers add: anObserver! !

MarsRoverWindow subclass: #PositionWindow
	instanceVariableNames: 'marsRover positionField headingField'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverWindow subclass: #PositionWindow
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #PositionWindow category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 18:51:42'!
MarsRoverWindow subclass: #PositionWindow
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverWindow subclass: #HeadingWindow
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #HeadingWindow category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 18:51:47'!
MarsRoverWindow subclass: #HeadingWindow
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverWindow subclass: #PositionAndHeadingWindow
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #PositionAndHeadingWindow category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 18:51:53'!
MarsRoverWindow subclass: #PositionAndHeadingWindow
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!methodRemoval: MarsRoverWindow class #followHeadingChangesOn: stamp: 'AEC 5/31/2022 18:52:59'!
followHeadingChangesOn: aMarsRover 
	
	^self new initializeFollowHeadingChangesOn: aMarsRover!

!methodRemoval: MarsRoverWindow class #followPositionAndHeadingChangesOn: stamp: 'AEC 5/31/2022 18:53:01'!
followPositionAndHeadingChangesOn: aMarsRover 
	
	^self new initializeFollowPositionAndHeadingChangesOn: aMarsRover!

!methodRemoval: MarsRoverWindow class #followPositionChangesOn: stamp: 'AEC 5/31/2022 18:53:03'!
followPositionChangesOn: aMarsRover 

	^self new initializeFollowPositionChangesOn: aMarsRover!
!MarsRoverWindow class methodsFor: 'instance creation' stamp: 'AEC 5/31/2022 18:53:31'!
for: aMarsRover

	self new initiailzeFor: aMarsRover ! !

!methodRemoval: MarsRoverWindow #initializeFollowPositionAndHeadingChangesOn: stamp: 'AEC 5/31/2022 18:53:45'!
initializeFollowPositionAndHeadingChangesOn: aMarsRover

	self initializeFollowHeadingChangesOn: aMarsRover.
	self initializeFollowPositionChangesOn: aMarsRover !

!methodRemoval: MarsRoverWindow #initializeFollowPositionChangesOn: stamp: 'AEC 5/31/2022 18:53:53'!
initializeFollowPositionChangesOn: aMarsRover

	positionField := ''.
	aMarsRover attach: self!
!MarsRoverWindow methodsFor: 'initialization' stamp: 'AEC 5/31/2022 18:53:59'!
initializeFor: aMarsRover

	headingField := ''.
	aMarsRover attach: self.! !

!methodRemoval: MarsRoverWindow #initializeFollowHeadingChangesOn: stamp: 'AEC 5/31/2022 18:53:59'!
initializeFollowHeadingChangesOn: aMarsRover

	headingField := ''.
	aMarsRover attach: self.!
!MarsRoverWindow methodsFor: 'initialization' stamp: 'AEC 5/31/2022 18:54:10' prior: 50475985!
initializeFor: aMarsRover

	self subclassResponsibility ! !
!MarsRoverWindow methodsFor: 'initialization' stamp: 'AEC 5/31/2022 18:54:36' prior: 50475997!
initializeFor: aMarsRover

	aMarsRover attach: self.! !
!MarsRoverWindow methodsFor: 'initialization' stamp: 'AEC 5/31/2022 18:55:06' prior: 50476002!
initializeFor: aMarsRover

	self initializeFields.
	aMarsRover attach: self.! !
!MarsRoverWindow methodsFor: 'initialization' stamp: 'AEC 5/31/2022 18:55:10' prior: 50476007!
initializeFor: aMarsRover

	self initializeFields.
	aMarsRover attach: self! !
!MarsRoverWindow methodsFor: 'initialization' stamp: 'AEC 5/31/2022 18:55:20'!
initializeFields

	self subclassResponsibility ! !

!methodRemoval: MarsRoverWindow #headingField stamp: 'AEC 5/31/2022 18:56:30'!
headingField

	^ headingField asString!

!methodRemoval: MarsRoverWindow #positionField stamp: 'AEC 5/31/2022 18:56:32'!
positionField

	^ positionField !
!MarsRoverWindow methodsFor: 'initialization' stamp: 'AEC 5/31/2022 18:58:46'!
update! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'AEC 5/31/2022 19:10:10'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'AEC 5/31/2022 19:10:10'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'AEC 5/31/2022 19:10:10'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'AEC 5/31/2022 19:10:10'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'AEC 5/31/2022 19:10:10'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'AEC 5/31/2022 19:10:10'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'AEC 5/31/2022 19:10:10'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'AEC 5/31/2022 19:10:10'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'AEC 5/31/2022 19:10:10'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'AEC 5/31/2022 19:10:10'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'AEC 5/31/2022 19:10:10'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'AEC 5/31/2022 19:10:10'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'AEC 5/31/2022 19:10:10'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'AEC 5/31/2022 19:10:10'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'AEC 5/31/2022 19:10:10'!
PASSED!

!classDefinition: #PositionProxy category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 19:12:12'!
Object subclass: #PositionProxy
	instanceVariableNames: 'position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #HeadingProxy category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 19:12:20'!
Object subclass: #HeadingProxy
	instanceVariableNames: 'heading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'initialization' stamp: 'AEC 5/31/2022 19:11:44' prior: 50475813!
initializeAt: aPosition heading: aHeadingType

	position := PositionProxy on: aPosition.
	head := HeadingProxy on: (aHeadingType for: self).! !
!MarsRover methodsFor: 'heading' stamp: 'AEC 5/31/2022 19:15:39' prior: 50474366!
headEast
	
	head update: (MarsRoverHeadingEast for: self).! !
!MarsRover methodsFor: 'heading' stamp: 'AEC 5/31/2022 19:16:02' prior: 50474786!
headNorth
	
	head update: (MarsRoverHeadingNorth for: self).! !
!MarsRover methodsFor: 'heading' stamp: 'AEC 5/31/2022 19:16:15' prior: 50474793!
headSouth
	
	head update: (MarsRoverHeadingSouth for: self).! !
!MarsRover methodsFor: 'heading' stamp: 'AEC 5/31/2022 19:16:29' prior: 50474800!
headWest
	
	head update: (MarsRoverHeadingWest for: self).! !

!classDefinition: #HeadingProxy category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 19:17:11'!
Object subclass: #HeadingProxy
	instanceVariableNames: 'heading head'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!HeadingProxy methodsFor: 'no messages' stamp: 'AEC 5/31/2022 19:17:09' overrides: 16903929!
update: aHeading

	head := aHeading! !

Object subclass: #HeadingProxy
	instanceVariableNames: 'head'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #HeadingProxy category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 19:17:21'!
Object subclass: #HeadingProxy
	instanceVariableNames: 'head'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'moving' stamp: 'AEC 5/31/2022 19:19:45' prior: 50474414!
addToPositionAndLogNewPosition: newPosition

	position update: position value + newPosition.! !
!MarsRover methodsFor: 'moving' stamp: 'AEC 5/31/2022 19:19:54' prior: 50476156!
addToPositionAndLogNewPosition: newPosition

	position update: (position value + newPosition).! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'AEC 5/31/2022 19:20:01'!
ERROR!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'AEC 5/31/2022 19:20:01'!
ERROR!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'AEC 5/31/2022 19:20:01'!
ERROR!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'AEC 5/31/2022 19:20:01'!
ERROR!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'AEC 5/31/2022 19:20:01'!
ERROR!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'AEC 5/31/2022 19:20:01'!
ERROR!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'AEC 5/31/2022 19:20:01'!
ERROR!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'AEC 5/31/2022 19:20:01'!
ERROR!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'AEC 5/31/2022 19:20:01'!
ERROR!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'AEC 5/31/2022 19:20:01'!
ERROR!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'AEC 5/31/2022 19:20:01'!
ERROR!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'AEC 5/31/2022 19:20:01'!
ERROR!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'AEC 5/31/2022 19:20:01'!
ERROR!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'AEC 5/31/2022 19:20:01'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'AEC 5/31/2022 19:20:01'!
ERROR!
!MarsRover methodsFor: 'testing' stamp: 'AEC 5/31/2022 19:20:45' prior: 50474392!
isAt: aPosition heading: aHeadingType

	^position value = aPosition and: [ head value isHeading: aHeadingType ]! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'AEC 5/31/2022 19:20:49'!
ERROR!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'AEC 5/31/2022 19:20:49'!
ERROR!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'AEC 5/31/2022 19:20:49'!
ERROR!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'AEC 5/31/2022 19:20:49'!
ERROR!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'AEC 5/31/2022 19:20:49'!
ERROR!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'AEC 5/31/2022 19:20:49'!
ERROR!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'AEC 5/31/2022 19:20:49'!
ERROR!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'AEC 5/31/2022 19:20:49'!
ERROR!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'AEC 5/31/2022 19:20:49'!
ERROR!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'AEC 5/31/2022 19:20:49'!
ERROR!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'AEC 5/31/2022 19:20:49'!
ERROR!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'AEC 5/31/2022 19:20:49'!
ERROR!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'AEC 5/31/2022 19:20:49'!
ERROR!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'AEC 5/31/2022 19:20:49'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'AEC 5/31/2022 19:20:49'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'AEC 5/31/2022 19:22:28' prior: 50474421!
moveBackward
	
	head value moveBackward! !
!MarsRover methodsFor: 'moving' stamp: 'AEC 5/31/2022 19:22:50' prior: 50474429!
moveForward
	
	head value moveForward! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'AEC 5/31/2022 19:23:05'!
ERROR!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'AEC 5/31/2022 19:23:05'!
ERROR!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'AEC 5/31/2022 19:23:05'!
ERROR!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'AEC 5/31/2022 19:23:05'!
ERROR!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'AEC 5/31/2022 19:23:06'!
ERROR!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'AEC 5/31/2022 19:23:06'!
ERROR!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'AEC 5/31/2022 19:23:06'!
ERROR!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'AEC 5/31/2022 19:23:06'!
ERROR!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'AEC 5/31/2022 19:23:06'!
ERROR!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'AEC 5/31/2022 19:23:06'!
ERROR!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'AEC 5/31/2022 19:23:06'!
ERROR!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'AEC 5/31/2022 19:23:06'!
ERROR!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'AEC 5/31/2022 19:23:06'!
ERROR!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'AEC 5/31/2022 19:23:06'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'AEC 5/31/2022 19:23:06'!
ERROR!
!MarsRover methodsFor: 'heading' stamp: 'AEC 5/31/2022 19:23:36' prior: 50474384!
rotateLeft
	
	head value rotateLeft! !
!MarsRover methodsFor: 'heading' stamp: 'AEC 5/31/2022 19:23:41' prior: 50474388!
rotateRight
	
	head value rotateRight! !
!HeadingProxy methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 19:24:00' overrides: 16902254!
value

	^head! !
!PositionProxy methodsFor: 'no messages' stamp: 'AEC 5/31/2022 19:24:46' overrides: 16903929!
update: aPosition

	position := aPosition! !
!PositionProxy methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 19:25:05' overrides: 16902254!
value

	^position! !
!MarsRover methodsFor: 'moving' stamp: 'AEC 5/31/2022 19:26:26'!
headProxyValue

	^ head value! !
!MarsRover methodsFor: 'testing' stamp: 'AEC 5/31/2022 19:26:26' prior: 50476222!
isAt: aPosition heading: aHeadingType

	^position value = aPosition and: [ self headProxyValue isHeading: aHeadingType ]! !
!MarsRover methodsFor: 'heading' stamp: 'AEC 5/31/2022 19:26:26' prior: 50476349!
rotateRight
	
	self headProxyValue rotateRight! !
!MarsRover methodsFor: 'moving' stamp: 'AEC 5/31/2022 19:26:26' prior: 50476287!
moveForward
	
	self headProxyValue moveForward! !
!MarsRover methodsFor: 'heading' stamp: 'AEC 5/31/2022 19:26:26' prior: 50476345!
rotateLeft
	
	self headProxyValue rotateLeft! !
!MarsRover methodsFor: 'moving' stamp: 'AEC 5/31/2022 19:26:26' prior: 50476283!
moveBackward
	
	self headProxyValue moveBackward! !
!MarsRover methodsFor: 'moving' stamp: 'AEC 5/31/2022 19:26:44'!
positionProxyValue

	^ position value! !
!MarsRover methodsFor: 'testing' stamp: 'AEC 5/31/2022 19:26:44' prior: 50476370!
isAt: aPosition heading: aHeadingType

	^self positionProxyValue = aPosition and: [ self headProxyValue isHeading: aHeadingType ]! !
!MarsRover methodsFor: 'moving' stamp: 'AEC 5/31/2022 19:26:44' prior: 50476162!
addToPositionAndLogNewPosition: newPosition

	position update: (self positionProxyValue + newPosition).! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'AEC 5/31/2022 19:26:48'!
ERROR!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'AEC 5/31/2022 19:26:48'!
ERROR!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'AEC 5/31/2022 19:26:48'!
ERROR!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'AEC 5/31/2022 19:26:48'!
ERROR!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'AEC 5/31/2022 19:26:48'!
ERROR!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'AEC 5/31/2022 19:26:48'!
ERROR!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'AEC 5/31/2022 19:26:48'!
ERROR!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'AEC 5/31/2022 19:26:48'!
ERROR!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'AEC 5/31/2022 19:26:49'!
ERROR!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'AEC 5/31/2022 19:26:49'!
ERROR!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'AEC 5/31/2022 19:26:49'!
ERROR!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'AEC 5/31/2022 19:26:49'!
ERROR!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'AEC 5/31/2022 19:26:49'!
ERROR!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'AEC 5/31/2022 19:26:49'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'AEC 5/31/2022 19:26:49'!
ERROR!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'AEC 5/31/2022 19:26:55'!
ERROR!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'AEC 5/31/2022 19:26:55'!
ERROR!
!HeadingProxy class methodsFor: 'no messages' stamp: 'AEC 5/31/2022 19:28:34'!
on: anInitialHeading

	self new initializeOn: anInitialHeading! !
!HeadingProxy methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 19:29:00'!
initializeOn: anInitialHeading

	head := anInitialHeading ! !
!HeadingProxy class methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 19:29:07' prior: 50476474!
on: anInitialHeading

	^ self new initializeOn: anInitialHeading! !
!PositionProxy class methodsFor: 'no messages' stamp: 'AEC 5/31/2022 19:29:28'!
on: anInitialPosition

	^ self new initializeOn: anInitialPosition! !
!PositionProxy methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 19:29:47'!
initializeOn: anInitialPosition

	position := anInitialPosition ! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'AEC 5/31/2022 19:30:10'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'AEC 5/31/2022 19:30:10'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'AEC 5/31/2022 19:30:10'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'AEC 5/31/2022 19:30:10'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'AEC 5/31/2022 19:30:10'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'AEC 5/31/2022 19:30:10'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'AEC 5/31/2022 19:30:10'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'AEC 5/31/2022 19:30:10'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'AEC 5/31/2022 19:30:10'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'AEC 5/31/2022 19:30:10'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'AEC 5/31/2022 19:30:10'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'AEC 5/31/2022 19:30:10'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'AEC 5/31/2022 19:30:10'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'AEC 5/31/2022 19:30:10'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'AEC 5/31/2022 19:30:10'!
PASSED!
!MarsRoverWindow class methodsFor: 'instance creation' stamp: 'AEC 5/31/2022 19:31:08' prior: 50475966!
for: aMarsRover

	^ self new initiailzeFor: aMarsRover ! !
!MarsRoverWindow methodsFor: 'initialization' stamp: 'AEC 5/31/2022 19:31:43' prior: 50476013!
initializeFor: aMarsRover

	self subclassResponsibility ! !

!methodRemoval: MarsRoverWindow #initializeFields stamp: 'AEC 5/31/2022 19:31:48'!
initializeFields

	self subclassResponsibility !

!methodRemoval: MarsRoverWindow #update stamp: 'AEC 5/31/2022 19:31:53'!
update!
!HeadingWindow methodsFor: 'no messages' stamp: 'AEC 5/31/2022 19:41:42' overrides: 50476560!
initializeFor: aMarsRover

	headingField := ''.
	aMarsRover followHeadingChangesWith: self! !
!PositionWindow methodsFor: 'no messages' stamp: 'AEC 5/31/2022 19:42:01' overrides: 50476560!
initializeFor: aMarsRover

	headingField := ''.
	aMarsRover followPositionChangesWith: self! !
!PositionAndHeadingWindow methodsFor: 'no messages' stamp: 'AEC 5/31/2022 19:42:20' overrides: 50476560!
initializeFor: aMarsRover

	headingField := ''.
	aMarsRover followHeadingChangesWith: self.
	aMarsRover followPositionChangesWith: self! !

!methodRemoval: MarsRover #attach: stamp: 'AEC 5/31/2022 19:42:57'!
attach: anObserver 
	
	observers add: anObserver!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 19:43:47'!
followPositionChangesWith: anObserver

	position attach: anObserver! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 19:43:56'!
followHeadingChangesWith: anObserver

	head attach: anObserver! !

!classDefinition: #HeadingProxy category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 19:44:37'!
Object subclass: #HeadingProxy
	instanceVariableNames: 'head observers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!HeadingProxy methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 19:44:36'!
attach: anObserver

	observers add: anObserver! !
!HeadingProxy methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 19:44:59' prior: 50476479!
initializeOn: anInitialHeading

	head := anInitialHeading.
	observers := Set new.! !

!classDefinition: #PositionProxy category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 19:45:27'!
Object subclass: #PositionProxy
	instanceVariableNames: 'position observers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!PositionProxy methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 19:45:26' prior: 50476495!
initializeOn: anInitialPosition

	position := anInitialPosition.
	observers := Set new.! !

!classDefinition: #MarsRoverVariableProxy category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 19:47:25'!
Object subclass: #MarsRoverVariableProxy
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #PositionProxy category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 19:47:25'!
MarsRoverVariableProxy subclass: #PositionProxy
	instanceVariableNames: 'position observers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverVariableProxy subclass: #HeadingProxy
	instanceVariableNames: 'head observers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #HeadingProxy category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 19:47:48'!
MarsRoverVariableProxy subclass: #HeadingProxy
	instanceVariableNames: 'head observers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverVariableProxy subclass: #HeadingProxy
	instanceVariableNames: 'head'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #HeadingProxy category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 19:48:07'!
MarsRoverVariableProxy subclass: #HeadingProxy
	instanceVariableNames: 'head'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverVariableProxy subclass: #PositionProxy
	instanceVariableNames: 'position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #PositionProxy category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 19:48:12'!
MarsRoverVariableProxy subclass: #PositionProxy
	instanceVariableNames: 'position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Object subclass: #MarsRoverVariableProxy
	instanceVariableNames: 'observers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverVariableProxy category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 19:48:16'!
Object subclass: #MarsRoverVariableProxy
	instanceVariableNames: 'observers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverVariableProxy methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 19:48:20'!
attach: anObserver

	observers add: anObserver! !

!methodRemoval: HeadingProxy #attach: stamp: 'AEC 5/31/2022 19:48:20'!
attach: anObserver

	observers add: anObserver!

MarsRoverVariableProxy subclass: #PositionProxy
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #PositionProxy category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 19:48:34'!
MarsRoverVariableProxy subclass: #PositionProxy
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverVariableProxy subclass: #HeadingProxy
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #HeadingProxy category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 19:48:38'!
MarsRoverVariableProxy subclass: #HeadingProxy
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Object subclass: #MarsRoverVariableProxy
	instanceVariableNames: 'value observers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverVariableProxy category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 19:48:45'!
Object subclass: #MarsRoverVariableProxy
	instanceVariableNames: 'value observers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverVariableProxy methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 19:48:52'!
initializeOn: anInitialHeading

	head := anInitialHeading.
	observers := Set new.! !

!methodRemoval: HeadingProxy #initializeOn: stamp: 'AEC 5/31/2022 19:48:52'!
initializeOn: anInitialHeading

	head := anInitialHeading.
	observers := Set new.!

!methodRemoval: PositionProxy #initializeOn: stamp: 'AEC 5/31/2022 19:48:57'!
initializeOn: anInitialPosition

	position := anInitialPosition.
	observers := Set new.!
!MarsRoverVariableProxy methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 19:49:02' overrides: 16903929!
update: aPosition

	position := aPosition! !

!methodRemoval: PositionProxy #update: stamp: 'AEC 5/31/2022 19:49:02'!
update: aPosition

	position := aPosition!
!MarsRoverVariableProxy methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 19:49:05' overrides: 16902254!
value

	^position! !

!methodRemoval: PositionProxy #value stamp: 'AEC 5/31/2022 19:49:06'!
value

	^position!

!methodRemoval: HeadingProxy #update: stamp: 'AEC 5/31/2022 19:49:12'!
update: aHeading

	head := aHeading!

!methodRemoval: HeadingProxy #value stamp: 'AEC 5/31/2022 19:49:15'!
value

	^head!
!MarsRoverVariableProxy methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 19:49:22' prior: 50476758!
initializeOn: anInitialHeading

	value := anInitialHeading.
	observers := Set new.! !
!MarsRoverVariableProxy methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 19:49:30' prior: 50476797!
initializeOn: anInitialValue

	value := anInitialValue.
	observers := Set new.! !
!MarsRoverVariableProxy methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 19:49:45' prior: 50476775 overrides: 16903929!
update: aNewValue

	value := aNewValue! !
!MarsRoverVariableProxy methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 19:49:50' prior: 50476784 overrides: 16902254!
value

	^value! !
!MarsRoverVariableProxy class methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 19:50:22'!
on: anInitialPosition

	^ self new initializeOn: anInitialPosition! !

!methodRemoval: PositionProxy class #on: stamp: 'AEC 5/31/2022 19:50:22'!
on: anInitialPosition

	^ self new initializeOn: anInitialPosition!

!methodRemoval: HeadingProxy class #on: stamp: 'AEC 5/31/2022 19:50:29'!
on: anInitialHeading

	^ self new initializeOn: anInitialHeading!
!MarsRoverVariableProxy class methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 19:50:37' prior: 50476821!
on: anInitialValue

	^ self new initializeOn: anInitialValue! !
!MarsRoverVariableProxy methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 19:53:27' prior: 50476811 overrides: 16903929!
update: aNewValue

	value := aNewValue
	self notify! !
!MarsRoverVariableProxy methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 20:01:48'!
notify

	self subclassResponsibility ! !
!MarsRoverVariableProxy methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 20:02:59' prior: 50476847!
notify

	observers do:[:observer | self notifyObserver: observer ]! !
!MarsRoverVariableProxy methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 20:03:07'!
notifyObserver

	self subclassResponsibility ! !
!HeadingProxy methodsFor: 'no messages' stamp: 'AEC 5/31/2022 20:03:33'!
notifyObserver: anObserver

	anObserver updateHeading: value! !
!PositionProxy methodsFor: 'no messages' stamp: 'AEC 5/31/2022 20:03:47'!
notifyObserver: anObserver

	anObserver updatePosition: value! !
!MarsRoverVariableProxy methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 20:04:23' prior: 50476842 overrides: 16903929!
update: aNewValue

	value := aNewValue.
	self notify! !
!MarsRoverWindow methodsFor: 'accessing' stamp: 'AEC 5/31/2022 20:05:39'!
updateHeading: aMarsRoverHeading
	
	aMarsRoverHeading accept: self! !

!methodRemoval: MarsRoverWindow #headingChangedTo: stamp: 'AEC 5/31/2022 20:05:39'!
headingChangedTo: aMarsRoverHeading
	
	aMarsRoverHeading accept: self!
!MarsRoverWindow methodsFor: 'accessing' stamp: 'AEC 5/31/2022 20:05:55'!
updatePosition: aPosition

	positionField := aPosition asString! !

!methodRemoval: MarsRoverWindow #positionChangedTo: stamp: 'AEC 5/31/2022 20:05:55'!
positionChangedTo: aPosition

	positionField := aPosition asString!
!PositionWindow methodsFor: 'accessing' stamp: 'AEC 5/31/2022 20:06:22' overrides: 50476888!
updatePosition: aPosition

	positionField := aPosition asString! !
!HeadingWindow methodsFor: 'accessing' stamp: 'AEC 5/31/2022 20:06:22' overrides: 50476888!
updatePosition: aPosition

	positionField := aPosition asString! !
!PositionAndHeadingWindow methodsFor: 'accessing' stamp: 'AEC 5/31/2022 20:06:22' overrides: 50476888!
updatePosition: aPosition

	positionField := aPosition asString! !

!methodRemoval: MarsRoverWindow #updatePosition: stamp: 'AEC 5/31/2022 20:06:22'!
updatePosition: aPosition

	positionField := aPosition asString!
!PositionWindow methodsFor: 'accessing' stamp: 'AEC 5/31/2022 20:06:25' overrides: 50476878!
updateHeading: aMarsRoverHeading
	
	aMarsRoverHeading accept: self! !
!HeadingWindow methodsFor: 'accessing' stamp: 'AEC 5/31/2022 20:06:25' overrides: 50476878!
updateHeading: aMarsRoverHeading
	
	aMarsRoverHeading accept: self! !
!PositionAndHeadingWindow methodsFor: 'accessing' stamp: 'AEC 5/31/2022 20:06:25' overrides: 50476878!
updateHeading: aMarsRoverHeading
	
	aMarsRoverHeading accept: self! !

!methodRemoval: MarsRoverWindow #updateHeading: stamp: 'AEC 5/31/2022 20:06:25'!
updateHeading: aMarsRoverHeading
	
	aMarsRoverHeading accept: self!
!PositionWindow methodsFor: 'accessing' stamp: 'AEC 5/31/2022 20:06:30' overrides: 50475531!
visitMarsRoverHeadingEast: aMarsRoverHeadingEast
	
	headingField := 'East'! !
!HeadingWindow methodsFor: 'accessing' stamp: 'AEC 5/31/2022 20:06:31' overrides: 50475531!
visitMarsRoverHeadingEast: aMarsRoverHeadingEast
	
	headingField := 'East'! !
!PositionAndHeadingWindow methodsFor: 'accessing' stamp: 'AEC 5/31/2022 20:06:31' overrides: 50475531!
visitMarsRoverHeadingEast: aMarsRoverHeadingEast
	
	headingField := 'East'! !

!methodRemoval: MarsRoverWindow #visitMarsRoverHeadingEast: stamp: 'AEC 5/31/2022 20:06:31'!
visitMarsRoverHeadingEast: aMarsRoverHeadingEast
	
	headingField := 'East'!
!PositionWindow methodsFor: 'accessing' stamp: 'AEC 5/31/2022 20:06:38' overrides: 50475541!
visitMarsRoverHeadingNorth: aMarsRoverHeadingNorth
	
	headingField := 'North'! !
!HeadingWindow methodsFor: 'accessing' stamp: 'AEC 5/31/2022 20:06:38' overrides: 50475541!
visitMarsRoverHeadingNorth: aMarsRoverHeadingNorth
	
	headingField := 'North'! !
!PositionAndHeadingWindow methodsFor: 'accessing' stamp: 'AEC 5/31/2022 20:06:38' overrides: 50475541!
visitMarsRoverHeadingNorth: aMarsRoverHeadingNorth
	
	headingField := 'North'! !

!methodRemoval: MarsRoverWindow #visitMarsRoverHeadingNorth: stamp: 'AEC 5/31/2022 20:06:39'!
visitMarsRoverHeadingNorth: aMarsRoverHeadingNorth
	
	headingField := 'North'!
!PositionWindow methodsFor: 'accessing' stamp: 'AEC 5/31/2022 20:06:42' overrides: 50475546!
visitMarsRoverHeadingSouth: aMarsRoverHeadingSouth
	
	headingField := 'South'! !
!HeadingWindow methodsFor: 'accessing' stamp: 'AEC 5/31/2022 20:06:42' overrides: 50475546!
visitMarsRoverHeadingSouth: aMarsRoverHeadingSouth
	
	headingField := 'South'! !
!PositionAndHeadingWindow methodsFor: 'accessing' stamp: 'AEC 5/31/2022 20:06:42' overrides: 50475546!
visitMarsRoverHeadingSouth: aMarsRoverHeadingSouth
	
	headingField := 'South'! !

!methodRemoval: MarsRoverWindow #visitMarsRoverHeadingSouth: stamp: 'AEC 5/31/2022 20:06:42'!
visitMarsRoverHeadingSouth: aMarsRoverHeadingSouth
	
	headingField := 'South'!
!PositionWindow methodsFor: 'accessing' stamp: 'AEC 5/31/2022 20:06:45' overrides: 50475536!
visitMarsRoverHeadingWest: aMarsRoverHeadingWest
	
	headingField := 'West'! !
!HeadingWindow methodsFor: 'accessing' stamp: 'AEC 5/31/2022 20:06:45' overrides: 50475536!
visitMarsRoverHeadingWest: aMarsRoverHeadingWest
	
	headingField := 'West'! !
!PositionAndHeadingWindow methodsFor: 'accessing' stamp: 'AEC 5/31/2022 20:06:45' overrides: 50475536!
visitMarsRoverHeadingWest: aMarsRoverHeadingWest
	
	headingField := 'West'! !

!methodRemoval: MarsRoverWindow #visitMarsRoverHeadingWest: stamp: 'AEC 5/31/2022 20:06:45'!
visitMarsRoverHeadingWest: aMarsRoverHeadingWest
	
	headingField := 'West'!

!methodRemoval: HeadingWindow #updatePosition: stamp: 'AEC 5/31/2022 20:06:52'!
updatePosition: aPosition

	positionField := aPosition asString!

!methodRemoval: PositionWindow #updateHeading: stamp: 'AEC 5/31/2022 20:07:00'!
updateHeading: aMarsRoverHeading
	
	aMarsRoverHeading accept: self!

!methodRemoval: PositionWindow #visitMarsRoverHeadingEast: stamp: 'AEC 5/31/2022 20:07:01'!
visitMarsRoverHeadingEast: aMarsRoverHeadingEast
	
	headingField := 'East'!

!methodRemoval: PositionWindow #visitMarsRoverHeadingNorth: stamp: 'AEC 5/31/2022 20:07:02'!
visitMarsRoverHeadingNorth: aMarsRoverHeadingNorth
	
	headingField := 'North'!

!methodRemoval: PositionWindow #visitMarsRoverHeadingSouth: stamp: 'AEC 5/31/2022 20:07:03'!
visitMarsRoverHeadingSouth: aMarsRoverHeadingSouth
	
	headingField := 'South'!

!methodRemoval: PositionWindow #visitMarsRoverHeadingWest: stamp: 'AEC 5/31/2022 20:07:04'!
visitMarsRoverHeadingWest: aMarsRoverHeadingWest
	
	headingField := 'West'!

Object subclass: #MarsRoverWindow
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverWindow category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 20:08:12'!
Object subclass: #MarsRoverWindow
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverWindow subclass: #HeadingWindow
	instanceVariableNames: 'headingField'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #HeadingWindow category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 20:08:17'!
MarsRoverWindow subclass: #HeadingWindow
	instanceVariableNames: 'headingField'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverWindow subclass: #PositionWindow
	instanceVariableNames: 'positionField'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #PositionWindow category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 20:08:22'!
MarsRoverWindow subclass: #PositionWindow
	instanceVariableNames: 'positionField'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverWindow subclass: #PositionAndHeadingWindow
	instanceVariableNames: 'positionField headingField'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #PositionAndHeadingWindow category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 20:08:25'!
MarsRoverWindow subclass: #PositionAndHeadingWindow
	instanceVariableNames: 'positionField headingField'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!testRun: #WindowTest #test01 stamp: 'AEC 5/31/2022 20:08:31'!
ERROR!

!testRun: #WindowTest #test02 stamp: 'AEC 5/31/2022 20:08:31'!
ERROR!

!testRun: #WindowTest #test03 stamp: 'AEC 5/31/2022 20:08:31'!
ERROR!

!testRun: #WindowTest #test04 stamp: 'AEC 5/31/2022 20:08:31'!
ERROR!

!testRun: #WindowTest #test05 stamp: 'AEC 5/31/2022 20:08:31'!
ERROR!

!testRun: #WindowTest #test01 stamp: 'AEC 5/31/2022 20:08:38'!
ERROR!

!testRun: #WindowTest #test01 stamp: 'AEC 5/31/2022 20:08:38'!
ERROR!
!WindowTest methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 20:09:14' prior: 50475261!
test01

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := PositionWindow for: marsRover.
	
	marsRover process: ''.
	
	self assert: '' equals: window positionField! !

!testRun: #WindowTest #test01 stamp: 'AEC 5/31/2022 20:09:15'!
ERROR!
!PositionWindow methodsFor: 'initialization' stamp: 'AEC 5/31/2022 20:09:32' prior: 50476578 overrides: 50476560!
initializeFor: aMarsRover

	positionField := ''.
	aMarsRover followPositionChangesWith: self! !
!PositionAndHeadingWindow methodsFor: 'initialization' stamp: 'AEC 5/31/2022 20:09:45' prior: 50476585 overrides: 50476560!
initializeFor: aMarsRover

	positionField := ''.
	headingField := ''.
	aMarsRover followHeadingChangesWith: self.
	aMarsRover followPositionChangesWith: self! !
!MarsRoverWindow class methodsFor: 'instance creation' stamp: 'AEC 5/31/2022 20:10:03' prior: 50476555!
for: aMarsRover

	^ self new initializeFor: aMarsRover ! !

!testRun: #WindowTest #test01 stamp: 'AEC 5/31/2022 20:10:08'!
ERROR!

!testRun: #WindowTest #test02 stamp: 'AEC 5/31/2022 20:10:08'!
ERROR!

!testRun: #WindowTest #test03 stamp: 'AEC 5/31/2022 20:10:08'!
ERROR!

!testRun: #WindowTest #test04 stamp: 'AEC 5/31/2022 20:10:08'!
ERROR!

!testRun: #WindowTest #test05 stamp: 'AEC 5/31/2022 20:10:08'!
ERROR!

!testRun: #WindowTest #test01 stamp: 'AEC 5/31/2022 20:10:13'!
ERROR!

!testRun: #WindowTest #test01 stamp: 'AEC 5/31/2022 20:10:13'!
ERROR!
!PositionWindow methodsFor: 'nil' stamp: 'AEC 5/31/2022 20:10:47'!
positionField

	^positionField ! !

!testRun: #WindowTest #test01 stamp: 'AEC 5/31/2022 20:11:06'!
PASSED!

!testRun: #WindowTest #test02 stamp: 'AEC 5/31/2022 20:11:06'!
ERROR!

!testRun: #WindowTest #test03 stamp: 'AEC 5/31/2022 20:11:06'!
ERROR!

!testRun: #WindowTest #test04 stamp: 'AEC 5/31/2022 20:11:06'!
ERROR!

!testRun: #WindowTest #test05 stamp: 'AEC 5/31/2022 20:11:06'!
ERROR!
!PositionAndHeadingWindow methodsFor: 'nil' stamp: 'AEC 5/31/2022 20:11:26'!
positionField

	^positionField ! !
!PositionAndHeadingWindow methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 20:11:35'!
headingField

	^headingField ! !
!HeadingWindow methodsFor: 'nil' stamp: 'AEC 5/31/2022 20:13:59'!
headingField

	^headingField ! !

!testRun: #WindowTest #test01 stamp: 'AEC 5/31/2022 20:14:20'!
PASSED!

!testRun: #WindowTest #test02 stamp: 'AEC 5/31/2022 20:14:20'!
ERROR!

!testRun: #WindowTest #test03 stamp: 'AEC 5/31/2022 20:14:20'!
ERROR!

!testRun: #WindowTest #test04 stamp: 'AEC 5/31/2022 20:14:20'!
ERROR!

!testRun: #WindowTest #test05 stamp: 'AEC 5/31/2022 20:14:20'!
ERROR!

!testRun: #WindowTest #test02 stamp: 'AEC 5/31/2022 20:14:25'!
ERROR!

!testRun: #WindowTest #test02 stamp: 'AEC 5/31/2022 20:14:25'!
ERROR!
!WindowTest methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 20:14:39' prior: 50475318!
test02

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := PositionWindow for: marsRover.
	
	marsRover process: 'f'.
	
	self assert: '2@1' equals: window positionField! !
!WindowTest methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 20:14:48' prior: 50475388!
test03

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := HeadingWindow for: marsRover.
	
	marsRover process: ''.
	
	self assert: '' equals: window headingField! !
!WindowTest methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 20:14:56' prior: 50475470!
test04

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := HeadingWindow for: marsRover.
	
	marsRover process: 'rrr'.
	
	self assert: 'North' equals: window headingField! !
!WindowTest methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 20:15:12' prior: 50475690!
test05

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := PositionAndHeadingWindow for: marsRover.
	
	self assert: '' equals: window headingField.
	self assert: '' equals: window positionField.
	
	marsRover process: 'l'.
	
	self assert: 'North' equals: window headingField.
	self assert: '' equals: window positionField.
	
	marsRover process: 'f'.
	
	self assert: 'North' equals: window headingField.
	self assert: '1@2' equals: window positionField.! !

!testRun: #WindowTest #test01 stamp: 'AEC 5/31/2022 20:15:21'!
PASSED!

!testRun: #WindowTest #test02 stamp: 'AEC 5/31/2022 20:15:21'!
PASSED!

!testRun: #WindowTest #test03 stamp: 'AEC 5/31/2022 20:15:21'!
PASSED!

!testRun: #WindowTest #test04 stamp: 'AEC 5/31/2022 20:15:21'!
PASSED!

!testRun: #WindowTest #test05 stamp: 'AEC 5/31/2022 20:15:21'!
PASSED!

Object subclass: #MarsRoverObserver
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverObserver category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 20:35:36'!
Object subclass: #MarsRoverObserver
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverObserver subclass: #PositionObserver
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #PositionObserver category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 20:36:28'!
MarsRoverObserver subclass: #PositionObserver
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

PositionObserver subclass: #PositionWindow
	instanceVariableNames: 'positionField'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #PositionWindow category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 20:37:48'!
PositionObserver subclass: #PositionWindow
	instanceVariableNames: 'positionField'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #PositionWindow category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 20:37:59'!
PositionObserver subclass: #PositionWindow
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #PositionObserver category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 20:37:59'!
MarsRoverObserver subclass: #PositionObserver
	instanceVariableNames: 'positionField'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverObserver subclass: #HeadingObserver
	instanceVariableNames: 'headingField'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #HeadingObserver category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 20:38:23'!
MarsRoverObserver subclass: #HeadingObserver
	instanceVariableNames: 'headingField'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

HeadingObserver subclass: #HeadingWindow
	instanceVariableNames: 'headingField'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

HeadingObserver subclass: #HeadingWindow
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #HeadingWindow category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 20:39:02'!
HeadingObserver subclass: #HeadingWindow
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

HeadingObserver subclass: #HeadingLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #HeadingLogger category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 20:39:29'!
HeadingObserver subclass: #HeadingLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

PositionObserver subclass: #PositionLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #PositionLogger category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 20:39:34'!
PositionObserver subclass: #PositionLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!PositionObserver methodsFor: 'initialization' stamp: 'AEC 5/31/2022 20:39:46'!
initializeFor: aMarsRover

	positionField := ''.
	aMarsRover followPositionChangesWith: self! !

!methodRemoval: PositionWindow #initializeFor: stamp: 'AEC 5/31/2022 20:39:46'!
initializeFor: aMarsRover

	positionField := ''.
	aMarsRover followPositionChangesWith: self!
!PositionObserver methodsFor: 'accessing' stamp: 'AEC 5/31/2022 20:39:52'!
positionField

	^positionField ! !

!methodRemoval: PositionWindow #positionField stamp: 'AEC 5/31/2022 20:39:52'!
positionField

	^positionField !
!PositionObserver methodsFor: 'nil' stamp: 'AEC 5/31/2022 20:40:08'!
updatePosition: aPosition

	self subclassResponsibility ! !
!PositionObserver methodsFor: 'initialization' stamp: 'AEC 5/31/2022 20:41:12' prior: 50477398!
initializeFor: aMarsRover

	self initializeField.
	aMarsRover followPositionChangesWith: self! !
!PositionObserver methodsFor: 'initialization' stamp: 'AEC 5/31/2022 20:41:21'!
initializeField

	self subclassResponsibility ! !
!PositionLogger methodsFor: 'no messages' stamp: 'AEC 5/31/2022 20:42:14' overrides: 50477427!
initializeField

	positionField := WriteStream on: '' ! !
!PositionWindow methodsFor: 'updating' stamp: 'AEC 5/31/2022 20:42:52' overrides: 50477427!
initializeField

	positionField := ''! !
!PositionLogger methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 20:43:25' overrides: 50477416!
updatePosition: aPosition

	positionField print: aPosition; newLine! !
!HeadingObserver methodsFor: 'updating' stamp: 'AEC 5/31/2022 20:45:05'!
visitMarsRoverHeadingEast: aMarsRoverHeadingEast
	
	headingField := 'East'! !

!methodRemoval: HeadingWindow #visitMarsRoverHeadingEast: stamp: 'AEC 5/31/2022 20:45:05'!
visitMarsRoverHeadingEast: aMarsRoverHeadingEast
	
	headingField := 'East'!
!HeadingObserver methodsFor: 'updating' stamp: 'AEC 5/31/2022 20:45:09'!
visitMarsRoverHeadingNorth: aMarsRoverHeadingNorth
	
	headingField := 'North'! !

!methodRemoval: HeadingWindow #visitMarsRoverHeadingNorth: stamp: 'AEC 5/31/2022 20:45:09'!
visitMarsRoverHeadingNorth: aMarsRoverHeadingNorth
	
	headingField := 'North'!
!HeadingObserver methodsFor: 'updating' stamp: 'AEC 5/31/2022 20:45:14'!
visitMarsRoverHeadingSouth: aMarsRoverHeadingSouth
	
	headingField := 'South'! !

!methodRemoval: HeadingWindow #visitMarsRoverHeadingSouth: stamp: 'AEC 5/31/2022 20:45:14'!
visitMarsRoverHeadingSouth: aMarsRoverHeadingSouth
	
	headingField := 'South'!
!HeadingObserver methodsFor: 'updating' stamp: 'AEC 5/31/2022 20:45:18'!
visitMarsRoverHeadingWest: aMarsRoverHeadingWest
	
	headingField := 'West'! !

!methodRemoval: HeadingWindow #visitMarsRoverHeadingWest: stamp: 'AEC 5/31/2022 20:45:18'!
visitMarsRoverHeadingWest: aMarsRoverHeadingWest
	
	headingField := 'West'!
!HeadingObserver methodsFor: 'updating' stamp: 'AEC 5/31/2022 20:45:23'!
updateHeading: aMarsRoverHeading
	
	aMarsRoverHeading accept: self! !

!methodRemoval: HeadingWindow #updateHeading: stamp: 'AEC 5/31/2022 20:45:23'!
updateHeading: aMarsRoverHeading
	
	aMarsRoverHeading accept: self!
!HeadingObserver methodsFor: 'accessing' stamp: 'AEC 5/31/2022 20:45:29'!
headingField

	^headingField ! !

!methodRemoval: HeadingWindow #headingField stamp: 'AEC 5/31/2022 20:45:29'!
headingField

	^headingField !
!HeadingWindow methodsFor: 'updating' stamp: 'AEC 5/31/2022 20:46:27' overrides: 50477447!
visitMarsRoverHeadingEast: aMarsRoverHeadingEast
	
	headingField := 'East'! !
!HeadingLogger methodsFor: 'updating' stamp: 'AEC 5/31/2022 20:46:27' overrides: 50477447!
visitMarsRoverHeadingEast: aMarsRoverHeadingEast
	
	headingField := 'East'! !

!methodRemoval: HeadingObserver #visitMarsRoverHeadingEast: stamp: 'AEC 5/31/2022 20:46:27'!
visitMarsRoverHeadingEast: aMarsRoverHeadingEast
	
	headingField := 'East'!
!HeadingWindow methodsFor: 'updating' stamp: 'AEC 5/31/2022 20:46:35' overrides: 50477457!
visitMarsRoverHeadingNorth: aMarsRoverHeadingNorth
	
	headingField := 'North'! !
!HeadingLogger methodsFor: 'updating' stamp: 'AEC 5/31/2022 20:46:36' overrides: 50477457!
visitMarsRoverHeadingNorth: aMarsRoverHeadingNorth
	
	headingField := 'North'! !

!methodRemoval: HeadingObserver #visitMarsRoverHeadingNorth: stamp: 'AEC 5/31/2022 20:46:36'!
visitMarsRoverHeadingNorth: aMarsRoverHeadingNorth
	
	headingField := 'North'!
!HeadingWindow methodsFor: 'updating' stamp: 'AEC 5/31/2022 20:46:41' overrides: 50477468!
visitMarsRoverHeadingSouth: aMarsRoverHeadingSouth
	
	headingField := 'South'! !
!HeadingLogger methodsFor: 'updating' stamp: 'AEC 5/31/2022 20:46:41' overrides: 50477468!
visitMarsRoverHeadingSouth: aMarsRoverHeadingSouth
	
	headingField := 'South'! !

!methodRemoval: HeadingObserver #visitMarsRoverHeadingSouth: stamp: 'AEC 5/31/2022 20:46:41'!
visitMarsRoverHeadingSouth: aMarsRoverHeadingSouth
	
	headingField := 'South'!
!HeadingWindow methodsFor: 'updating' stamp: 'AEC 5/31/2022 20:46:45' overrides: 50477479!
visitMarsRoverHeadingWest: aMarsRoverHeadingWest
	
	headingField := 'West'! !
!HeadingLogger methodsFor: 'updating' stamp: 'AEC 5/31/2022 20:46:45' overrides: 50477479!
visitMarsRoverHeadingWest: aMarsRoverHeadingWest
	
	headingField := 'West'! !

!methodRemoval: HeadingObserver #visitMarsRoverHeadingWest: stamp: 'AEC 5/31/2022 20:46:45'!
visitMarsRoverHeadingWest: aMarsRoverHeadingWest
	
	headingField := 'West'!
!HeadingLogger methodsFor: 'nil' stamp: 'AEC 5/31/2022 20:47:57'!
initializeFor: aMarsRover

	headingField := WriteStream on: ''.
	aMarsRover followHeadingChangesWith: self! !
!HeadingObserver methodsFor: 'nil' stamp: 'AEC 5/31/2022 20:48:33'!
visitMarsRoverHeadingSouth: aMarsRoverHeadingSouth
	
	self subclassResponsibility! !
!HeadingObserver methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 20:48:40'!
visitMarsRoverHeadingNorth: aMarsRoverHeadingSouth
	
	self subclassResponsibility! !
!HeadingObserver methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 20:48:47' prior: 50477586!
visitMarsRoverHeadingNorth: aMarsRoverHeadingNorth
	
	self subclassResponsibility! !
!HeadingObserver methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 20:49:43'!
visitMarsRoverHeadingEast: aMarsRoverHeadingEast
	
	self subclassResponsibility! !
!HeadingObserver methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 20:49:51'!
visitMarsRoverHeadingWest: aMarsRoverHeadingWest
	
	self subclassResponsibility! !
!HeadingLogger methodsFor: 'updating' stamp: 'AEC 5/31/2022 20:51:00' prior: 50477513 overrides: 50477598!
visitMarsRoverHeadingEast: aMarsRoverHeadingEast
	
	headingField nextPutAll: 'East'; newLine ! !
!HeadingLogger methodsFor: 'updating' stamp: 'AEC 5/31/2022 20:51:16' prior: 50477530 overrides: 50477592!
visitMarsRoverHeadingNorth: aMarsRoverHeadingNorth
	
	headingField nextPutAll: 'North'; newLine! !
!HeadingLogger methodsFor: 'updating' stamp: 'AEC 5/31/2022 20:51:34' prior: 50477547 overrides: 50477580!
visitMarsRoverHeadingSouth: aMarsRoverHeadingSouth
	
	headingField nextPutAll: 'South'; newLine! !
!HeadingLogger methodsFor: 'updating' stamp: 'AEC 5/31/2022 20:51:42' prior: 50477564 overrides: 50477604!
visitMarsRoverHeadingWest: aMarsRoverHeadingWest
	
	headingField nextPutAll: 'West'; newLine! !
!HeadingObserver methodsFor: 'nil' stamp: 'AEC 5/31/2022 20:52:42'!
initializeFor: aMarsRover

	self initializeField.
	aMarsRover followHeadingChangesWith: self! !
!HeadingObserver methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 20:53:10'!
initializeField: aMarsRover

	self initializeField.
	aMarsRover followHeadingChangesWith: self! !
!HeadingLogger methodsFor: 'initialization' stamp: 'AEC 5/31/2022 20:53:10' overrides: 50477643!
initializeField: aMarsRover

	headingField := WriteStream on: ''.
	aMarsRover followHeadingChangesWith: self! !
!HeadingWindow methodsFor: 'initialization' stamp: 'AEC 5/31/2022 20:53:10' overrides: 50477643!
initializeField: aMarsRover

	headingField := ''.
	aMarsRover followHeadingChangesWith: self! !

!methodRemoval: HeadingObserver #initializeFor: stamp: 'AEC 5/31/2022 20:53:10'!
initializeFor: aMarsRover

	self initializeField.
	aMarsRover followHeadingChangesWith: self!

!methodRemoval: HeadingLogger #initializeFor: stamp: 'AEC 5/31/2022 20:53:10'!
initializeFor: aMarsRover

	headingField := WriteStream on: ''.
	aMarsRover followHeadingChangesWith: self!

!methodRemoval: HeadingWindow #initializeFor: stamp: 'AEC 5/31/2022 20:53:10'!
initializeFor: aMarsRover

	headingField := ''.
	aMarsRover followHeadingChangesWith: self!
!HeadingLogger methodsFor: 'initialization' stamp: 'AEC 5/31/2022 20:53:43' prior: 50477650 overrides: 50477643!
initializeField: aMarsRover

	headingField := WriteStream on: ''.! !
!HeadingWindow methodsFor: 'initialization' stamp: 'AEC 5/31/2022 20:53:56' prior: 50477657 overrides: 50477643!
initializeField: aMarsRover

	headingField := ''.! !
!HeadingObserver methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 20:54:17'!
initializeFor: aMarsRover

	self initializeField.
	aMarsRover followHeadingChangesWith: self! !

!methodRemoval: HeadingObserver #initializeField: stamp: 'AEC 5/31/2022 20:54:22'!
initializeField: aMarsRover

	self initializeField.
	aMarsRover followHeadingChangesWith: self!
!HeadingLogger methodsFor: 'initialization' stamp: 'AEC 5/31/2022 20:54:30'!
initializeField

	headingField := WriteStream on: ''.! !

!methodRemoval: HeadingLogger #initializeField: stamp: 'AEC 5/31/2022 20:54:30'!
initializeField: aMarsRover

	headingField := WriteStream on: ''.!
!HeadingWindow methodsFor: 'initialization' stamp: 'AEC 5/31/2022 20:54:39'!
initializeField

	headingField := ''.! !

!methodRemoval: HeadingWindow #initializeField: stamp: 'AEC 5/31/2022 20:54:39'!
initializeField: aMarsRover

	headingField := ''.!
!HeadingObserver methodsFor: 'initialization' stamp: 'AEC 5/31/2022 20:55:50' prior: 50477692!
initializeFor: aMarsRover

	self initializeField.
	aMarsRover followHeadingChangesWith: self! !
!HeadingObserver methodsFor: 'initialization' stamp: 'AEC 5/31/2022 20:55:58'!
initializeField

	self subclassResponsibility ! !
!MarsRoverObserver class methodsFor: 'no messages' stamp: 'AEC 5/31/2022 20:56:40'!
for: aMarsRover

	^ self new initializeFor: aMarsRover! !
!MarsRoverObserver methodsFor: 'no messages' stamp: 'AEC 5/31/2022 20:56:59'!
initializeFor: aMarsRover

	self subclassResponsibility ! !
!MarsRoverLogger class methodsFor: 'instance creation' stamp: 'AEC 5/31/2022 21:25:41' prior: 50475074!
followPositionAndHeadingChangesOn: aMarsRover 

	| headingObserver observers positionObserver |
	positionObserver := PositionObserver for: aMarsRover.
	headingObserver := HeadingObserver for: aMarsRover.
	
	observers := OrderedCollection with: positionObserver with: headingObserver.
	
	^self withObservers: observers.! !
!MarsRoverLogger class methodsFor: 'instance creation' stamp: 'AEC 5/31/2022 21:25:55' prior: 50477744!
followPositionAndHeadingChangesOn: aMarsRover 

	| headingObserver observers positionObserver |
	
	positionObserver := PositionObserver for: aMarsRover.
	headingObserver := HeadingObserver for: aMarsRover.
	
	observers := OrderedCollection with: positionObserver with: headingObserver.
	
	^self withObservers: observers.! !
!MarsRoverLogger class methodsFor: 'instance creation' stamp: 'AEC 5/31/2022 21:26:25'!
withObservers: aCollectionOfObservers

	self new initializeWithObservers: aCollectionOfObservers ! !
!MarsRoverLogger class methodsFor: 'instance creation' stamp: 'AEC 5/31/2022 21:26:33' prior: 50477771!
withObservers: aCollectionOfObservers

	^ self new initializeWithObservers: aCollectionOfObservers ! !
!MarsRoverLogger class methodsFor: 'instance creation' stamp: 'AEC 5/31/2022 21:26:59' prior: 50474746!
followPositionChangesOn: aMarsRover 
	
	| observers positionObserver |
	
	positionObserver := PositionObserver for: aMarsRover.
	
	observers := OrderedCollection with: positionObserver.
	
	^self withObservers: observers.! !
!MarsRoverLogger class methodsFor: 'instance creation' stamp: 'AEC 5/31/2022 21:27:20' prior: 50474740!
followHeadingChangesOn: aMarsRover 
	
	| headingObserver observers |
	
	headingObserver := HeadingObserver for: aMarsRover.
	
	observers := OrderedCollection with: headingObserver.
	
	^self withObservers: observers.! !

!classDefinition: #MarsRoverLogger category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 21:29:16'!
Object subclass: #MarsRoverLogger
	instanceVariableNames: 'log marsRover observers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 21:29:14'!
initializeWithObservers: aCollectionOfObservers 

	observers := aCollectionOfObservers ! !

!methodRemoval: MarsRoverLogger #visitMarsRoverHeadingEast: stamp: 'AEC 5/31/2022 21:29:29'!
visitMarsRoverHeadingEast: aMarsRoverHeadingEast 
	
	log nextPutAll: 'East'; newLine!

!methodRemoval: MarsRoverLogger #visitMarsRoverHeadingNorth: stamp: 'AEC 5/31/2022 21:29:31'!
visitMarsRoverHeadingNorth: aMarsRoverHeadingNorth
	
	log nextPutAll: 'North'; newLine!

!methodRemoval: MarsRoverLogger #visitMarsRoverHeadingSouth: stamp: 'AEC 5/31/2022 21:29:33'!
visitMarsRoverHeadingSouth: aMarsRoverHeadingSouth
	
	log nextPutAll: 'South'; newLine!

!methodRemoval: MarsRoverLogger #visitMarsRoverHeadingWest: stamp: 'AEC 5/31/2022 21:29:35'!
visitMarsRoverHeadingWest: aMarsRoverHeadingWest
	
	log nextPutAll: 'West'; newLine!

!methodRemoval: MarsRoverLogger #followHeadingChangesOn: stamp: 'AEC 5/31/2022 21:29:40'!
followHeadingChangesOn: aMarsRover 
	
	aMarsRover attach: self!

!methodRemoval: MarsRoverLogger #followPositionChangesOn: stamp: 'AEC 5/31/2022 21:29:41'!
followPositionChangesOn: aMarsRover 
	
	aMarsRover attach: self!

!methodRemoval: MarsRoverLogger #headingChangedTo: stamp: 'AEC 5/31/2022 21:29:46'!
headingChangedTo: aMarsRoverHeading
	
	aMarsRoverHeading accept: self!
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 21:30:08' prior: 50477814!
initializeWithObservers: aCollectionOfObservers 

	observers := aCollectionOfObservers .
	log  := WriteStream on: ''! !

!methodRemoval: MarsRoverLogger #initialize stamp: 'AEC 5/31/2022 21:30:11'!
initialize

	log  := WriteStream on: ''!
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 21:30:33'!
updateFrom: aPosition

	log print: aPosition; newLine! !

!methodRemoval: MarsRoverLogger #positionChangedTo: stamp: 'AEC 5/31/2022 21:30:33'!
positionChangedTo: aPosition

	log print: aPosition; newLine!
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 21:30:38' prior: 50477869!
updateFrom: anObserver

	log print: anObserver; newLine! !
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 21:31:13' prior: 50477879!
updateFrom: anObserver

	log print: anObserver getState; newLine! !

!methodRemoval: MarsRoverLogger #initializeFollowPositionAndHeadingChangesOn: stamp: 'AEC 5/31/2022 21:31:24'!
initializeFollowPositionAndHeadingChangesOn: aMarsRover 

	aMarsRover attach: self.!
!MarsRoverLogger class methodsFor: 'instance creation' stamp: 'AEC 5/31/2022 21:33:17' prior: 50477796!
followHeadingChangesOn: aMarsRover 
	
	| headingObserver observers |
	
	headingObserver := HeadingObserver for: self observing: aMarsRover.
	
	observers := OrderedCollection with: headingObserver.
	
	^self withObservers: observers.! !
!MarsRoverLogger class methodsFor: 'instance creation' stamp: 'AEC 5/31/2022 21:33:41' prior: 50477758!
followPositionAndHeadingChangesOn: aMarsRover 

	| headingObserver observers positionObserver |
	
	positionObserver := PositionObserver for: self observing: aMarsRover.
	headingObserver := HeadingObserver for: self observing: aMarsRover.
	
	observers := OrderedCollection with: positionObserver with: headingObserver.
	
	^self withObservers: observers.! !
!MarsRoverLogger class methodsFor: 'instance creation' stamp: 'AEC 5/31/2022 21:33:50' prior: 50477785!
followPositionChangesOn: aMarsRover 
	
	| observers positionObserver |
	
	positionObserver := PositionObserver for: self observing: aMarsRover.
	
	observers := OrderedCollection with: positionObserver.
	
	^self withObservers: observers.! !
!MarsRoverObserver class methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 21:35:14'!
for: anXXX for: aMarsRover

	^ self new initializeFor: aMarsRover! !
!WindowTest methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 21:35:14' prior: 50477226!
test02

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := PositionWindow for: self for: marsRover.
	
	marsRover process: 'f'.
	
	self assert: '2@1' equals: window positionField! !
!WindowTest methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 21:35:14' prior: 50477236!
test03

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := HeadingWindow for: self for: marsRover.
	
	marsRover process: ''.
	
	self assert: '' equals: window headingField! !
!WindowTest methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 21:35:14' prior: 50477134!
test01

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := PositionWindow for: self for: marsRover.
	
	marsRover process: ''.
	
	self assert: '' equals: window positionField! !
!WindowTest methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 21:35:14' prior: 50477246!
test04

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := HeadingWindow for: self for: marsRover.
	
	marsRover process: 'rrr'.
	
	self assert: 'North' equals: window headingField! !

!methodRemoval: MarsRoverObserver class #for: stamp: 'AEC 5/31/2022 21:35:14'!
for: aMarsRover

	^ self new initializeFor: aMarsRover!
!MarsRoverObserver class methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 21:35:27'!
for: anXXX observing: aMarsRover

	^ self new initializeFor: aMarsRover! !
!WindowTest methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 21:35:27' prior: 50477970!
test04

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := HeadingWindow for: self observing: marsRover.
	
	marsRover process: 'rrr'.
	
	self assert: 'North' equals: window headingField! !
!WindowTest methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 21:35:27' prior: 50477939!
test02

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := PositionWindow for: self observing: marsRover.
	
	marsRover process: 'f'.
	
	self assert: '2@1' equals: window positionField! !
!WindowTest methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 21:35:27' prior: 50477960!
test01

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := PositionWindow for: self observing: marsRover.
	
	marsRover process: ''.
	
	self assert: '' equals: window positionField! !
!WindowTest methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 21:35:27' prior: 50477950!
test03

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := HeadingWindow for: self observing: marsRover.
	
	marsRover process: ''.
	
	self assert: '' equals: window headingField! !

!methodRemoval: MarsRoverObserver class #for:for: stamp: 'AEC 5/31/2022 21:35:27'!
for: anXXX for: aMarsRover

	^ self new initializeFor: aMarsRover!
!MarsRoverObserver methodsFor: 'initialization' stamp: 'AEC 5/31/2022 21:36:05'!
initializeFor: anXXX initializeFor: aMarsRover

	self subclassResponsibility ! !
!HeadingObserver methodsFor: 'initialization' stamp: 'AEC 5/31/2022 21:36:05' overrides: 50478039!
initializeFor: anXXX initializeFor: aMarsRover

	self initializeField.
	aMarsRover followHeadingChangesWith: self! !
!PositionObserver methodsFor: 'initialization' stamp: 'AEC 5/31/2022 21:36:05' overrides: 50478039!
initializeFor: anXXX initializeFor: aMarsRover

	self initializeField.
	aMarsRover followPositionChangesWith: self! !
!MarsRoverObserver class methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 21:36:05' prior: 50477985!
for: anXXX observing: aMarsRover

	^ self new initializeFor: anXXX initializeFor: aMarsRover! !

!methodRemoval: MarsRoverObserver #initializeFor: stamp: 'AEC 5/31/2022 21:36:05'!
initializeFor: aMarsRover

	self subclassResponsibility !

!methodRemoval: HeadingObserver #initializeFor: stamp: 'AEC 5/31/2022 21:36:05'!
initializeFor: aMarsRover

	self initializeField.
	aMarsRover followHeadingChangesWith: self!

!methodRemoval: PositionObserver #initializeFor: stamp: 'AEC 5/31/2022 21:36:05'!
initializeFor: aMarsRover

	self initializeField.
	aMarsRover followPositionChangesWith: self!
!MarsRoverObserver methodsFor: 'initialization' stamp: 'AEC 5/31/2022 21:36:14'!
initializeFor: anXXX observing: aMarsRover

	self subclassResponsibility ! !
!HeadingObserver methodsFor: 'initialization' stamp: 'AEC 5/31/2022 21:36:14' overrides: 50478082!
initializeFor: anXXX observing: aMarsRover

	self initializeField.
	aMarsRover followHeadingChangesWith: self! !
!PositionObserver methodsFor: 'initialization' stamp: 'AEC 5/31/2022 21:36:14' overrides: 50478082!
initializeFor: anXXX observing: aMarsRover

	self initializeField.
	aMarsRover followPositionChangesWith: self! !
!MarsRoverObserver class methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 21:36:14' prior: 50478060!
for: anXXX observing: aMarsRover

	^ self new initializeFor: anXXX observing: aMarsRover! !

!methodRemoval: MarsRoverObserver #initializeFor:initializeFor: stamp: 'AEC 5/31/2022 21:36:14'!
initializeFor: anXXX initializeFor: aMarsRover

	self subclassResponsibility !

!methodRemoval: HeadingObserver #initializeFor:initializeFor: stamp: 'AEC 5/31/2022 21:36:14'!
initializeFor: anXXX initializeFor: aMarsRover

	self initializeField.
	aMarsRover followHeadingChangesWith: self!

!methodRemoval: PositionObserver #initializeFor:initializeFor: stamp: 'AEC 5/31/2022 21:36:14'!
initializeFor: anXXX initializeFor: aMarsRover

	self initializeField.
	aMarsRover followPositionChangesWith: self!

!classDefinition: #PositionObserver category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 21:37:26'!
MarsRoverObserver subclass: #PositionObserver
	instanceVariableNames: 'positionField xxx'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!PositionObserver methodsFor: 'initialization' stamp: 'AEC 5/31/2022 21:37:24' prior: 50478095 overrides: 50478082!
initializeFor: anXXX observing: aMarsRover

	xxx := anXXX.
	aMarsRover followPositionChangesWith: self! !
!PositionObserver methodsFor: 'initialization' stamp: 'AEC 5/31/2022 21:49:07' prior: 50478136 overrides: 50478082!
initializeFor: anInterested observing: aMarsRover

	xxx := anInterested.
	aMarsRover followPositionChangesWith: self! !

!classDefinition: #PositionObserver category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 21:49:12'!
MarsRoverObserver subclass: #PositionObserver
	instanceVariableNames: 'positionField interested'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!PositionObserver methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 21:49:12' prior: 50478143 overrides: 50478082!
initializeFor: anInterested observing: aMarsRover

	interested := anInterested.
	aMarsRover followPositionChangesWith: self! !
!PositionObserver methodsFor: 'updating' stamp: 'AEC 5/31/2022 21:50:04' prior: 50477416!
updatePosition: aPosition

	interested updateFrom: self ! !
!PositionObserver methodsFor: 'accessing' stamp: 'AEC 5/31/2022 21:50:20'!
getState

	^positionField ! !

!methodRemoval: PositionObserver #positionField stamp: 'AEC 5/31/2022 21:50:20'!
positionField

	^positionField !
!PositionObserver methodsFor: 'updating' stamp: 'AEC 5/31/2022 21:50:44' prior: 50478167!
updatePosition: aPosition

	positionField := aPosition.
	interested updateFrom: self ! !

!classDefinition: #PositionObserver category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 21:51:57'!
MarsRoverObserver subclass: #PositionObserver
	instanceVariableNames: 'lastKnownPosition interested'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!PositionObserver methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 21:51:57' prior: 50478172!
getState

	^lastKnownPosition ! !
!PositionObserver methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 21:51:57' prior: 50478180!
updatePosition: aPosition

	lastKnownPosition := aPosition.
	interested updateFrom: self ! !
!PositionWindow methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 21:51:58' prior: 50476898 overrides: 50478200!
updatePosition: aPosition

	lastKnownPosition := aPosition asString! !
!PositionWindow methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 21:51:58' prior: 50477437 overrides: 50477427!
initializeField

	lastKnownPosition := ''! !
!PositionLogger methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 21:51:58' prior: 50477432 overrides: 50477427!
initializeField

	lastKnownPosition := WriteStream on: '' ! !
!PositionLogger methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 21:51:58' prior: 50477442 overrides: 50478200!
updatePosition: aPosition

	lastKnownPosition print: aPosition; newLine! !
!HeadingObserver methodsFor: 'initialization' stamp: 'AEC 5/31/2022 21:52:30' prior: 50478088 overrides: 50478082!
initializeFor: anInterested observing: aMarsRover

	self initializeField.
	aMarsRover followHeadingChangesWith: self! !

!classDefinition: #HeadingObserver category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 21:52:54'!
MarsRoverObserver subclass: #HeadingObserver
	instanceVariableNames: 'headingField interested'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!HeadingObserver methodsFor: 'initialization' stamp: 'AEC 5/31/2022 21:52:53' prior: 50478231 overrides: 50478082!
initializeFor: anInterested observing: aMarsRover

	interested := anInterested.
	aMarsRover followHeadingChangesWith: self! !
!HeadingObserver methodsFor: 'updating' stamp: 'AEC 5/31/2022 21:54:13' prior: 50477489!
updateHeading: aMarsRoverHeading
	
	aMarsRoverHeading accept: self.
	interested updateFrom: self.! !
!PositionObserver methodsFor: 'updating' stamp: 'AEC 5/31/2022 21:57:46' prior: 50478200!
updatePosition: aPosition

	lastKnownPosition := aPosition.
	interested updatePosition: aPosition! !
!HeadingObserver methodsFor: 'updating' stamp: 'AEC 5/31/2022 21:58:06' prior: 50478255!
updateHeading: aMarsRoverHeading
	
	aMarsRoverHeading accept: self.
	interested updateHeading: aMarsRoverHeading.! !
!HeadingObserver methodsFor: 'updating' stamp: 'AEC 5/31/2022 21:58:31' prior: 50478267!
updateHeading: aMarsRoverHeading
	
	aMarsRoverHeading accept: self.! !
!HeadingObserver methodsFor: 'updating' stamp: 'AEC 5/31/2022 21:58:49' prior: 50477598!
visitMarsRoverHeadingEast: aMarsRoverHeadingEast
	
	interested updateHeading: 'East'.! !
!HeadingObserver methodsFor: 'updating' stamp: 'AEC 5/31/2022 21:58:55' prior: 50477592!
visitMarsRoverHeadingNorth: aMarsRoverHeadingNorth
	
	interested updateHeading: 'North'.! !
!HeadingObserver methodsFor: 'updating' stamp: 'AEC 5/31/2022 21:59:00' prior: 50477580!
visitMarsRoverHeadingSouth: aMarsRoverHeadingSouth
	
	interested updateHeading: 'South'.! !
!HeadingObserver methodsFor: 'updating' stamp: 'AEC 5/31/2022 21:59:07' prior: 50477604!
visitMarsRoverHeadingWest: aMarsRoverHeadingWest
	
	interested updateHeading: 'West'.! !

!classRemoval: #HeadingLogger stamp: 'AEC 5/31/2022 21:59:29'!
HeadingObserver subclass: #HeadingLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!WindowTest methodsFor: 'tests' stamp: 'AEC 5/31/2022 22:00:00' prior: 50478024!
test03

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := HeadingObserver for: self observing: marsRover.
	
	marsRover process: ''.
	
	self assert: '' equals: window headingField! !
!WindowTest methodsFor: 'tests' stamp: 'AEC 5/31/2022 22:00:06' prior: 50477991!
test04

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := HeadingObserver for: self observing: marsRover.
	
	marsRover process: 'rrr'.
	
	self assert: 'North' equals: window headingField! !

!classRemoval: #HeadingWindow stamp: 'AEC 5/31/2022 22:00:12'!
HeadingObserver subclass: #HeadingWindow
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #PositionLogger stamp: 'AEC 5/31/2022 22:00:20'!
PositionObserver subclass: #PositionLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!WindowTest methodsFor: 'tests' stamp: 'AEC 5/31/2022 22:00:30' prior: 50478013!
test01

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := PositionObserver for: self observing: marsRover.
	
	marsRover process: ''.
	
	self assert: '' equals: window positionField! !
!WindowTest methodsFor: 'tests' stamp: 'AEC 5/31/2022 22:00:35' prior: 50478002!
test02

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := PositionObserver for: self observing: marsRover.
	
	marsRover process: 'f'.
	
	self assert: '2@1' equals: window positionField! !

!classRemoval: #PositionWindow stamp: 'AEC 5/31/2022 22:00:42'!
PositionObserver subclass: #PositionWindow
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverLogger methodsFor: 'updating' stamp: 'AEC 5/31/2022 22:01:10'!
updatePosition: anObserver

	log print: anObserver getState; newLine! !

!methodRemoval: MarsRoverLogger #updateFrom: stamp: 'AEC 5/31/2022 22:01:10'!
updateFrom: anObserver

	log print: anObserver getState; newLine!
!MarsRoverLogger methodsFor: 'updating' stamp: 'AEC 5/31/2022 22:01:19' prior: 50478370!
updatePosition: aPosition

	log print: aPosition; newLine! !
!MarsRoverLogger methodsFor: 'updating' stamp: 'AEC 5/31/2022 22:01:33' prior: 50478380!
updatePosition: aPosition

	self addToLog: aPosition! !
!MarsRoverLogger methodsFor: 'updating' stamp: 'AEC 5/31/2022 22:01:50'!
updateHeading: aHeading

	self addToLog: aHeading! !
!MarsRoverLogger methodsFor: 'nil' stamp: 'AEC 5/31/2022 22:02:00'!
addToLog: aLine

	log print: aLine; newLine! !

!testRun: #AlgoTest #test01 stamp: 'AEC 5/31/2022 22:02:22'!
PASSED!

!testRun: #AlgoTest #test02 stamp: 'AEC 5/31/2022 22:02:22'!
ERROR!

!testRun: #AlgoTest #test03 stamp: 'AEC 5/31/2022 22:02:22'!
ERROR!

!testRun: #AlgoTest #test04 stamp: 'AEC 5/31/2022 22:02:22'!
ERROR!

!testRun: #AlgoTest #test05 stamp: 'AEC 5/31/2022 22:02:22'!
ERROR!

!testRun: #AlgoTest #test06 stamp: 'AEC 5/31/2022 22:02:22'!
ERROR!

!testRun: #AlgoTest #test07 stamp: 'AEC 5/31/2022 22:02:22'!
ERROR!

!testRun: #AlgoTest #test02 stamp: 'AEC 5/31/2022 22:02:28'!
ERROR!

!testRun: #AlgoTest #test02 stamp: 'AEC 5/31/2022 22:02:28'!
ERROR!

!testRun: #AlgoTest #test02 stamp: 'AEC 5/31/2022 22:03:14'!
ERROR!

!testRun: #AlgoTest #test02 stamp: 'AEC 5/31/2022 22:03:14'!
ERROR!

^self withObservers: observers!

!testRun: #AlgoTest #test02 stamp: 'AEC 5/31/2022 22:05:19'!
ERROR!
!MarsRoverLogger class methodsFor: 'instance creation' stamp: 'AEC 5/31/2022 22:07:15' prior: 50477907!
followPositionAndHeadingChangesOn: aMarsRover 

	^self new initializeFollowingPositionAndHeadingChangesOn: aMarsRover.! !
!MarsRoverLogger methodsFor: 'initialization' stamp: 'AEC 5/31/2022 22:08:02'!
initializeFollowingPositionAndHeadingFor: aMarsRover 

	| headingObserver positionObserver |
	
	positionObserver := PositionObserver for: self observing: aMarsRover.
	headingObserver := HeadingObserver for: self observing: aMarsRover.
	
	observers := OrderedCollection with: positionObserver with: headingObserver.
	
	log  := WriteStream on: ''! !
!MarsRoverLogger methodsFor: 'initialization' stamp: 'AEC 5/31/2022 22:08:17'!
initializeFollowingPositionAndHeadingChangesOn: aMarsRover 

	| headingObserver positionObserver |
	
	positionObserver := PositionObserver for: self observing: aMarsRover.
	headingObserver := HeadingObserver for: self observing: aMarsRover.
	
	observers := OrderedCollection with: positionObserver with: headingObserver.
	
	log  := WriteStream on: ''! !

!methodRemoval: MarsRoverLogger #initializeFollowingPositionAndHeadingFor: stamp: 'AEC 5/31/2022 22:08:17'!
initializeFollowingPositionAndHeadingFor: aMarsRover 

	| headingObserver positionObserver |
	
	positionObserver := PositionObserver for: self observing: aMarsRover.
	headingObserver := HeadingObserver for: self observing: aMarsRover.
	
	observers := OrderedCollection with: positionObserver with: headingObserver.
	
	log  := WriteStream on: ''!
!MarsRoverLogger methodsFor: 'initialization' stamp: 'AEC 5/31/2022 22:08:39'!
initializeFollowingPositionChangesOn: aMarsRover 

	| positionObserver |
	
	positionObserver := PositionObserver for: self observing: aMarsRover.
	
	observers := OrderedCollection with: positionObserver.
	
	log  := WriteStream on: ''! !
!MarsRoverLogger methodsFor: 'initialization' stamp: 'AEC 5/31/2022 22:08:58'!
initializeFollowingHeadingChangesOn: aMarsRover 

	| headingObserver |
	
	headingObserver := HeadingObserver for: self observing: aMarsRover.
	
	observers := OrderedCollection with: headingObserver.
	
	log  := WriteStream on: ''! !
!MarsRoverLogger class methodsFor: 'instance creation' stamp: 'AEC 5/31/2022 22:09:38' prior: 50477896!
followHeadingChangesOn: aMarsRover 
	
	^self new initializeFollowingHeadingChangesOn: aMarsRover.! !
!MarsRoverLogger class methodsFor: 'instance creation' stamp: 'AEC 5/31/2022 22:09:49' prior: 50477922!
followPositionChangesOn: aMarsRover 
	
	^self new initializeFollowingPositionChangesOn: aMarsRover.! !

!methodRemoval: MarsRoverLogger class #withObservers: stamp: 'AEC 5/31/2022 22:09:59'!
withObservers: aCollectionOfObservers

	^ self new initializeWithObservers: aCollectionOfObservers !

!methodRemoval: MarsRoverLogger #initializeWithObservers: stamp: 'AEC 5/31/2022 22:10:15'!
initializeWithObservers: aCollectionOfObservers 

	observers := aCollectionOfObservers .
	log  := WriteStream on: ''!

!classDefinition: #MarsRoverLogger category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 22:10:29'!
Object subclass: #MarsRoverLogger
	instanceVariableNames: 'log observers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!testRun: #AlgoTest #test01 stamp: 'AEC 5/31/2022 22:10:38'!
PASSED!

!testRun: #AlgoTest #test02 stamp: 'AEC 5/31/2022 22:10:38'!
PASSED!

!testRun: #AlgoTest #test03 stamp: 'AEC 5/31/2022 22:10:38'!
PASSED!

!testRun: #AlgoTest #test04 stamp: 'AEC 5/31/2022 22:10:38'!
PASSED!

!testRun: #AlgoTest #test05 stamp: 'AEC 5/31/2022 22:10:38'!
FAILURE!

!testRun: #AlgoTest #test06 stamp: 'AEC 5/31/2022 22:10:38'!
FAILURE!

!testRun: #AlgoTest #test07 stamp: 'AEC 5/31/2022 22:10:38'!
FAILURE!

!testRun: #AlgoTest #test05 stamp: 'AEC 5/31/2022 22:10:43'!
FAILURE!

!testRun: #AlgoTest #test05 stamp: 'AEC 5/31/2022 22:10:43'!
FAILURE!

!testRun: #AlgoTest #test05 stamp: 'AEC 5/31/2022 22:11:42'!
FAILURE!

!testRun: #AlgoTest #test05 stamp: 'AEC 5/31/2022 22:11:43'!
FAILURE!
!MarsRoverLogger methodsFor: 'updating' stamp: 'AEC 5/31/2022 22:17:50' prior: 50478385!
updatePosition: aPosition

	self addToLog: aPosition asString! !
!MarsRoverLogger methodsFor: 'updating' stamp: 'AEC 5/31/2022 22:17:59' prior: 50478394!
addToLog: aLine

	log nextPutAll: aLine; newLine! !

!testRun: #AlgoTest #test01 stamp: 'AEC 5/31/2022 22:18:08'!
PASSED!

!testRun: #AlgoTest #test02 stamp: 'AEC 5/31/2022 22:18:08'!
PASSED!

!testRun: #AlgoTest #test03 stamp: 'AEC 5/31/2022 22:18:08'!
PASSED!

!testRun: #AlgoTest #test04 stamp: 'AEC 5/31/2022 22:18:08'!
PASSED!

!testRun: #AlgoTest #test05 stamp: 'AEC 5/31/2022 22:18:08'!
PASSED!

!testRun: #AlgoTest #test06 stamp: 'AEC 5/31/2022 22:18:08'!
PASSED!

!testRun: #AlgoTest #test07 stamp: 'AEC 5/31/2022 22:18:08'!
PASSED!

!methodRemoval: PositionAndHeadingWindow #visitMarsRoverHeadingEast: stamp: 'AEC 5/31/2022 22:18:36'!
visitMarsRoverHeadingEast: aMarsRoverHeadingEast
	
	headingField := 'East'!

!methodRemoval: PositionAndHeadingWindow #visitMarsRoverHeadingNorth: stamp: 'AEC 5/31/2022 22:18:38'!
visitMarsRoverHeadingNorth: aMarsRoverHeadingNorth
	
	headingField := 'North'!

!methodRemoval: PositionAndHeadingWindow #visitMarsRoverHeadingSouth: stamp: 'AEC 5/31/2022 22:18:40'!
visitMarsRoverHeadingSouth: aMarsRoverHeadingSouth
	
	headingField := 'South'!

!methodRemoval: PositionAndHeadingWindow #visitMarsRoverHeadingWest: stamp: 'AEC 5/31/2022 22:18:41'!
visitMarsRoverHeadingWest: aMarsRoverHeadingWest
	
	headingField := 'West'!
!PositionAndHeadingWindow methodsFor: 'updating' stamp: 'AEC 5/31/2022 22:19:11' prior: 50476931!
updateHeading: aMarsRoverHeading
	
	headingField := aMarsRoverHeading ! !

!methodRemoval: PositionAndHeadingWindow #headingField stamp: 'AEC 5/31/2022 22:19:57'!
headingField

	^headingField !

!methodRemoval: PositionAndHeadingWindow #positionField stamp: 'AEC 5/31/2022 22:20:00'!
positionField

	^positionField !

!methodRemoval: PositionAndHeadingWindow #initializeFor: stamp: 'AEC 5/31/2022 22:20:16'!
initializeFor: aMarsRover

	positionField := ''.
	headingField := ''.
	aMarsRover followHeadingChangesWith: self.
	aMarsRover followPositionChangesWith: self!

MarsRoverWindow subclass: #PositionAndHeadingWindow
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #PositionAndHeadingWindow category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 22:20:41'!
MarsRoverWindow subclass: #PositionAndHeadingWindow
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Object subclass: #MarsRoverWindow
	instanceVariableNames: 'positionField headingField'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverWindow category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 22:20:54'!
Object subclass: #MarsRoverWindow
	instanceVariableNames: 'positionField headingField'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverWindow methodsFor: 'updating' stamp: 'AEC 5/31/2022 22:20:56'!
updateHeading: aMarsRoverHeading
	
	headingField := aMarsRoverHeading ! !

!methodRemoval: PositionAndHeadingWindow #updateHeading: stamp: 'AEC 5/31/2022 22:20:56'!
updateHeading: aMarsRoverHeading
	
	headingField := aMarsRoverHeading !
!MarsRoverWindow methodsFor: 'updating' stamp: 'AEC 5/31/2022 22:21:00'!
updatePosition: aPosition

	positionField := aPosition asString! !

!methodRemoval: PositionAndHeadingWindow #updatePosition: stamp: 'AEC 5/31/2022 22:21:00'!
updatePosition: aPosition

	positionField := aPosition asString!
!WindowTest methodsFor: 'tests' stamp: 'AEC 5/31/2022 22:21:18' prior: 50477256!
test05

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow for: marsRover.
	
	self assert: '' equals: window headingField.
	self assert: '' equals: window positionField.
	
	marsRover process: 'l'.
	
	self assert: 'North' equals: window headingField.
	self assert: '' equals: window positionField.
	
	marsRover process: 'f'.
	
	self assert: 'North' equals: window headingField.
	self assert: '1@2' equals: window positionField.! !

!classRemoval: #PositionAndHeadingWindow stamp: 'AEC 5/31/2022 22:21:24'!
MarsRoverWindow subclass: #PositionAndHeadingWindow
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverWindow class methodsFor: 'instance creation' stamp: 'AEC 5/31/2022 22:22:02'!
followHeadingChangesOn: aMarsRover 
	
	^self new initializeFollowingHeadingChangesOn: aMarsRover.! !
!MarsRoverWindow class methodsFor: 'instance creation' stamp: 'AEC 5/31/2022 22:22:12'!
followPositionAndHeadingChangesOn: aMarsRover 

	^self new initializeFollowingPositionAndHeadingChangesOn: aMarsRover.! !
!MarsRoverWindow class methodsFor: 'instance creation' stamp: 'AEC 5/31/2022 22:22:22'!
followPositionChangesOn: aMarsRover 
	
	^self new initializeFollowingPositionChangesOn: aMarsRover.! !

!methodRemoval: MarsRoverWindow class #for: stamp: 'AEC 5/31/2022 22:22:46'!
for: aMarsRover

	^ self new initializeFor: aMarsRover !

!methodRemoval: MarsRoverWindow #initializeFor: stamp: 'AEC 5/31/2022 22:23:05'!
initializeFor: aMarsRover

	self subclassResponsibility !

----SNAPSHOT----(31 May 2022 22:24:33) CuisUniversity-5096.image priorSource: 4612809!

Object subclass: #MarsRoverWindow
	instanceVariableNames: 'positionField headingField observers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRenamed: #MarsRoverWindow as: #Caca stamp: 'AEC 5/31/2022 22:28:13'!
Smalltalk renameClassNamed: #MarsRoverWindow as: #Caca!
!WindowTest methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 22:28:13' prior: 50478670!
test05

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := Caca for: marsRover.
	
	self assert: '' equals: window headingField.
	self assert: '' equals: window positionField.
	
	marsRover process: 'l'.
	
	self assert: 'North' equals: window headingField.
	self assert: '' equals: window positionField.
	
	marsRover process: 'f'.
	
	self assert: 'North' equals: window headingField.
	self assert: '1@2' equals: window positionField.! !

Object subclass: #MarsRoverWindow
	instanceVariableNames: 'positionField headingField observers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverWindow category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 22:28:38'!
Object subclass: #MarsRoverWindow
	instanceVariableNames: 'positionField headingField observers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverWindow methodsFor: 'no messages' stamp: 'AEC 5/31/2022 22:28:56'!
updatePosition: aPosition

	positionField := aPosition asString! !
!MarsRoverWindow methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 22:29:06'!
updateHeading: aMarsRoverHeading
	
	headingField := aMarsRoverHeading ! !
!MarsRoverWindow class methodsFor: 'no messages' stamp: 'AEC 5/31/2022 22:29:20'!
followHeadingChangesOn: aMarsRover 
	
	^self new initializeFollowingHeadingChangesOn: aMarsRover.! !
!MarsRoverWindow class methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 22:29:29'!
followPositionAndHeadingChangesOn: aMarsRover 

	^self new initializeFollowingPositionAndHeadingChangesOn: aMarsRover.! !
!MarsRoverWindow class methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 22:29:37'!
followPositionChangesOn: aMarsRover 
	
	^self new initializeFollowingPositionChangesOn: aMarsRover.! !
!WindowTest methodsFor: 'tests' stamp: 'AEC 5/31/2022 22:30:03' prior: 50478737!
test05

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow for: marsRover.
	
	self assert: '' equals: window headingField.
	self assert: '' equals: window positionField.
	
	marsRover process: 'l'.
	
	self assert: 'North' equals: window headingField.
	self assert: '' equals: window positionField.
	
	marsRover process: 'f'.
	
	self assert: 'North' equals: window headingField.
	self assert: '1@2' equals: window positionField.! !

!classRemoval: #Caca stamp: 'AEC 5/31/2022 22:30:08'!
Object subclass: #Caca
	instanceVariableNames: 'positionField headingField'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverWindow methodsFor: 'nil' stamp: 'AEC 5/31/2022 22:31:10'!
initializeFollowingHeadingChangesOn: aMarsRover 

	| headingObserver |
	
	headingObserver := HeadingObserver for: self observing: aMarsRover.
	
	observers := OrderedCollection with: headingObserver.
	
	headingField  := ''! !
!MarsRoverWindow methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 22:31:26' prior: 50478823!
initializeFollowingHeadingChangesOn: aMarsRover 

	| headingObserver |
	
	headingObserver := HeadingObserver for: self observing: aMarsRover.
	
	observers := OrderedCollection with: headingObserver.
	
	headingField  := ''.
	
	positionField  := ''! !
!MarsRoverWindow methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 22:31:56'!
initializeFollowingPositionAndHeadingChangesOn: aMarsRover 

	| headingObserver positionObserver |
	
	positionObserver := PositionObserver for: self observing: aMarsRover.
	headingObserver := HeadingObserver for: self observing: aMarsRover.
	
	observers := OrderedCollection with: positionObserver with: headingObserver.
	
	headingField  := ''.
	positionField := ''! !
!MarsRoverWindow methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 22:32:02' prior: 50478845!
initializeFollowingPositionAndHeadingChangesOn: aMarsRover 

	| headingObserver positionObserver |
	
	positionObserver := PositionObserver for: self observing: aMarsRover.
	headingObserver := HeadingObserver for: self observing: aMarsRover.
	
	observers := OrderedCollection with: positionObserver with: headingObserver.
	
	headingField := ''.
	positionField := ''! !
!MarsRoverWindow methodsFor: 'as yet unclassified' stamp: 'AEC 5/31/2022 22:32:30'!
initializeFollowingPositionChangesOn: aMarsRover 

	| positionObserver |
	
	positionObserver := PositionObserver for: self observing: aMarsRover.
	
	observers := OrderedCollection with: positionObserver.
	
	headingField := ''.
	positionField := ''! !
!MarsRoverWindow methodsFor: 'accessing' stamp: 'AEC 5/31/2022 22:33:54'!
show

	^positionField,' ',headingField ! !
!WindowTest methodsFor: 'tests' stamp: 'AEC 5/31/2022 22:35:00' prior: 50478343!
test01

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow followPositionChangesOn: marsRover.
	
	marsRover process: ''.
	
	self assert: '' equals: window show! !

!testRun: #WindowTest #test01 stamp: 'AEC 5/31/2022 22:35:06'!
FAILURE!

!testRun: #WindowTest #test01 stamp: 'AEC 5/31/2022 22:35:06'!
FAILURE!
!WindowTest methodsFor: 'tests' stamp: 'AEC 5/31/2022 22:35:13' prior: 50478890!
test01

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow followPositionChangesOn: marsRover.
	
	marsRover process: ''.
	
	self assert: ' ' equals: window show! !

!testRun: #WindowTest #test01 stamp: 'AEC 5/31/2022 22:35:15'!
PASSED!

!testRun: #WindowTest #test01 stamp: 'AEC 5/31/2022 22:35:15'!
PASSED!

!testRun: #WindowTest #test02 stamp: 'AEC 5/31/2022 22:35:15'!
ERROR!

!testRun: #WindowTest #test03 stamp: 'AEC 5/31/2022 22:35:15'!
FAILURE!

!testRun: #WindowTest #test04 stamp: 'AEC 5/31/2022 22:35:15'!
ERROR!

!testRun: #WindowTest #test05 stamp: 'AEC 5/31/2022 22:35:15'!
ERROR!
!WindowTest methodsFor: 'tests' stamp: 'AEC 5/31/2022 22:35:36' prior: 50478353!
test02

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow followPositionChangesOn: marsRover.
	
	marsRover process: 'f'.
	
	self assert: '2@1 ' equals: window show! !
!WindowTest methodsFor: 'tests' stamp: 'AEC 5/31/2022 22:36:14' prior: 50478309!
test03

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow followHeadingChangesOn: marsRover.
	
	marsRover process: ''.
	
	self assert: '' equals: window show! !
!WindowTest methodsFor: 'tests' stamp: 'AEC 5/31/2022 22:36:34' prior: 50478319!
test04

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow followHeadingChangesOn: marsRover.
	
	marsRover process: 'rrr'.
	
	self assert: ' North' equals: window show! !
!WindowTest methodsFor: 'tests' stamp: 'AEC 5/31/2022 22:36:38' prior: 50478939!
test03

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow followHeadingChangesOn: marsRover.
	
	marsRover process: ''.
	
	self assert: ' ' equals: window show! !
!WindowTest methodsFor: 'tests' stamp: 'AEC 5/31/2022 22:36:58' prior: 50478798!
test05

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow followPositionAndHeadingChangesOn: marsRover.
	
	self assert: ' ' equals: window show.
	
	marsRover process: 'l'.
	
	self assert: 'North' equals: window headingField.
	self assert: '' equals: window positionField.
	
	marsRover process: 'f'.
	
	self assert: 'North' equals: window headingField.
	self assert: '1@2' equals: window positionField.! !
!WindowTest methodsFor: 'tests' stamp: 'AEC 5/31/2022 22:37:05' prior: 50478969!
test05

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow followPositionAndHeadingChangesOn: marsRover.
	
	self assert: ' ' equals: window show.
	
	marsRover process: 'l'.
	
	self assert: ' North' equals: window show.
	
	marsRover process: 'f'.
	
	self assert: 'North' equals: window headingField.
	self assert: '1@2' equals: window positionField.! !
!WindowTest methodsFor: 'tests' stamp: 'AEC 5/31/2022 22:37:20' prior: 50478987!
test05

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow followPositionAndHeadingChangesOn: marsRover.
	
	self assert: ' ' equals: window show.
	
	marsRover process: 'l'.
	
	self assert: ' North' equals: window show.
	
	marsRover process: 'f'.
	
	self assert: '1@2 North' equals: window show. ! !

!testRun: #WindowTest #test01 stamp: 'AEC 5/31/2022 22:37:28'!
PASSED!

!testRun: #WindowTest #test02 stamp: 'AEC 5/31/2022 22:37:28'!
PASSED!

!testRun: #WindowTest #test03 stamp: 'AEC 5/31/2022 22:37:28'!
PASSED!

!testRun: #WindowTest #test04 stamp: 'AEC 5/31/2022 22:37:28'!
PASSED!

!testRun: #WindowTest #test05 stamp: 'AEC 5/31/2022 22:37:28'!
PASSED!

!classRenamed: #AlgoTest as: #LoggerTest stamp: 'AEC 5/31/2022 22:38:09'!
Smalltalk renameClassNamed: #AlgoTest as: #LoggerTest!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 22:38:26'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head headingLogger observers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 22:38:26'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head observers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'AEC 5/31/2022 22:38:27'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

----SNAPSHOT----(31 May 2022 22:48:16) CuisUniversity-5096.image priorSource: 4706329!

----STARTUP---- (1 June 2022 12:02:12) as /mnt/c/Users/Ari/Desktop/Ingenieria/CuisUniversity/MarsRoverReturned/linux64/CuisUniversity-5096.image!


MarsRoverObserver subclass: #MarsRoverLogger
	instanceVariableNames: 'log observers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverLogger category: 'MarsRover-WithHeading' stamp: 'AEC 6/1/2022 12:03:18'!
MarsRoverObserver subclass: #MarsRoverLogger
	instanceVariableNames: 'log observers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverObserver subclass: #MarsRoverWindow
	instanceVariableNames: 'positionField headingField observers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverWindow category: 'MarsRover-WithHeading' stamp: 'AEC 6/1/2022 12:03:27'!
MarsRoverObserver subclass: #MarsRoverWindow
	instanceVariableNames: 'positionField headingField observers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverLogger methodsFor: 'initialization' stamp: 'AEC 6/1/2022 12:10:26' prior: 50478485!
initializeFollowingHeadingChangesOn: aMarsRover 

	log  := WriteStream on: ''.
	aMarsRover followHeadingChangesWith: self
	! !
!MarsRoverLogger methodsFor: 'initialization' stamp: 'AEC 6/1/2022 12:10:49' prior: 50478475!
initializeFollowingPositionChangesOn: aMarsRover 
	
	log  := WriteStream on: ''.
	aMarsRover followPositionChangesWith: self! !
!MarsRoverLogger methodsFor: 'initialization' stamp: 'AEC 6/1/2022 12:11:03' prior: 50479100!
initializeFollowingPositionChangesOn: aMarsRover 
	
	aMarsRover followPositionChangesWith: self! !
!MarsRoverLogger methodsFor: 'initialization' stamp: 'AEC 6/1/2022 12:11:09' prior: 50479093!
initializeFollowingHeadingChangesOn: aMarsRover 

	aMarsRover followHeadingChangesWith: self
	! !
!MarsRoverLogger methodsFor: 'initialization' stamp: 'AEC 6/1/2022 12:11:21' overrides: 16920235!
initialize

	log  := WriteStream on: ''.! !
!MarsRoverLogger methodsFor: 'initialization' stamp: 'AEC 6/1/2022 12:11:23' prior: 50479121 overrides: 16920235!
initialize

	log  := WriteStream on: ''! !
!MarsRoverLogger methodsFor: 'initialization' stamp: 'AEC 6/1/2022 12:11:54' prior: 50478447!
initializeFollowingPositionAndHeadingChangesOn: aMarsRover 

	self initializeFollowingHeadingChangesOn: aMarsRover.
	self initializeFollowingPositionChangesOn: aMarsRover ! !
!MarsRoverLogger methodsFor: 'nil' stamp: 'AEC 6/1/2022 12:14:55'!
visitMarsRoverHeadingEast: aMarsRoverHeadingEast
	
	self addToLog: 'East'.! !
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'AEC 6/1/2022 12:15:13'!
visitMarsRoverHeadingWest: aMarsRoverHeadingWest
	
	self addToLog: 'West'.! !
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'AEC 6/1/2022 12:15:22'!
visitMarsRoverHeadingNorth: aMarsRoverHeadingNorth
	
	self addToLog: 'North'.! !
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'AEC 6/1/2022 12:25:10'!
visitMarsRoverHeadingSouth: aMarsRoverHeadingSouth
	
	self addToLog: 'South'.! !
!MarsRoverLogger methodsFor: 'updating' stamp: 'AEC 6/1/2022 12:25:55' prior: 50478390!
updateHeading: aHeading

	aHeading accept: self! !
!MarsRoverWindow methodsFor: 'nil' stamp: 'AEC 6/1/2022 12:33:46' prior: 50478834!
initializeFollowingHeadingChangesOn: aMarsRover 

	aMarsRover followHeadingChangesWith: self
	! !
!MarsRoverWindow methodsFor: 'nil' stamp: 'AEC 6/1/2022 12:35:32' prior: 50478875!
initializeFollowingPositionChangesOn: aMarsRover 
	
	aMarsRover followPositionChangesWith: self! !
!MarsRoverWindow methodsFor: 'initialization' stamp: 'AEC 6/1/2022 12:35:49' prior: 50478860!
initializeFollowingPositionAndHeadingChangesOn: aMarsRover 

	self initializeFollowingHeadingChangesOn: aMarsRover.
	self initializeFollowingPositionChangesOn: aMarsRover ! !
!MarsRoverWindow methodsFor: 'initialization' stamp: 'AEC 6/1/2022 12:46:09' overrides: 16920235!
initialize

	headingField  := ''.
	positionField  := ''! !

String!
!MarsRoverWindow methodsFor: 'accessing' stamp: 'AEC 6/1/2022 12:53:55' prior: 50478886!
show

	^positionField,' ',headingField! !
!MarsRoverWindow methodsFor: 'accessing' stamp: 'AEC 6/1/2022 13:03:51' prior: 50479195!
show

	^positionField,' ',headingField withBlanksTrimmed! !
!WindowTest methodsFor: 'tests' stamp: 'AEC 6/1/2022 13:03:59' prior: 50478905!
test01

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow followPositionChangesOn: marsRover.
	
	marsRover process: ''.
	
	self assert: '' equals: window show! !
!WindowTest methodsFor: 'tests' stamp: 'AEC 6/1/2022 13:04:03' prior: 50478929!
test02

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow followPositionChangesOn: marsRover.
	
	marsRover process: 'f'.
	
	self assert: '2@1' equals: window show! !
!WindowTest methodsFor: 'tests' stamp: 'AEC 6/1/2022 13:04:06' prior: 50478959!
test03

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow followHeadingChangesOn: marsRover.
	
	marsRover process: ''.
	
	self assert: '' equals: window show! !
!WindowTest methodsFor: 'tests' stamp: 'AEC 6/1/2022 13:04:12' prior: 50478949!
test04

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow followHeadingChangesOn: marsRover.
	
	marsRover process: 'rrr'.
	
	self assert: 'North' equals: window show! !
!WindowTest methodsFor: 'tests' stamp: 'AEC 6/1/2022 13:04:20' prior: 50479003!
test05

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow followPositionAndHeadingChangesOn: marsRover.
	
	self assert: '' equals: window show.
	
	marsRover process: 'l'.
	
	self assert: 'North' equals: window show.
	
	marsRover process: 'f'.
	
	self assert: '1@2 North' equals: window show. ! !
!MarsRoverWindow methodsFor: 'updating - private' stamp: 'AEC 6/1/2022 13:05:16'!
visitMarsRoverHeadingEast: aMarsRoverHeadingEast
	
	headingField := 'Apuntando al Este'.! !
!MarsRoverWindow methodsFor: 'updating - private' stamp: 'AEC 6/1/2022 13:05:27'!
visitMarsRoverHeadingWest: aMarsRoverHeadingWest
	
	headingField := 'Apuntando al Oeste'.! !
!MarsRoverWindow methodsFor: 'updating - private' stamp: 'AEC 6/1/2022 13:05:39'!
visitMarsRoverHeadingNorth: aMarsRoverHeadingNorth
	
	headingField := 'Apuntando al Norte'.! !
!MarsRoverWindow methodsFor: 'updating - private' stamp: 'AEC 6/1/2022 13:05:47'!
visitMarsRoverHeadingSouth: aMarsRoverHeadingSouth
	
	headingField := 'Apuntando al Norte'.! !
!MarsRoverWindow methodsFor: 'updating - private' stamp: 'AEC 6/1/2022 13:05:52' prior: 50479277!
visitMarsRoverHeadingSouth: aMarsRoverHeadingSouth
	
	headingField := 'Apuntando al Sur'.! !
!WindowTest methodsFor: 'tests' stamp: 'AEC 6/1/2022 13:06:14' prior: 50479235!
test04

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow followHeadingChangesOn: marsRover.
	
	marsRover process: 'rrr'.
	
	self assert: 'Apuntando al Norte' equals: window show! !
!WindowTest methodsFor: 'tests' stamp: 'AEC 6/1/2022 13:06:20' prior: 50479245!
test05

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow followPositionAndHeadingChangesOn: marsRover.
	
	self assert: '' equals: window show.
	
	marsRover process: 'l'.
	
	self assert: 'North' equals: window show.
	
	marsRover process: 'f'.
	
	self assert: '1@2 Apuntando al Norte' equals: window show. ! !

!classRenamed: #WindowTest as: #MarsRoverWindowTest stamp: 'AEC 6/1/2022 13:06:54'!
Smalltalk renameClassNamed: #WindowTest as: #MarsRoverWindowTest!

!classRenamed: #LoggerTest as: #MarsRoverLoggerTest stamp: 'AEC 6/1/2022 13:07:00'!
Smalltalk renameClassNamed: #LoggerTest as: #MarsRoverLoggerTest!
!MarsRoverWindow methodsFor: 'updating' stamp: 'AEC 6/1/2022 13:07:35' prior: 50478774!
updateHeading: aMarsRoverHeading
	
	aMarsRoverHeading accept: self! !

!classRemoval: #HeadingObserver stamp: 'AEC 6/1/2022 13:07:48'!
MarsRoverObserver subclass: #HeadingObserver
	instanceVariableNames: 'headingField interested'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #PositionObserver stamp: 'AEC 6/1/2022 13:07:52'!
MarsRoverObserver subclass: #PositionObserver
	instanceVariableNames: 'lastKnownPosition interested'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!methodRemoval: MarsRoverObserver #initializeFor:observing: stamp: 'AEC 6/1/2022 13:07:55'!
initializeFor: anXXX observing: aMarsRover

	self subclassResponsibility !

!methodRemoval: MarsRoverObserver class #for:observing: stamp: 'AEC 6/1/2022 13:08:00'!
for: anXXX observing: aMarsRover

	^ self new initializeFor: anXXX observing: aMarsRover!
!MarsRoverVariableProxy methodsFor: 'as yet unclassified' stamp: 'AEC 6/1/2022 13:10:40'!
notifyObserver: anObserver

	self subclassResponsibility ! !

!methodRemoval: MarsRoverVariableProxy #notifyObserver stamp: 'AEC 6/1/2022 13:10:43'!
notifyObserver

	self subclassResponsibility !
!MarsRoverHeading methodsFor: 'nil' stamp: 'AEC 6/1/2022 13:14:00'!
accept: aVisitor

	self subclassResponsibility ! !
!MarsRover methodsFor: 'moving' stamp: 'AEC 6/1/2022 13:15:18'!
addToPosition: newPosition

	position update: (self positionProxyValue + newPosition).! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AEC 6/1/2022 13:15:18' prior: 50474433!
moveNorth
	
	self addToPosition: 0@1.
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AEC 6/1/2022 13:15:18' prior: 50474437!
moveSouth
	
	self addToPosition: 0@-1.
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AEC 6/1/2022 13:15:18' prior: 50474425!
moveEast
	
	self addToPosition: 1@0.
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AEC 6/1/2022 13:15:18' prior: 50474441!
moveWest
	
	self addToPosition: -1@0! !

!methodRemoval: MarsRover #addToPositionAndLogNewPosition: stamp: 'AEC 6/1/2022 13:15:18'!
addToPositionAndLogNewPosition: newPosition

	position update: (self positionProxyValue + newPosition).!

!testRun: #MarsRoverLoggerTest #test01 stamp: 'AEC 6/1/2022 13:16:52'!
PASSED!

!testRun: #MarsRoverLoggerTest #test02 stamp: 'AEC 6/1/2022 13:16:52'!
PASSED!

!testRun: #MarsRoverLoggerTest #test03 stamp: 'AEC 6/1/2022 13:16:52'!
PASSED!

!testRun: #MarsRoverLoggerTest #test04 stamp: 'AEC 6/1/2022 13:16:52'!
PASSED!

!testRun: #MarsRoverLoggerTest #test05 stamp: 'AEC 6/1/2022 13:16:52'!
PASSED!

!testRun: #MarsRoverLoggerTest #test06 stamp: 'AEC 6/1/2022 13:16:52'!
PASSED!

!testRun: #MarsRoverLoggerTest #test07 stamp: 'AEC 6/1/2022 13:16:52'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'AEC 6/1/2022 13:16:52'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'AEC 6/1/2022 13:16:52'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'AEC 6/1/2022 13:16:52'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'AEC 6/1/2022 13:16:52'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'AEC 6/1/2022 13:16:52'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'AEC 6/1/2022 13:16:52'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'AEC 6/1/2022 13:16:52'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'AEC 6/1/2022 13:16:52'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'AEC 6/1/2022 13:16:53'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'AEC 6/1/2022 13:16:53'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'AEC 6/1/2022 13:16:53'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'AEC 6/1/2022 13:16:53'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'AEC 6/1/2022 13:16:53'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'AEC 6/1/2022 13:16:53'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'AEC 6/1/2022 13:16:53'!
PASSED!

!testRun: #MarsRoverWindowTest #test01 stamp: 'AEC 6/1/2022 13:16:53'!
FAILURE!

!testRun: #MarsRoverWindowTest #test02 stamp: 'AEC 6/1/2022 13:16:53'!
FAILURE!

!testRun: #MarsRoverWindowTest #test03 stamp: 'AEC 6/1/2022 13:16:53'!
FAILURE!

!testRun: #MarsRoverWindowTest #test04 stamp: 'AEC 6/1/2022 13:16:53'!
FAILURE!

!testRun: #MarsRoverWindowTest #test05 stamp: 'AEC 6/1/2022 13:16:53'!
FAILURE!

!testRun: #MarsRoverWindowTest #test01 stamp: 'AEC 6/1/2022 13:17:05'!
FAILURE!

!testRun: #MarsRoverWindowTest #test02 stamp: 'AEC 6/1/2022 13:17:05'!
FAILURE!

!testRun: #MarsRoverWindowTest #test03 stamp: 'AEC 6/1/2022 13:17:05'!
FAILURE!

!testRun: #MarsRoverWindowTest #test04 stamp: 'AEC 6/1/2022 13:17:05'!
FAILURE!

!testRun: #MarsRoverWindowTest #test05 stamp: 'AEC 6/1/2022 13:17:05'!
FAILURE!

!testRun: #MarsRoverWindowTest #test01 stamp: 'AEC 6/1/2022 13:17:09'!
FAILURE!

!testRun: #MarsRoverWindowTest #test01 stamp: 'AEC 6/1/2022 13:17:09'!
FAILURE!
!MarsRoverWindow methodsFor: 'accessing' stamp: 'AEC 6/1/2022 13:17:29' prior: 50479200!
show

	^(positionField,' ',headingField) withBlanksTrimmed! !

!testRun: #MarsRoverLoggerTest #test01 stamp: 'AEC 6/1/2022 13:17:33'!
PASSED!

!testRun: #MarsRoverLoggerTest #test02 stamp: 'AEC 6/1/2022 13:17:34'!
PASSED!

!testRun: #MarsRoverLoggerTest #test03 stamp: 'AEC 6/1/2022 13:17:34'!
PASSED!

!testRun: #MarsRoverLoggerTest #test04 stamp: 'AEC 6/1/2022 13:17:34'!
PASSED!

!testRun: #MarsRoverLoggerTest #test05 stamp: 'AEC 6/1/2022 13:17:34'!
PASSED!

!testRun: #MarsRoverLoggerTest #test06 stamp: 'AEC 6/1/2022 13:17:34'!
PASSED!

!testRun: #MarsRoverLoggerTest #test07 stamp: 'AEC 6/1/2022 13:17:34'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'AEC 6/1/2022 13:17:34'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'AEC 6/1/2022 13:17:34'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'AEC 6/1/2022 13:17:34'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'AEC 6/1/2022 13:17:34'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'AEC 6/1/2022 13:17:34'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'AEC 6/1/2022 13:17:34'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'AEC 6/1/2022 13:17:34'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'AEC 6/1/2022 13:17:34'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'AEC 6/1/2022 13:17:34'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'AEC 6/1/2022 13:17:34'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'AEC 6/1/2022 13:17:34'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'AEC 6/1/2022 13:17:34'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'AEC 6/1/2022 13:17:34'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'AEC 6/1/2022 13:17:34'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'AEC 6/1/2022 13:17:34'!
PASSED!

!testRun: #MarsRoverWindowTest #test01 stamp: 'AEC 6/1/2022 13:17:34'!
PASSED!

!testRun: #MarsRoverWindowTest #test02 stamp: 'AEC 6/1/2022 13:17:34'!
PASSED!

!testRun: #MarsRoverWindowTest #test03 stamp: 'AEC 6/1/2022 13:17:34'!
PASSED!

!testRun: #MarsRoverWindowTest #test04 stamp: 'AEC 6/1/2022 13:17:34'!
PASSED!

!testRun: #MarsRoverWindowTest #test05 stamp: 'AEC 6/1/2022 13:17:34'!
FAILURE!

!testRun: #MarsRoverWindowTest #test05 stamp: 'AEC 6/1/2022 13:17:34'!
FAILURE!
!MarsRoverWindowTest methodsFor: 'tests' stamp: 'AEC 6/1/2022 13:17:47' prior: 50479301!
test05

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow followPositionAndHeadingChangesOn: marsRover.
	
	self assert: '' equals: window show.
	
	marsRover process: 'l'.
	
	self assert: 'Apuntando al Norte' equals: window show.
	
	marsRover process: 'f'.
	
	self assert: '1@2 Apuntando al Norte' equals: window show. ! !

!testRun: #MarsRoverLoggerTest #test01 stamp: 'AEC 6/1/2022 13:17:55'!
PASSED!

!testRun: #MarsRoverLoggerTest #test02 stamp: 'AEC 6/1/2022 13:17:55'!
PASSED!

!testRun: #MarsRoverLoggerTest #test03 stamp: 'AEC 6/1/2022 13:17:55'!
PASSED!

!testRun: #MarsRoverLoggerTest #test04 stamp: 'AEC 6/1/2022 13:17:55'!
PASSED!

!testRun: #MarsRoverLoggerTest #test05 stamp: 'AEC 6/1/2022 13:17:55'!
PASSED!

!testRun: #MarsRoverLoggerTest #test06 stamp: 'AEC 6/1/2022 13:17:55'!
PASSED!

!testRun: #MarsRoverLoggerTest #test07 stamp: 'AEC 6/1/2022 13:17:55'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'AEC 6/1/2022 13:17:55'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'AEC 6/1/2022 13:17:55'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'AEC 6/1/2022 13:17:55'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'AEC 6/1/2022 13:17:55'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'AEC 6/1/2022 13:17:55'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'AEC 6/1/2022 13:17:55'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'AEC 6/1/2022 13:17:55'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'AEC 6/1/2022 13:17:55'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'AEC 6/1/2022 13:17:55'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'AEC 6/1/2022 13:17:55'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'AEC 6/1/2022 13:17:55'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'AEC 6/1/2022 13:17:55'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'AEC 6/1/2022 13:17:56'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'AEC 6/1/2022 13:17:56'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'AEC 6/1/2022 13:17:56'!
PASSED!

!testRun: #MarsRoverWindowTest #test01 stamp: 'AEC 6/1/2022 13:17:56'!
PASSED!

!testRun: #MarsRoverWindowTest #test02 stamp: 'AEC 6/1/2022 13:17:56'!
PASSED!

!testRun: #MarsRoverWindowTest #test03 stamp: 'AEC 6/1/2022 13:17:56'!
PASSED!

!testRun: #MarsRoverWindowTest #test04 stamp: 'AEC 6/1/2022 13:17:56'!
PASSED!

!testRun: #MarsRoverWindowTest #test05 stamp: 'AEC 6/1/2022 13:17:56'!
PASSED!

MarsRoverObserver subclass: #PositionAndHeadingObserver
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #PositionAndHeadingObserver category: 'MarsRover-WithHeading' stamp: 'AEC 6/1/2022 13:21:55'!
MarsRoverObserver subclass: #PositionAndHeadingObserver
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverLogger category: 'MarsRover-WithHeading' stamp: 'AEC 6/1/2022 13:22:01'!
MarsRoverObserver subclass: #MarsRoverLogger
	instanceVariableNames: 'log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverWindow category: 'MarsRover-WithHeading' stamp: 'AEC 6/1/2022 13:22:05'!
MarsRoverObserver subclass: #MarsRoverWindow
	instanceVariableNames: 'positionField headingField'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!PositionAndHeadingObserver methodsFor: 'no messages' stamp: 'AEC 6/1/2022 13:24:24'!
initializeFollowingHeadingChangesOn: aMarsRover 

	aMarsRover followHeadingChangesWith: self
	! !
!PositionAndHeadingObserver methodsFor: 'as yet unclassified' stamp: 'AEC 6/1/2022 13:25:43'!
initializeFollowingPositionChangesOn: aMarsRover 
	
	aMarsRover followPositionChangesWith: self! !
!PositionAndHeadingObserver methodsFor: 'as yet unclassified' stamp: 'AEC 6/1/2022 13:25:51'!
initializeFollowingPositionAndHeadingChangesOn: aMarsRover 

	self initializeFollowingHeadingChangesOn: aMarsRover.
	self initializeFollowingPositionChangesOn: aMarsRover ! !
!PositionAndHeadingObserver methodsFor: 'as yet unclassified' stamp: 'AEC 6/1/2022 13:26:10' overrides: 16920235!
initialize

	self subclassResponsibility ! !
!PositionAndHeadingObserver methodsFor: 'nil' stamp: 'AEC 6/1/2022 13:27:28'!
visitMarsRoverHeadingEast: aMarsRoverHeadingEast

	self subclassResponsibility ! !
!PositionAndHeadingObserver methodsFor: 'as yet unclassified' stamp: 'AEC 6/1/2022 13:27:42'!
visitMarsRoverHeadingWest: aMarsRoverHeadingWest

	self subclassResponsibility ! !
!PositionAndHeadingObserver methodsFor: 'as yet unclassified' stamp: 'AEC 6/1/2022 13:27:48'!
visitMarsRoverHeadingNorth: aMarsRoverHeadingNorth

	self subclassResponsibility ! !
!PositionAndHeadingObserver methodsFor: 'as yet unclassified' stamp: 'AEC 6/1/2022 13:27:55'!
visitMarsRoverHeadingSouth: aMarsRoverHeadingSouth

	self subclassResponsibility ! !
!PositionAndHeadingObserver methodsFor: 'nil' stamp: 'AEC 6/1/2022 13:29:04'!
updateHeading: aMarsRoverHeading

	self subclassResponsibility ! !
!PositionAndHeadingObserver methodsFor: 'as yet unclassified' stamp: 'AEC 6/1/2022 13:29:14'!
updatePosition: aPosition

	self subclassResponsibility ! !

!methodRemoval: MarsRoverWindow #updateHeading: stamp: 'AEC 6/1/2022 13:29:38'!
updateHeading: aMarsRoverHeading
	
	aMarsRoverHeading accept: self!

!methodRemoval: MarsRoverLogger #updateHeading: stamp: 'AEC 6/1/2022 13:29:42'!
updateHeading: aHeading

	aHeading accept: self!
!PositionAndHeadingObserver methodsFor: 'updating' stamp: 'AEC 6/1/2022 13:29:50' prior: 50479777!
updateHeading: aMarsRoverHeading

	aMarsRoverHeading accept: self! !

PositionAndHeadingObserver subclass: #MarsRoverWindow
	instanceVariableNames: 'positionField headingField'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverWindow category: 'MarsRover-WithHeading' stamp: 'AEC 6/1/2022 13:30:04'!
PositionAndHeadingObserver subclass: #MarsRoverWindow
	instanceVariableNames: 'positionField headingField'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

PositionAndHeadingObserver subclass: #MarsRoverLogger
	instanceVariableNames: 'log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverLogger category: 'MarsRover-WithHeading' stamp: 'AEC 6/1/2022 13:30:11'!
PositionAndHeadingObserver subclass: #MarsRoverLogger
	instanceVariableNames: 'log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!methodRemoval: MarsRoverLogger #initializeFollowingHeadingChangesOn: stamp: 'AEC 6/1/2022 13:30:19'!
initializeFollowingHeadingChangesOn: aMarsRover 

	aMarsRover followHeadingChangesWith: self
	!

!methodRemoval: MarsRoverLogger #initializeFollowingPositionAndHeadingChangesOn: stamp: 'AEC 6/1/2022 13:30:21'!
initializeFollowingPositionAndHeadingChangesOn: aMarsRover 

	self initializeFollowingHeadingChangesOn: aMarsRover.
	self initializeFollowingPositionChangesOn: aMarsRover !

!methodRemoval: MarsRoverLogger #initializeFollowingPositionChangesOn: stamp: 'AEC 6/1/2022 13:30:23'!
initializeFollowingPositionChangesOn: aMarsRover 
	
	aMarsRover followPositionChangesWith: self!

!methodRemoval: MarsRoverWindow #initializeFollowingHeadingChangesOn: stamp: 'AEC 6/1/2022 13:30:31'!
initializeFollowingHeadingChangesOn: aMarsRover 

	aMarsRover followHeadingChangesWith: self
	!

!methodRemoval: MarsRoverWindow #initializeFollowingPositionAndHeadingChangesOn: stamp: 'AEC 6/1/2022 13:30:33'!
initializeFollowingPositionAndHeadingChangesOn: aMarsRover 

	self initializeFollowingHeadingChangesOn: aMarsRover.
	self initializeFollowingPositionChangesOn: aMarsRover !

!methodRemoval: MarsRoverWindow #initializeFollowingPositionChangesOn: stamp: 'AEC 6/1/2022 13:30:34'!
initializeFollowingPositionChangesOn: aMarsRover 
	
	aMarsRover followPositionChangesWith: self!

!testRun: #MarsRoverLoggerTest #test01 stamp: 'AEC 6/1/2022 13:32:29'!
PASSED!

!testRun: #MarsRoverLoggerTest #test02 stamp: 'AEC 6/1/2022 13:32:29'!
PASSED!

!testRun: #MarsRoverLoggerTest #test03 stamp: 'AEC 6/1/2022 13:32:29'!
PASSED!

!testRun: #MarsRoverLoggerTest #test04 stamp: 'AEC 6/1/2022 13:32:30'!
PASSED!

!testRun: #MarsRoverLoggerTest #test05 stamp: 'AEC 6/1/2022 13:32:30'!
PASSED!

!testRun: #MarsRoverLoggerTest #test06 stamp: 'AEC 6/1/2022 13:32:30'!
PASSED!

!testRun: #MarsRoverLoggerTest #test07 stamp: 'AEC 6/1/2022 13:32:30'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'AEC 6/1/2022 13:32:30'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'AEC 6/1/2022 13:32:30'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'AEC 6/1/2022 13:32:30'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'AEC 6/1/2022 13:32:30'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'AEC 6/1/2022 13:32:30'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'AEC 6/1/2022 13:32:30'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'AEC 6/1/2022 13:32:30'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'AEC 6/1/2022 13:32:30'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'AEC 6/1/2022 13:32:30'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'AEC 6/1/2022 13:32:30'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'AEC 6/1/2022 13:32:30'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'AEC 6/1/2022 13:32:30'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'AEC 6/1/2022 13:32:30'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'AEC 6/1/2022 13:32:30'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'AEC 6/1/2022 13:32:30'!
PASSED!

!testRun: #MarsRoverWindowTest #test01 stamp: 'AEC 6/1/2022 13:32:30'!
PASSED!

!testRun: #MarsRoverWindowTest #test02 stamp: 'AEC 6/1/2022 13:32:30'!
PASSED!

!testRun: #MarsRoverWindowTest #test03 stamp: 'AEC 6/1/2022 13:32:30'!
PASSED!

!testRun: #MarsRoverWindowTest #test04 stamp: 'AEC 6/1/2022 13:32:30'!
PASSED!

!testRun: #MarsRoverWindowTest #test05 stamp: 'AEC 6/1/2022 13:32:30'!
PASSED!
!Behavior method!
at: aPosition heading: aHeadingType
	^ [
	([
	(self coverAll:
		{41 to: 44}) new ] valueCoveringAll:
		{46 to: 48})
		initializeAt:
			(aPosition
				cover: (64 to: 72)
				declaredAt: (5 to: 13))
		heading:
			(aHeadingType
				cover: (83 to: 94)
				declaredAt: (24 to: 35)) ] valueCoveringAll:
		{50 to: 62. 74 to: 81}.! !
!Behavior method!
initializeAt: aPosition heading: aHeadingType
	(position _ [
	(PositionProxy
		cover: (61 to: 73)
		declaredAt: (61 to: 73)) on:
		(aPosition
			cover: (79 to: 87)
			declaredAt: (15 to: 23)) ] valueCoveringAll:
		{75 to: 77})
		cover: (49 to: 56)
		declaredAt: (49 to: 56).
	(head _ [
	(HeadingProxy
		cover: (99 to: 110)
		declaredAt: (99 to: 110)) on:
		([
		(aHeadingType
			cover: (117 to: 128)
			declaredAt: (34 to: 45)) for:
			(self coverAll:
				{135 to: 138}) ] valueCoveringAll:
			{130 to: 133}) ] valueCoveringAll:
		{112 to: 114})
		cover: (91 to: 94)
		declaredAt: (91 to: 94).! !
!Behavior method!
on: anInitialValue
	^ [
	([
	(self coverAll:
		{24 to: 27}) new ] valueCoveringAll:
		{29 to: 31}) initializeOn:
		(anInitialValue
			cover: (47 to: 60)
			declaredAt: (5 to: 18)) ] valueCoveringAll:
		{33 to: 45}.! !
!Behavior method!
initializeOn: anInitialValue
	(value _ anInitialValue
		cover: (41 to: 54)
		declaredAt: (15 to: 28))
		cover: (32 to: 36)
		declaredAt: (32 to: 36).
	(observers _ [
	(Set
		cover: (71 to: 73)
		declaredAt: (71 to: 73)) new ] valueCoveringAll:
		{75 to: 77})
		cover: (58 to: 66)
		declaredAt: (58 to: 66).! !
!Behavior method!
for: aMarsRover
	^ [
	([
	(self coverAll:
		{22 to: 25}) new ] valueCoveringAll:
		{27 to: 29}) initializeFor:
		(aMarsRover
			cover: (46 to: 55)
			declaredAt: (6 to: 15)) ] valueCoveringAll:
		{31 to: 44}.! !
!Behavior method!
initializeFor: aMarsRover
	(marsRover _ aMarsRover
		cover: (44 to: 53)
		declaredAt: (16 to: 25))
		cover: (31 to: 39)
		declaredAt: (31 to: 39).! !
!Behavior method!
followPositionChangesOn: aMarsRover
	^ [
	([
	(self coverAll:
		{42 to: 45}) new ] valueCoveringAll:
		{47 to: 49}) initializeFollowingPositionChangesOn:
		(aMarsRover
			cover: (89 to: 98)
			declaredAt: (26 to: 35)) ] valueCoveringAll:
		{51 to: 87}.! !
!Behavior method!
initialize
	(log _ [
	(WriteStream
		cover: (22 to: 32)
		declaredAt: (22 to: 32)) on:
		('' coverAll:
			{38 to: 39}) ] valueCoveringAll:
		{34 to: 36})
		cover: (14 to: 16)
		declaredAt: (14 to: 16).! !
!Behavior method!
initializeFollowingPositionChangesOn: aMarsRover
	[
	(aMarsRover
		cover: (54 to: 63)
		declaredAt: (39 to: 48)) followPositionChangesWith:
		(self coverAll:
			{92 to: 95}) ] valueCoveringAll:
		{65 to: 90}.! !
!Behavior method!
followPositionChangesWith: anObserver
	[
	(position
		cover: (41 to: 48)
		declaredAt: (41 to: 48)) attach:
		(anObserver
			cover: (58 to: 67)
			declaredAt: (28 to: 37)) ] valueCoveringAll:
		{50 to: 56}.! !
!Behavior method!
attach: anObserver
	[
	(observers
		cover: (22 to: 30)
		declaredAt: (22 to: 30)) add:
		(anObserver
			cover: (37 to: 46)
			declaredAt: (9 to: 18)) ] valueCoveringAll:
		{32 to: 35}.! !
!Behavior method!
process: aSequenceOfCommands
	[
	(aSequenceOfCommands
		cover: (32 to: 50)
		declaredAt: (10 to: 28)) do: [ :aCommand |
		[
		(self coverAll:
			{69 to: 72}) processCommand:
			(aCommand
				cover: (90 to: 97)
				declaredAt: (58 to: 65)) ] valueCoveringAll:
			{74 to: 88} ]] valueCoveringAll:
		{52 to: 54}.! !
!Behavior method!
readStream
	^ [
	(ReadStream
		cover: (16 to: 25)
		declaredAt: (16 to: 25)) on:
		([
		(log
			cover: (31 to: 33)
			declaredAt: (31 to: 33)) contents ] valueCoveringAll:
			{35 to: 42}) ] valueCoveringAll:
		{27 to: 29}.! !

!testRun: #MarsRoverLoggerTest #test01 stamp: 'AEC 6/1/2022 13:32:36'!
PASSED!
!Behavior method!
processCommand: aCommand
	[
	([
	(self coverAll:
		{29 to: 32}) isForwardCommand:
		(aCommand
			cover: (52 to: 59)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{34 to: 50}) ifTrue: [ ^ [
		(self coverAll:
			{74 to: 77}) moveForward ] valueCoveringAll:
			{79 to: 89} ]] valueCoveringAll:
		{62 to: 68}.
	[
	([
	(self coverAll:
		{96 to: 99}) isBackwardCommand:
		(aCommand
			cover: (120 to: 127)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{101 to: 118}) ifTrue: [ ^ [
		(self coverAll:
			{142 to: 145}) moveBackward ] valueCoveringAll:
			{147 to: 158} ]] valueCoveringAll:
		{130 to: 136}.
	[
	([
	(self coverAll:
		{165 to: 168}) isRotateRightCommand:
		(aCommand
			cover: (192 to: 199)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{170 to: 190}) ifTrue: [ ^ [
		(self coverAll:
			{214 to: 217}) rotateRight ] valueCoveringAll:
			{219 to: 229} ]] valueCoveringAll:
		{202 to: 208}.
	[
	([
	(self coverAll:
		{236 to: 239}) isRotateLeftCommand:
		(aCommand
			cover: (262 to: 269)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{241 to: 260}) ifTrue: [ ^ [
		(self coverAll:
			{284 to: 287}) rotateLeft ] valueCoveringAll:
			{289 to: 298} ]] valueCoveringAll:
		{272 to: 278}.
	[
	(self coverAll:
		{305 to: 308}) signalInvalidCommand ] valueCoveringAll:
		{310 to: 329}.! !
!Behavior method!
isForwardCommand: aCommand
	^ [
	(aCommand
		cover: (31 to: 38)
		declaredAt: (19 to: 26)) =
		($f coverAll:
			{42 to: 43}) ] valueCoveringAll:
		{40 to: 40}.! !
!Behavior method!
moveForward
	[
	([
	(self coverAll:
		{16 to: 19}) headProxyValue ] valueCoveringAll:
		{21 to: 34}) moveForward ] valueCoveringAll:
		{36 to: 46}.! !
!Behavior method!
headProxyValue
	^ [
	(head
		cover: (20 to: 23)
		declaredAt: (20 to: 23)) value ] valueCoveringAll:
		{25 to: 29}.! !
!Behavior method!
value
	^ value
		cover: (10 to: 14)
		declaredAt: (10 to: 14).! !
!Behavior method!
moveForward
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) moveNorth ] valueCoveringAll:
		{27 to: 35}.! !
!Behavior method!
moveNorth
	[
	(self coverAll:
		{14 to: 17}) addToPosition:
		([
		(0 coverAll:
			{34 to: 34}) @
			(1 coverAll:
				{36 to: 36}) ] valueCoveringAll:
			{35 to: 35}) ] valueCoveringAll:
		{19 to: 32}.! !
!Behavior method!
addToPosition: newPosition
	[
	(position
		cover: (30 to: 37)
		declaredAt: (30 to: 37)) update:
		([
		([
		(self coverAll:
			{48 to: 51}) positionProxyValue ] valueCoveringAll:
			{53 to: 70}) +
			(newPosition
				cover: (74 to: 84)
				declaredAt: (16 to: 26)) ] valueCoveringAll:
			{72 to: 72}) ] valueCoveringAll:
		{39 to: 45}.! !
!Behavior method!
positionProxyValue
	^ [
	(position
		cover: (24 to: 31)
		declaredAt: (24 to: 31)) value ] valueCoveringAll:
		{33 to: 37}.! !
!Behavior method!
update: aNewValue
	(value _ aNewValue
		cover: (30 to: 38)
		declaredAt: (9 to: 17))
		cover: (21 to: 25)
		declaredAt: (21 to: 25).
	[
	(self coverAll:
		{42 to: 45}) notify ] valueCoveringAll:
		{47 to: 52}.! !
!Behavior method!
notify
	[
	(observers
		cover: (10 to: 18)
		declaredAt: (10 to: 18)) do: [ :observer |
		[
		(self coverAll:
			{36 to: 39}) notifyObserver:
			(observer
				cover: (57 to: 64)
				declaredAt: (25 to: 32)) ] valueCoveringAll:
			{41 to: 55} ]] valueCoveringAll:
		{20 to: 22}.! !
!Behavior method!
notifyObserver: anObserver
	[
	(anObserver
		cover: (30 to: 39)
		declaredAt: (17 to: 26)) updatePosition:
		(value
			cover: (57 to: 61)
			declaredAt: (57 to: 61)) ] valueCoveringAll:
		{41 to: 55}.! !
!Behavior method!
updatePosition: aPosition
	[
	(self coverAll:
		{29 to: 32}) addToLog:
		([
		(aPosition
			cover: (44 to: 52)
			declaredAt: (17 to: 25)) asString ] valueCoveringAll:
			{54 to: 61}) ] valueCoveringAll:
		{34 to: 42}.! !
!Behavior method!
addToLog: aLine
	[ | cascadeReceiver |
	cascadeReceiver _ log
		cover: (19 to: 21)
		declaredAt: (19 to: 21).
	[
	cascadeReceiver nextPutAll:
		(aLine
			cover: (35 to: 39)
			declaredAt: (11 to: 15)) ] valueCoveringAll:
		{23 to: 33}.
	[ cascadeReceiver newLine ] valueCoveringAll:
		{42 to: 48} ] value.! !

!testRun: #MarsRoverLoggerTest #test02 stamp: 'AEC 6/1/2022 13:32:36'!
PASSED!
!Behavior method!
isBackwardCommand: aCommand
	^ [
	(aCommand
		cover: (32 to: 39)
		declaredAt: (20 to: 27)) =
		($b coverAll:
			{43 to: 44}) ] valueCoveringAll:
		{41 to: 41}.! !
!Behavior method!
moveBackward
	[
	([
	(self coverAll:
		{17 to: 20}) headProxyValue ] valueCoveringAll:
		{22 to: 35}) moveBackward ] valueCoveringAll:
		{37 to: 48}.! !
!Behavior method!
moveBackward
	^ [
	(marsRover
		cover: (18 to: 26)
		declaredAt: (18 to: 26)) moveSouth ] valueCoveringAll:
		{28 to: 36}.! !
!Behavior method!
moveSouth
	[
	(self coverAll:
		{14 to: 17}) addToPosition:
		([
		(0 coverAll:
			{34 to: 34}) @
			(-1 coverAll:
				{36 to: 37}) ] valueCoveringAll:
			{35 to: 35}) ] valueCoveringAll:
		{19 to: 32}.! !

!testRun: #MarsRoverLoggerTest #test03 stamp: 'AEC 6/1/2022 13:32:36'!
PASSED!
!Behavior method!
moveForward
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) moveEast ] valueCoveringAll:
		{27 to: 34}.! !
!Behavior method!
moveEast
	[
	(self coverAll:
		{13 to: 16}) addToPosition:
		([
		(1 coverAll:
			{33 to: 33}) @
			(0 coverAll:
				{35 to: 35}) ] valueCoveringAll:
			{34 to: 34}) ] valueCoveringAll:
		{18 to: 31}.! !
!Behavior method!
moveBackward
	^ [
	(marsRover
		cover: (18 to: 26)
		declaredAt: (18 to: 26)) moveWest ] valueCoveringAll:
		{28 to: 35}.! !
!Behavior method!
moveWest
	[
	(self coverAll:
		{13 to: 16}) addToPosition:
		([
		(-1 coverAll:
			{33 to: 34}) @
			(0 coverAll:
				{35 to: 36}) ] valueCoveringAll:
			{35 to: 35}) ] valueCoveringAll:
		{18 to: 31}.! !

!testRun: #MarsRoverLoggerTest #test04 stamp: 'AEC 6/1/2022 13:32:36'!
PASSED!
!Behavior method!
followHeadingChangesOn: aMarsRover
	^ [
	([
	(self coverAll:
		{41 to: 44}) new ] valueCoveringAll:
		{46 to: 48}) initializeFollowingHeadingChangesOn:
		(aMarsRover
			cover: (87 to: 96)
			declaredAt: (25 to: 34)) ] valueCoveringAll:
		{50 to: 85}.! !
!Behavior method!
initializeFollowingHeadingChangesOn: aMarsRover
	[
	(aMarsRover
		cover: (52 to: 61)
		declaredAt: (38 to: 47)) followHeadingChangesWith:
		(self coverAll:
			{89 to: 92}) ] valueCoveringAll:
		{63 to: 87}.! !
!Behavior method!
followHeadingChangesWith: anObserver
	[
	(head
		cover: (40 to: 43)
		declaredAt: (40 to: 43)) attach:
		(anObserver
			cover: (53 to: 62)
			declaredAt: (27 to: 36)) ] valueCoveringAll:
		{45 to: 51}.! !
!Behavior method!
isRotateRightCommand: aCommand
	^ [
	(aCommand
		cover: (35 to: 42)
		declaredAt: (23 to: 30)) =
		($r coverAll:
			{46 to: 47}) ] valueCoveringAll:
		{44 to: 44}.! !
!Behavior method!
rotateRight
	[
	([
	(self coverAll:
		{16 to: 19}) headProxyValue ] valueCoveringAll:
		{21 to: 34}) rotateRight ] valueCoveringAll:
		{36 to: 46}.! !
!Behavior method!
rotateRight
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) headEast ] valueCoveringAll:
		{27 to: 34}.! !
!Behavior method!
headEast
	[
	(head
		cover: (13 to: 16)
		declaredAt: (13 to: 16)) update:
		([
		(MarsRoverHeadingEast
			cover: (27 to: 46)
			declaredAt: (27 to: 46)) for:
			(self coverAll:
				{53 to: 56}) ] valueCoveringAll:
			{48 to: 51}) ] valueCoveringAll:
		{18 to: 24}.! !
!Behavior method!
notifyObserver: anObserver
	[
	(anObserver
		cover: (30 to: 39)
		declaredAt: (17 to: 26)) updateHeading:
		(value
			cover: (56 to: 60)
			declaredAt: (56 to: 60)) ] valueCoveringAll:
		{41 to: 54}.! !
!Behavior method!
updateHeading: aMarsRoverHeading
	[
	(aMarsRoverHeading
		cover: (36 to: 52)
		declaredAt: (16 to: 32)) accept:
		(self coverAll:
			{62 to: 65}) ] valueCoveringAll:
		{54 to: 60}.! !
!Behavior method!
accept: aVisitor
	^ [
	(aVisitor
		cover: (21 to: 28)
		declaredAt: (9 to: 16)) visitMarsRoverHeadingEast:
		(self coverAll:
			{57 to: 60}) ] valueCoveringAll:
		{30 to: 55}.! !
!Behavior method!
visitMarsRoverHeadingEast: aMarsRoverHeadingEast
	[
	(self coverAll:
		{53 to: 56}) addToLog:
		('East' coverAll:
			{68 to: 73}) ] valueCoveringAll:
		{58 to: 66}.! !

!testRun: #MarsRoverLoggerTest #test05 stamp: 'AEC 6/1/2022 13:32:36'!
PASSED!
!Behavior method!
isRotateLeftCommand: aCommand
	^ [
	(aCommand
		cover: (34 to: 41)
		declaredAt: (22 to: 29)) =
		($l coverAll:
			{45 to: 46}) ] valueCoveringAll:
		{43 to: 43}.! !
!Behavior method!
rotateLeft
	[
	([
	(self coverAll:
		{15 to: 18}) headProxyValue ] valueCoveringAll:
		{20 to: 33}) rotateLeft ] valueCoveringAll:
		{35 to: 44}.! !
!Behavior method!
rotateLeft
	^ [
	(marsRover
		cover: (16 to: 24)
		declaredAt: (16 to: 24)) headNorth ] valueCoveringAll:
		{26 to: 34}.! !
!Behavior method!
headNorth
	[
	(head
		cover: (14 to: 17)
		declaredAt: (14 to: 17)) update:
		([
		(MarsRoverHeadingNorth
			cover: (28 to: 48)
			declaredAt: (28 to: 48)) for:
			(self coverAll:
				{55 to: 58}) ] valueCoveringAll:
			{50 to: 53}) ] valueCoveringAll:
		{19 to: 25}.! !
!Behavior method!
accept: aVisitor
	^ [
	(aVisitor
		cover: (21 to: 28)
		declaredAt: (9 to: 16)) visitMarsRoverHeadingNorth:
		(self coverAll:
			{58 to: 61}) ] valueCoveringAll:
		{30 to: 56}.! !
!Behavior method!
visitMarsRoverHeadingNorth: aMarsRoverHeadingNorth
	[
	(self coverAll:
		{55 to: 58}) addToLog:
		('North' coverAll:
			{70 to: 76}) ] valueCoveringAll:
		{60 to: 68}.! !
!Behavior method!
rotateLeft
	^ [
	(marsRover
		cover: (16 to: 24)
		declaredAt: (16 to: 24)) headWest ] valueCoveringAll:
		{26 to: 33}.! !
!Behavior method!
headWest
	[
	(head
		cover: (13 to: 16)
		declaredAt: (13 to: 16)) update:
		([
		(MarsRoverHeadingWest
			cover: (27 to: 46)
			declaredAt: (27 to: 46)) for:
			(self coverAll:
				{53 to: 56}) ] valueCoveringAll:
			{48 to: 51}) ] valueCoveringAll:
		{18 to: 24}.! !
!Behavior method!
accept: aVisitor
	^ [
	(aVisitor
		cover: (21 to: 28)
		declaredAt: (9 to: 16)) visitMarsRoverHeadingWest:
		(self coverAll:
			{57 to: 60}) ] valueCoveringAll:
		{30 to: 55}.! !
!Behavior method!
visitMarsRoverHeadingWest: aMarsRoverHeadingWest
	[
	(self coverAll:
		{53 to: 56}) addToLog:
		('West' coverAll:
			{68 to: 73}) ] valueCoveringAll:
		{58 to: 66}.! !
!Behavior method!
rotateLeft
	^ [
	(marsRover
		cover: (16 to: 24)
		declaredAt: (16 to: 24)) headSouth ] valueCoveringAll:
		{26 to: 34}.! !
!Behavior method!
headSouth
	[
	(head
		cover: (14 to: 17)
		declaredAt: (14 to: 17)) update:
		([
		(MarsRoverHeadingSouth
			cover: (28 to: 48)
			declaredAt: (28 to: 48)) for:
			(self coverAll:
				{55 to: 58}) ] valueCoveringAll:
			{50 to: 53}) ] valueCoveringAll:
		{19 to: 25}.! !
!Behavior method!
accept: aVisitor
	^ [
	(aVisitor
		cover: (21 to: 28)
		declaredAt: (9 to: 16)) visitMarsRoverHeadingSouth:
		(self coverAll:
			{58 to: 61}) ] valueCoveringAll:
		{30 to: 56}.! !
!Behavior method!
visitMarsRoverHeadingSouth: aMarsRoverHeadingSouth
	[
	(self coverAll:
		{55 to: 58}) addToLog:
		('South' coverAll:
			{70 to: 76}) ] valueCoveringAll:
		{60 to: 68}.! !

!testRun: #MarsRoverLoggerTest #test06 stamp: 'AEC 6/1/2022 13:32:36'!
PASSED!
!Behavior method!
followPositionAndHeadingChangesOn: aMarsRover
	^ [
	([
	(self coverAll:
		{51 to: 54}) new ] valueCoveringAll:
		{56 to: 58}) initializeFollowingPositionAndHeadingChangesOn:
		(aMarsRover
			cover: (108 to: 117)
			declaredAt: (36 to: 45)) ] valueCoveringAll:
		{60 to: 106}.! !
!Behavior method!
initializeFollowingPositionAndHeadingChangesOn: aMarsRover
	[
	(self coverAll:
		{63 to: 66}) initializeFollowingHeadingChangesOn:
		(aMarsRover
			cover: (105 to: 114)
			declaredAt: (49 to: 58)) ] valueCoveringAll:
		{68 to: 103}.
	[
	(self coverAll:
		{118 to: 121}) initializeFollowingPositionChangesOn:
		(aMarsRover
			cover: (161 to: 170)
			declaredAt: (49 to: 58)) ] valueCoveringAll:
		{123 to: 159}.! !
!Behavior method!
rotateRight
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) headSouth ] valueCoveringAll:
		{27 to: 35}.! !
!Behavior method!
moveForward
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) moveSouth ] valueCoveringAll:
		{27 to: 35}.! !
!Behavior method!
rotateRight
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) headWest ] valueCoveringAll:
		{27 to: 34}.! !

!testRun: #MarsRoverLoggerTest #test07 stamp: 'AEC 6/1/2022 13:32:36'!
PASSED!
!Behavior method!
isAt: aPosition heading: aHeadingType
	^ [
	([
	([
	(self coverAll:
		{42 to: 45}) positionProxyValue ] valueCoveringAll:
		{47 to: 64}) =
		(aPosition
			cover: (68 to: 76)
			declaredAt: (7 to: 15)) ] valueCoveringAll:
		{66 to: 66}) and: [
		[
		([
		(self coverAll:
			{85 to: 88}) headProxyValue ] valueCoveringAll:
			{90 to: 103}) isHeading:
			(aHeadingType
				cover: (116 to: 127)
				declaredAt: (26 to: 37)) ] valueCoveringAll:
			{105 to: 114} ]] valueCoveringAll:
		{78 to: 81}.! !
!Behavior method!
isHeading: aHeadingType
	^ [
	(self coverAll:
		{28 to: 31}) isKindOf:
		(aHeadingType
			cover: (43 to: 54)
			declaredAt: (12 to: 23)) ] valueCoveringAll:
		{33 to: 41}.! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'AEC 6/1/2022 13:32:36'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'AEC 6/1/2022 13:32:36'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'AEC 6/1/2022 13:32:36'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'AEC 6/1/2022 13:32:36'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'AEC 6/1/2022 13:32:36'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'AEC 6/1/2022 13:32:36'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'AEC 6/1/2022 13:32:36'!
PASSED!
!Behavior method!
signalInvalidCommand
	[
	(self coverAll:
		{25 to: 28}) error:
		([
		(self coverAll:
			{37 to: 40}) invalidCommandErrorDescription ] valueCoveringAll:
			{42 to: 71}) ] valueCoveringAll:
		{30 to: 35}.! !
!Behavior method!
invalidCommandErrorDescription
	^ 'Invalid command' coverAll:
		{36 to: 52}.! !

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'AEC 6/1/2022 13:32:36'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'AEC 6/1/2022 13:32:36'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'AEC 6/1/2022 13:32:36'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'AEC 6/1/2022 13:32:36'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'AEC 6/1/2022 13:32:36'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'AEC 6/1/2022 13:32:36'!
PASSED!
!Behavior method!
moveBackward
	^ [
	(marsRover
		cover: (18 to: 26)
		declaredAt: (18 to: 26)) moveNorth ] valueCoveringAll:
		{28 to: 36}.! !
!Behavior method!
rotateLeft
	^ [
	(marsRover
		cover: (16 to: 24)
		declaredAt: (16 to: 24)) headEast ] valueCoveringAll:
		{26 to: 33}.! !

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'AEC 6/1/2022 13:32:37'!
PASSED!
!Behavior method!
moveForward
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) moveWest ] valueCoveringAll:
		{27 to: 34}.! !
!Behavior method!
moveBackward
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) moveEast ] valueCoveringAll:
		{27 to: 34}.! !
!Behavior method!
rotateRight
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) headNorth ] valueCoveringAll:
		{27 to: 35}.! !

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'AEC 6/1/2022 13:32:37'!
PASSED!
!Behavior method!
followPositionChangesOn: aMarsRover
	^ [
	([
	(self coverAll:
		{42 to: 45}) new ] valueCoveringAll:
		{47 to: 49}) initializeFollowingPositionChangesOn:
		(aMarsRover
			cover: (89 to: 98)
			declaredAt: (26 to: 35)) ] valueCoveringAll:
		{51 to: 87}.! !
!Behavior method!
initialize
	(headingField _ '' coverAll:
		{31 to: 32})
		cover: (14 to: 25)
		declaredAt: (14 to: 25).
	(positionField _ '' coverAll:
		{54 to: 55})
		cover: (36 to: 48)
		declaredAt: (36 to: 48).! !
!Behavior method!
show
	^ [
	([
	([
	(positionField
		cover: (10 to: 22)
		declaredAt: (10 to: 22)) ,
		(' ' coverAll:
			{24 to: 26}) ] valueCoveringAll:
		{23 to: 23}) ,
		(headingField
			cover: (28 to: 39)
			declaredAt: (28 to: 39)) ] valueCoveringAll:
		{27 to: 27}) withBlanksTrimmed ] valueCoveringAll:
		{42 to: 58}.! !

!testRun: #MarsRoverWindowTest #test01 stamp: 'AEC 6/1/2022 13:32:37'!
PASSED!
!Behavior method!
updatePosition: aPosition
	(positionField _ [
	(aPosition
		cover: (46 to: 54)
		declaredAt: (17 to: 25)) asString ] valueCoveringAll:
		{56 to: 63})
		cover: (29 to: 41)
		declaredAt: (29 to: 41).! !

!testRun: #MarsRoverWindowTest #test02 stamp: 'AEC 6/1/2022 13:32:37'!
PASSED!
!Behavior method!
followHeadingChangesOn: aMarsRover
	^ [
	([
	(self coverAll:
		{41 to: 44}) new ] valueCoveringAll:
		{46 to: 48}) initializeFollowingHeadingChangesOn:
		(aMarsRover
			cover: (87 to: 96)
			declaredAt: (25 to: 34)) ] valueCoveringAll:
		{50 to: 85}.! !

!testRun: #MarsRoverWindowTest #test03 stamp: 'AEC 6/1/2022 13:32:37'!
PASSED!
!Behavior method!
visitMarsRoverHeadingSouth: aMarsRoverHeadingSouth
	(headingField _ 'Apuntando al Sur' coverAll:
		{71 to: 88})
		cover: (55 to: 66)
		declaredAt: (55 to: 66).! !
!Behavior method!
visitMarsRoverHeadingWest: aMarsRoverHeadingWest
	(headingField _ 'Apuntando al Oeste' coverAll:
		{69 to: 88})
		cover: (53 to: 64)
		declaredAt: (53 to: 64).! !
!Behavior method!
visitMarsRoverHeadingNorth: aMarsRoverHeadingNorth
	(headingField _ 'Apuntando al Norte' coverAll:
		{71 to: 90})
		cover: (55 to: 66)
		declaredAt: (55 to: 66).! !

!testRun: #MarsRoverWindowTest #test04 stamp: 'AEC 6/1/2022 13:32:37'!
PASSED!
!Behavior method!
followPositionAndHeadingChangesOn: aMarsRover
	^ [
	([
	(self coverAll:
		{51 to: 54}) new ] valueCoveringAll:
		{56 to: 58}) initializeFollowingPositionAndHeadingChangesOn:
		(aMarsRover
			cover: (108 to: 117)
			declaredAt: (36 to: 45)) ] valueCoveringAll:
		{60 to: 106}.! !

!testRun: #MarsRoverWindowTest #test05 stamp: 'AEC 6/1/2022 13:32:37'!
PASSED!
!MarsRoverWindowTest methodsFor: 'tests' stamp: 'AEC 6/1/2022 13:34:07' prior: 50479596!
test05

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingSouth.
	window := MarsRoverWindow followPositionAndHeadingChangesOn: marsRover.
	
	self assert: '' equals: window show.
	
	marsRover process: 'l'.
	
	self assert: 'Apuntando al Este' equals: window show.
	
	marsRover process: 'f'.
	
	self assert: '2@1 Apuntando al Este' equals: window show. ! !
!Behavior method!
at: aPosition heading: aHeadingType
	^ [
	([
	(self coverAll:
		{41 to: 44}) new ] valueCoveringAll:
		{46 to: 48})
		initializeAt:
			(aPosition
				cover: (64 to: 72)
				declaredAt: (5 to: 13))
		heading:
			(aHeadingType
				cover: (83 to: 94)
				declaredAt: (24 to: 35)) ] valueCoveringAll:
		{50 to: 62. 74 to: 81}.! !
!Behavior method!
initializeAt: aPosition heading: aHeadingType
	(position _ [
	(PositionProxy
		cover: (61 to: 73)
		declaredAt: (61 to: 73)) on:
		(aPosition
			cover: (79 to: 87)
			declaredAt: (15 to: 23)) ] valueCoveringAll:
		{75 to: 77})
		cover: (49 to: 56)
		declaredAt: (49 to: 56).
	(head _ [
	(HeadingProxy
		cover: (99 to: 110)
		declaredAt: (99 to: 110)) on:
		([
		(aHeadingType
			cover: (117 to: 128)
			declaredAt: (34 to: 45)) for:
			(self coverAll:
				{135 to: 138}) ] valueCoveringAll:
			{130 to: 133}) ] valueCoveringAll:
		{112 to: 114})
		cover: (91 to: 94)
		declaredAt: (91 to: 94).! !
!Behavior method!
on: anInitialValue
	^ [
	([
	(self coverAll:
		{24 to: 27}) new ] valueCoveringAll:
		{29 to: 31}) initializeOn:
		(anInitialValue
			cover: (47 to: 60)
			declaredAt: (5 to: 18)) ] valueCoveringAll:
		{33 to: 45}.! !
!Behavior method!
initializeOn: anInitialValue
	(value _ anInitialValue
		cover: (41 to: 54)
		declaredAt: (15 to: 28))
		cover: (32 to: 36)
		declaredAt: (32 to: 36).
	(observers _ [
	(Set
		cover: (71 to: 73)
		declaredAt: (71 to: 73)) new ] valueCoveringAll:
		{75 to: 77})
		cover: (58 to: 66)
		declaredAt: (58 to: 66).! !
!Behavior method!
for: aMarsRover
	^ [
	([
	(self coverAll:
		{22 to: 25}) new ] valueCoveringAll:
		{27 to: 29}) initializeFor:
		(aMarsRover
			cover: (46 to: 55)
			declaredAt: (6 to: 15)) ] valueCoveringAll:
		{31 to: 44}.! !
!Behavior method!
initializeFor: aMarsRover
	(marsRover _ aMarsRover
		cover: (44 to: 53)
		declaredAt: (16 to: 25))
		cover: (31 to: 39)
		declaredAt: (31 to: 39).! !
!Behavior method!
followPositionChangesOn: aMarsRover
	^ [
	([
	(self coverAll:
		{42 to: 45}) new ] valueCoveringAll:
		{47 to: 49}) initializeFollowingPositionChangesOn:
		(aMarsRover
			cover: (89 to: 98)
			declaredAt: (26 to: 35)) ] valueCoveringAll:
		{51 to: 87}.! !
!Behavior method!
initialize
	(log _ [
	(WriteStream
		cover: (22 to: 32)
		declaredAt: (22 to: 32)) on:
		('' coverAll:
			{38 to: 39}) ] valueCoveringAll:
		{34 to: 36})
		cover: (14 to: 16)
		declaredAt: (14 to: 16).! !
!Behavior method!
initializeFollowingPositionChangesOn: aMarsRover
	[
	(aMarsRover
		cover: (54 to: 63)
		declaredAt: (39 to: 48)) followPositionChangesWith:
		(self coverAll:
			{92 to: 95}) ] valueCoveringAll:
		{65 to: 90}.! !
!Behavior method!
followPositionChangesWith: anObserver
	[
	(position
		cover: (41 to: 48)
		declaredAt: (41 to: 48)) attach:
		(anObserver
			cover: (58 to: 67)
			declaredAt: (28 to: 37)) ] valueCoveringAll:
		{50 to: 56}.! !
!Behavior method!
attach: anObserver
	[
	(observers
		cover: (22 to: 30)
		declaredAt: (22 to: 30)) add:
		(anObserver
			cover: (37 to: 46)
			declaredAt: (9 to: 18)) ] valueCoveringAll:
		{32 to: 35}.! !
!Behavior method!
process: aSequenceOfCommands
	[
	(aSequenceOfCommands
		cover: (32 to: 50)
		declaredAt: (10 to: 28)) do: [ :aCommand |
		[
		(self coverAll:
			{69 to: 72}) processCommand:
			(aCommand
				cover: (90 to: 97)
				declaredAt: (58 to: 65)) ] valueCoveringAll:
			{74 to: 88} ]] valueCoveringAll:
		{52 to: 54}.! !
!Behavior method!
readStream
	^ [
	(ReadStream
		cover: (16 to: 25)
		declaredAt: (16 to: 25)) on:
		([
		(log
			cover: (31 to: 33)
			declaredAt: (31 to: 33)) contents ] valueCoveringAll:
			{35 to: 42}) ] valueCoveringAll:
		{27 to: 29}.! !

!testRun: #MarsRoverLoggerTest #test01 stamp: 'AEC 6/1/2022 13:34:11'!
PASSED!
!Behavior method!
processCommand: aCommand
	[
	([
	(self coverAll:
		{29 to: 32}) isForwardCommand:
		(aCommand
			cover: (52 to: 59)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{34 to: 50}) ifTrue: [ ^ [
		(self coverAll:
			{74 to: 77}) moveForward ] valueCoveringAll:
			{79 to: 89} ]] valueCoveringAll:
		{62 to: 68}.
	[
	([
	(self coverAll:
		{96 to: 99}) isBackwardCommand:
		(aCommand
			cover: (120 to: 127)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{101 to: 118}) ifTrue: [ ^ [
		(self coverAll:
			{142 to: 145}) moveBackward ] valueCoveringAll:
			{147 to: 158} ]] valueCoveringAll:
		{130 to: 136}.
	[
	([
	(self coverAll:
		{165 to: 168}) isRotateRightCommand:
		(aCommand
			cover: (192 to: 199)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{170 to: 190}) ifTrue: [ ^ [
		(self coverAll:
			{214 to: 217}) rotateRight ] valueCoveringAll:
			{219 to: 229} ]] valueCoveringAll:
		{202 to: 208}.
	[
	([
	(self coverAll:
		{236 to: 239}) isRotateLeftCommand:
		(aCommand
			cover: (262 to: 269)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{241 to: 260}) ifTrue: [ ^ [
		(self coverAll:
			{284 to: 287}) rotateLeft ] valueCoveringAll:
			{289 to: 298} ]] valueCoveringAll:
		{272 to: 278}.
	[
	(self coverAll:
		{305 to: 308}) signalInvalidCommand ] valueCoveringAll:
		{310 to: 329}.! !
!Behavior method!
isForwardCommand: aCommand
	^ [
	(aCommand
		cover: (31 to: 38)
		declaredAt: (19 to: 26)) =
		($f coverAll:
			{42 to: 43}) ] valueCoveringAll:
		{40 to: 40}.! !
!Behavior method!
moveForward
	[
	([
	(self coverAll:
		{16 to: 19}) headProxyValue ] valueCoveringAll:
		{21 to: 34}) moveForward ] valueCoveringAll:
		{36 to: 46}.! !
!Behavior method!
headProxyValue
	^ [
	(head
		cover: (20 to: 23)
		declaredAt: (20 to: 23)) value ] valueCoveringAll:
		{25 to: 29}.! !
!Behavior method!
value
	^ value
		cover: (10 to: 14)
		declaredAt: (10 to: 14).! !
!Behavior method!
moveForward
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) moveNorth ] valueCoveringAll:
		{27 to: 35}.! !
!Behavior method!
moveNorth
	[
	(self coverAll:
		{14 to: 17}) addToPosition:
		([
		(0 coverAll:
			{34 to: 34}) @
			(1 coverAll:
				{36 to: 36}) ] valueCoveringAll:
			{35 to: 35}) ] valueCoveringAll:
		{19 to: 32}.! !
!Behavior method!
addToPosition: newPosition
	[
	(position
		cover: (30 to: 37)
		declaredAt: (30 to: 37)) update:
		([
		([
		(self coverAll:
			{48 to: 51}) positionProxyValue ] valueCoveringAll:
			{53 to: 70}) +
			(newPosition
				cover: (74 to: 84)
				declaredAt: (16 to: 26)) ] valueCoveringAll:
			{72 to: 72}) ] valueCoveringAll:
		{39 to: 45}.! !
!Behavior method!
positionProxyValue
	^ [
	(position
		cover: (24 to: 31)
		declaredAt: (24 to: 31)) value ] valueCoveringAll:
		{33 to: 37}.! !
!Behavior method!
update: aNewValue
	(value _ aNewValue
		cover: (30 to: 38)
		declaredAt: (9 to: 17))
		cover: (21 to: 25)
		declaredAt: (21 to: 25).
	[
	(self coverAll:
		{42 to: 45}) notify ] valueCoveringAll:
		{47 to: 52}.! !
!Behavior method!
notify
	[
	(observers
		cover: (10 to: 18)
		declaredAt: (10 to: 18)) do: [ :observer |
		[
		(self coverAll:
			{36 to: 39}) notifyObserver:
			(observer
				cover: (57 to: 64)
				declaredAt: (25 to: 32)) ] valueCoveringAll:
			{41 to: 55} ]] valueCoveringAll:
		{20 to: 22}.! !
!Behavior method!
notifyObserver: anObserver
	[
	(anObserver
		cover: (30 to: 39)
		declaredAt: (17 to: 26)) updatePosition:
		(value
			cover: (57 to: 61)
			declaredAt: (57 to: 61)) ] valueCoveringAll:
		{41 to: 55}.! !
!Behavior method!
updatePosition: aPosition
	[
	(self coverAll:
		{29 to: 32}) addToLog:
		([
		(aPosition
			cover: (44 to: 52)
			declaredAt: (17 to: 25)) asString ] valueCoveringAll:
			{54 to: 61}) ] valueCoveringAll:
		{34 to: 42}.! !
!Behavior method!
addToLog: aLine
	[ | cascadeReceiver |
	cascadeReceiver _ log
		cover: (19 to: 21)
		declaredAt: (19 to: 21).
	[
	cascadeReceiver nextPutAll:
		(aLine
			cover: (35 to: 39)
			declaredAt: (11 to: 15)) ] valueCoveringAll:
		{23 to: 33}.
	[ cascadeReceiver newLine ] valueCoveringAll:
		{42 to: 48} ] value.! !

!testRun: #MarsRoverLoggerTest #test02 stamp: 'AEC 6/1/2022 13:34:11'!
PASSED!
!Behavior method!
isBackwardCommand: aCommand
	^ [
	(aCommand
		cover: (32 to: 39)
		declaredAt: (20 to: 27)) =
		($b coverAll:
			{43 to: 44}) ] valueCoveringAll:
		{41 to: 41}.! !
!Behavior method!
moveBackward
	[
	([
	(self coverAll:
		{17 to: 20}) headProxyValue ] valueCoveringAll:
		{22 to: 35}) moveBackward ] valueCoveringAll:
		{37 to: 48}.! !
!Behavior method!
moveBackward
	^ [
	(marsRover
		cover: (18 to: 26)
		declaredAt: (18 to: 26)) moveSouth ] valueCoveringAll:
		{28 to: 36}.! !
!Behavior method!
moveSouth
	[
	(self coverAll:
		{14 to: 17}) addToPosition:
		([
		(0 coverAll:
			{34 to: 34}) @
			(-1 coverAll:
				{36 to: 37}) ] valueCoveringAll:
			{35 to: 35}) ] valueCoveringAll:
		{19 to: 32}.! !

!testRun: #MarsRoverLoggerTest #test03 stamp: 'AEC 6/1/2022 13:34:11'!
PASSED!
!Behavior method!
moveForward
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) moveEast ] valueCoveringAll:
		{27 to: 34}.! !
!Behavior method!
moveEast
	[
	(self coverAll:
		{13 to: 16}) addToPosition:
		([
		(1 coverAll:
			{33 to: 33}) @
			(0 coverAll:
				{35 to: 35}) ] valueCoveringAll:
			{34 to: 34}) ] valueCoveringAll:
		{18 to: 31}.! !
!Behavior method!
moveBackward
	^ [
	(marsRover
		cover: (18 to: 26)
		declaredAt: (18 to: 26)) moveWest ] valueCoveringAll:
		{28 to: 35}.! !
!Behavior method!
moveWest
	[
	(self coverAll:
		{13 to: 16}) addToPosition:
		([
		(-1 coverAll:
			{33 to: 34}) @
			(0 coverAll:
				{35 to: 36}) ] valueCoveringAll:
			{35 to: 35}) ] valueCoveringAll:
		{18 to: 31}.! !

!testRun: #MarsRoverLoggerTest #test04 stamp: 'AEC 6/1/2022 13:34:11'!
PASSED!
!Behavior method!
followHeadingChangesOn: aMarsRover
	^ [
	([
	(self coverAll:
		{41 to: 44}) new ] valueCoveringAll:
		{46 to: 48}) initializeFollowingHeadingChangesOn:
		(aMarsRover
			cover: (87 to: 96)
			declaredAt: (25 to: 34)) ] valueCoveringAll:
		{50 to: 85}.! !
!Behavior method!
initializeFollowingHeadingChangesOn: aMarsRover
	[
	(aMarsRover
		cover: (52 to: 61)
		declaredAt: (38 to: 47)) followHeadingChangesWith:
		(self coverAll:
			{89 to: 92}) ] valueCoveringAll:
		{63 to: 87}.! !
!Behavior method!
followHeadingChangesWith: anObserver
	[
	(head
		cover: (40 to: 43)
		declaredAt: (40 to: 43)) attach:
		(anObserver
			cover: (53 to: 62)
			declaredAt: (27 to: 36)) ] valueCoveringAll:
		{45 to: 51}.! !
!Behavior method!
isRotateRightCommand: aCommand
	^ [
	(aCommand
		cover: (35 to: 42)
		declaredAt: (23 to: 30)) =
		($r coverAll:
			{46 to: 47}) ] valueCoveringAll:
		{44 to: 44}.! !
!Behavior method!
rotateRight
	[
	([
	(self coverAll:
		{16 to: 19}) headProxyValue ] valueCoveringAll:
		{21 to: 34}) rotateRight ] valueCoveringAll:
		{36 to: 46}.! !
!Behavior method!
rotateRight
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) headEast ] valueCoveringAll:
		{27 to: 34}.! !
!Behavior method!
headEast
	[
	(head
		cover: (13 to: 16)
		declaredAt: (13 to: 16)) update:
		([
		(MarsRoverHeadingEast
			cover: (27 to: 46)
			declaredAt: (27 to: 46)) for:
			(self coverAll:
				{53 to: 56}) ] valueCoveringAll:
			{48 to: 51}) ] valueCoveringAll:
		{18 to: 24}.! !
!Behavior method!
notifyObserver: anObserver
	[
	(anObserver
		cover: (30 to: 39)
		declaredAt: (17 to: 26)) updateHeading:
		(value
			cover: (56 to: 60)
			declaredAt: (56 to: 60)) ] valueCoveringAll:
		{41 to: 54}.! !
!Behavior method!
updateHeading: aMarsRoverHeading
	[
	(aMarsRoverHeading
		cover: (36 to: 52)
		declaredAt: (16 to: 32)) accept:
		(self coverAll:
			{62 to: 65}) ] valueCoveringAll:
		{54 to: 60}.! !
!Behavior method!
accept: aVisitor
	^ [
	(aVisitor
		cover: (21 to: 28)
		declaredAt: (9 to: 16)) visitMarsRoverHeadingEast:
		(self coverAll:
			{57 to: 60}) ] valueCoveringAll:
		{30 to: 55}.! !
!Behavior method!
visitMarsRoverHeadingEast: aMarsRoverHeadingEast
	[
	(self coverAll:
		{53 to: 56}) addToLog:
		('East' coverAll:
			{68 to: 73}) ] valueCoveringAll:
		{58 to: 66}.! !

!testRun: #MarsRoverLoggerTest #test05 stamp: 'AEC 6/1/2022 13:34:11'!
PASSED!
!Behavior method!
isRotateLeftCommand: aCommand
	^ [
	(aCommand
		cover: (34 to: 41)
		declaredAt: (22 to: 29)) =
		($l coverAll:
			{45 to: 46}) ] valueCoveringAll:
		{43 to: 43}.! !
!Behavior method!
rotateLeft
	[
	([
	(self coverAll:
		{15 to: 18}) headProxyValue ] valueCoveringAll:
		{20 to: 33}) rotateLeft ] valueCoveringAll:
		{35 to: 44}.! !
!Behavior method!
rotateLeft
	^ [
	(marsRover
		cover: (16 to: 24)
		declaredAt: (16 to: 24)) headNorth ] valueCoveringAll:
		{26 to: 34}.! !
!Behavior method!
headNorth
	[
	(head
		cover: (14 to: 17)
		declaredAt: (14 to: 17)) update:
		([
		(MarsRoverHeadingNorth
			cover: (28 to: 48)
			declaredAt: (28 to: 48)) for:
			(self coverAll:
				{55 to: 58}) ] valueCoveringAll:
			{50 to: 53}) ] valueCoveringAll:
		{19 to: 25}.! !
!Behavior method!
accept: aVisitor
	^ [
	(aVisitor
		cover: (21 to: 28)
		declaredAt: (9 to: 16)) visitMarsRoverHeadingNorth:
		(self coverAll:
			{58 to: 61}) ] valueCoveringAll:
		{30 to: 56}.! !
!Behavior method!
visitMarsRoverHeadingNorth: aMarsRoverHeadingNorth
	[
	(self coverAll:
		{55 to: 58}) addToLog:
		('North' coverAll:
			{70 to: 76}) ] valueCoveringAll:
		{60 to: 68}.! !
!Behavior method!
rotateLeft
	^ [
	(marsRover
		cover: (16 to: 24)
		declaredAt: (16 to: 24)) headWest ] valueCoveringAll:
		{26 to: 33}.! !
!Behavior method!
headWest
	[
	(head
		cover: (13 to: 16)
		declaredAt: (13 to: 16)) update:
		([
		(MarsRoverHeadingWest
			cover: (27 to: 46)
			declaredAt: (27 to: 46)) for:
			(self coverAll:
				{53 to: 56}) ] valueCoveringAll:
			{48 to: 51}) ] valueCoveringAll:
		{18 to: 24}.! !
!Behavior method!
accept: aVisitor
	^ [
	(aVisitor
		cover: (21 to: 28)
		declaredAt: (9 to: 16)) visitMarsRoverHeadingWest:
		(self coverAll:
			{57 to: 60}) ] valueCoveringAll:
		{30 to: 55}.! !
!Behavior method!
visitMarsRoverHeadingWest: aMarsRoverHeadingWest
	[
	(self coverAll:
		{53 to: 56}) addToLog:
		('West' coverAll:
			{68 to: 73}) ] valueCoveringAll:
		{58 to: 66}.! !
!Behavior method!
rotateLeft
	^ [
	(marsRover
		cover: (16 to: 24)
		declaredAt: (16 to: 24)) headSouth ] valueCoveringAll:
		{26 to: 34}.! !
!Behavior method!
headSouth
	[
	(head
		cover: (14 to: 17)
		declaredAt: (14 to: 17)) update:
		([
		(MarsRoverHeadingSouth
			cover: (28 to: 48)
			declaredAt: (28 to: 48)) for:
			(self coverAll:
				{55 to: 58}) ] valueCoveringAll:
			{50 to: 53}) ] valueCoveringAll:
		{19 to: 25}.! !
!Behavior method!
accept: aVisitor
	^ [
	(aVisitor
		cover: (21 to: 28)
		declaredAt: (9 to: 16)) visitMarsRoverHeadingSouth:
		(self coverAll:
			{58 to: 61}) ] valueCoveringAll:
		{30 to: 56}.! !
!Behavior method!
visitMarsRoverHeadingSouth: aMarsRoverHeadingSouth
	[
	(self coverAll:
		{55 to: 58}) addToLog:
		('South' coverAll:
			{70 to: 76}) ] valueCoveringAll:
		{60 to: 68}.! !

!testRun: #MarsRoverLoggerTest #test06 stamp: 'AEC 6/1/2022 13:34:11'!
PASSED!
!Behavior method!
followPositionAndHeadingChangesOn: aMarsRover
	^ [
	([
	(self coverAll:
		{51 to: 54}) new ] valueCoveringAll:
		{56 to: 58}) initializeFollowingPositionAndHeadingChangesOn:
		(aMarsRover
			cover: (108 to: 117)
			declaredAt: (36 to: 45)) ] valueCoveringAll:
		{60 to: 106}.! !
!Behavior method!
initializeFollowingPositionAndHeadingChangesOn: aMarsRover
	[
	(self coverAll:
		{63 to: 66}) initializeFollowingHeadingChangesOn:
		(aMarsRover
			cover: (105 to: 114)
			declaredAt: (49 to: 58)) ] valueCoveringAll:
		{68 to: 103}.
	[
	(self coverAll:
		{118 to: 121}) initializeFollowingPositionChangesOn:
		(aMarsRover
			cover: (161 to: 170)
			declaredAt: (49 to: 58)) ] valueCoveringAll:
		{123 to: 159}.! !
!Behavior method!
rotateRight
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) headSouth ] valueCoveringAll:
		{27 to: 35}.! !
!Behavior method!
moveForward
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) moveSouth ] valueCoveringAll:
		{27 to: 35}.! !
!Behavior method!
rotateRight
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) headWest ] valueCoveringAll:
		{27 to: 34}.! !

!testRun: #MarsRoverLoggerTest #test07 stamp: 'AEC 6/1/2022 13:34:11'!
PASSED!
!Behavior method!
isAt: aPosition heading: aHeadingType
	^ [
	([
	([
	(self coverAll:
		{42 to: 45}) positionProxyValue ] valueCoveringAll:
		{47 to: 64}) =
		(aPosition
			cover: (68 to: 76)
			declaredAt: (7 to: 15)) ] valueCoveringAll:
		{66 to: 66}) and: [
		[
		([
		(self coverAll:
			{85 to: 88}) headProxyValue ] valueCoveringAll:
			{90 to: 103}) isHeading:
			(aHeadingType
				cover: (116 to: 127)
				declaredAt: (26 to: 37)) ] valueCoveringAll:
			{105 to: 114} ]] valueCoveringAll:
		{78 to: 81}.! !
!Behavior method!
isHeading: aHeadingType
	^ [
	(self coverAll:
		{28 to: 31}) isKindOf:
		(aHeadingType
			cover: (43 to: 54)
			declaredAt: (12 to: 23)) ] valueCoveringAll:
		{33 to: 41}.! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'AEC 6/1/2022 13:34:11'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'AEC 6/1/2022 13:34:11'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'AEC 6/1/2022 13:34:11'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'AEC 6/1/2022 13:34:11'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'AEC 6/1/2022 13:34:11'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'AEC 6/1/2022 13:34:11'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'AEC 6/1/2022 13:34:11'!
PASSED!
!Behavior method!
signalInvalidCommand
	[
	(self coverAll:
		{25 to: 28}) error:
		([
		(self coverAll:
			{37 to: 40}) invalidCommandErrorDescription ] valueCoveringAll:
			{42 to: 71}) ] valueCoveringAll:
		{30 to: 35}.! !
!Behavior method!
invalidCommandErrorDescription
	^ 'Invalid command' coverAll:
		{36 to: 52}.! !

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'AEC 6/1/2022 13:34:11'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'AEC 6/1/2022 13:34:11'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'AEC 6/1/2022 13:34:11'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'AEC 6/1/2022 13:34:11'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'AEC 6/1/2022 13:34:11'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'AEC 6/1/2022 13:34:11'!
PASSED!
!Behavior method!
moveBackward
	^ [
	(marsRover
		cover: (18 to: 26)
		declaredAt: (18 to: 26)) moveNorth ] valueCoveringAll:
		{28 to: 36}.! !
!Behavior method!
rotateLeft
	^ [
	(marsRover
		cover: (16 to: 24)
		declaredAt: (16 to: 24)) headEast ] valueCoveringAll:
		{26 to: 33}.! !

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'AEC 6/1/2022 13:34:12'!
PASSED!
!Behavior method!
moveForward
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) moveWest ] valueCoveringAll:
		{27 to: 34}.! !
!Behavior method!
moveBackward
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) moveEast ] valueCoveringAll:
		{27 to: 34}.! !
!Behavior method!
rotateRight
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) headNorth ] valueCoveringAll:
		{27 to: 35}.! !

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'AEC 6/1/2022 13:34:12'!
PASSED!
!Behavior method!
followPositionChangesOn: aMarsRover
	^ [
	([
	(self coverAll:
		{42 to: 45}) new ] valueCoveringAll:
		{47 to: 49}) initializeFollowingPositionChangesOn:
		(aMarsRover
			cover: (89 to: 98)
			declaredAt: (26 to: 35)) ] valueCoveringAll:
		{51 to: 87}.! !
!Behavior method!
initialize
	(headingField _ '' coverAll:
		{31 to: 32})
		cover: (14 to: 25)
		declaredAt: (14 to: 25).
	(positionField _ '' coverAll:
		{54 to: 55})
		cover: (36 to: 48)
		declaredAt: (36 to: 48).! !
!Behavior method!
show
	^ [
	([
	([
	(positionField
		cover: (10 to: 22)
		declaredAt: (10 to: 22)) ,
		(' ' coverAll:
			{24 to: 26}) ] valueCoveringAll:
		{23 to: 23}) ,
		(headingField
			cover: (28 to: 39)
			declaredAt: (28 to: 39)) ] valueCoveringAll:
		{27 to: 27}) withBlanksTrimmed ] valueCoveringAll:
		{42 to: 58}.! !

!testRun: #MarsRoverWindowTest #test01 stamp: 'AEC 6/1/2022 13:34:12'!
PASSED!
!Behavior method!
updatePosition: aPosition
	(positionField _ [
	(aPosition
		cover: (46 to: 54)
		declaredAt: (17 to: 25)) asString ] valueCoveringAll:
		{56 to: 63})
		cover: (29 to: 41)
		declaredAt: (29 to: 41).! !

!testRun: #MarsRoverWindowTest #test02 stamp: 'AEC 6/1/2022 13:34:12'!
PASSED!
!Behavior method!
followHeadingChangesOn: aMarsRover
	^ [
	([
	(self coverAll:
		{41 to: 44}) new ] valueCoveringAll:
		{46 to: 48}) initializeFollowingHeadingChangesOn:
		(aMarsRover
			cover: (87 to: 96)
			declaredAt: (25 to: 34)) ] valueCoveringAll:
		{50 to: 85}.! !

!testRun: #MarsRoverWindowTest #test03 stamp: 'AEC 6/1/2022 13:34:12'!
PASSED!
!Behavior method!
visitMarsRoverHeadingSouth: aMarsRoverHeadingSouth
	(headingField _ 'Apuntando al Sur' coverAll:
		{71 to: 88})
		cover: (55 to: 66)
		declaredAt: (55 to: 66).! !
!Behavior method!
visitMarsRoverHeadingWest: aMarsRoverHeadingWest
	(headingField _ 'Apuntando al Oeste' coverAll:
		{69 to: 88})
		cover: (53 to: 64)
		declaredAt: (53 to: 64).! !
!Behavior method!
visitMarsRoverHeadingNorth: aMarsRoverHeadingNorth
	(headingField _ 'Apuntando al Norte' coverAll:
		{71 to: 90})
		cover: (55 to: 66)
		declaredAt: (55 to: 66).! !

!testRun: #MarsRoverWindowTest #test04 stamp: 'AEC 6/1/2022 13:34:12'!
PASSED!
!Behavior method!
followPositionAndHeadingChangesOn: aMarsRover
	^ [
	([
	(self coverAll:
		{51 to: 54}) new ] valueCoveringAll:
		{56 to: 58}) initializeFollowingPositionAndHeadingChangesOn:
		(aMarsRover
			cover: (108 to: 117)
			declaredAt: (36 to: 45)) ] valueCoveringAll:
		{60 to: 106}.! !
!Behavior method!
visitMarsRoverHeadingEast: aMarsRoverHeadingEast
	(headingField _ 'Apuntando al Este' coverAll:
		{69 to: 87})
		cover: (53 to: 64)
		declaredAt: (53 to: 64).! !

!testRun: #MarsRoverWindowTest #test05 stamp: 'AEC 6/1/2022 13:34:12'!
PASSED!

----SNAPSHOT----(1 June 2022 13:35:27) CuisUniversity-5096.image priorSource: 4716986!

----SNAPSHOT----(1 June 2022 14:59:42) CuisUniversity-5096.image priorSource: 4793361!

----STARTUP---- (1 June 2022 18:54:24) as C:\Users\Fede\Desktop\cuis\windows64\CuisUniversity-5096.image!


!testRun: #MarsRoverLoggerTest #test01 stamp: 'fm 6/1/2022 18:56:47'!
PASSED!

!testRun: #MarsRoverLoggerTest #test02 stamp: 'fm 6/1/2022 18:56:47'!
PASSED!

!testRun: #MarsRoverLoggerTest #test03 stamp: 'fm 6/1/2022 18:56:47'!
PASSED!

!testRun: #MarsRoverLoggerTest #test04 stamp: 'fm 6/1/2022 18:56:47'!
PASSED!

!testRun: #MarsRoverLoggerTest #test05 stamp: 'fm 6/1/2022 18:56:47'!
PASSED!

!testRun: #MarsRoverLoggerTest #test06 stamp: 'fm 6/1/2022 18:56:47'!
PASSED!

!testRun: #MarsRoverLoggerTest #test07 stamp: 'fm 6/1/2022 18:56:47'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'fm 6/1/2022 18:56:47'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'fm 6/1/2022 18:56:47'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'fm 6/1/2022 18:56:47'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'fm 6/1/2022 18:56:47'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'fm 6/1/2022 18:56:47'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'fm 6/1/2022 18:56:47'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'fm 6/1/2022 18:56:47'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'fm 6/1/2022 18:56:47'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'fm 6/1/2022 18:56:47'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'fm 6/1/2022 18:56:47'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'fm 6/1/2022 18:56:47'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'fm 6/1/2022 18:56:47'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'fm 6/1/2022 18:56:47'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'fm 6/1/2022 18:56:47'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'fm 6/1/2022 18:56:47'!
PASSED!

!testRun: #MarsRoverWindowTest #test01 stamp: 'fm 6/1/2022 18:56:47'!
PASSED!

!testRun: #MarsRoverWindowTest #test02 stamp: 'fm 6/1/2022 18:56:47'!
PASSED!

!testRun: #MarsRoverWindowTest #test03 stamp: 'fm 6/1/2022 18:56:47'!
PASSED!

!testRun: #MarsRoverWindowTest #test04 stamp: 'fm 6/1/2022 18:56:47'!
PASSED!

!testRun: #MarsRoverWindowTest #test05 stamp: 'fm 6/1/2022 18:56:47'!
PASSED!
!MarsRoverVariableProxy methodsFor: 'notifying' stamp: 'fm 6/1/2022 19:18:15' prior: 50476852!
notify

	observers do: [:observer | self notifyObserver: observer ]! !
!Behavior method!
at: aPosition heading: aHeadingType
	^ [
	([
	(self coverAll:
		{41 to: 44}) new ] valueCoveringAll:
		{46 to: 48})
		initializeAt:
			(aPosition
				cover: (64 to: 72)
				declaredAt: (5 to: 13))
		heading:
			(aHeadingType
				cover: (83 to: 94)
				declaredAt: (24 to: 35)) ] valueCoveringAll:
		{50 to: 62. 74 to: 81}.! !
!Behavior method!
initializeAt: aPosition heading: aHeadingType
	(position _ [
	(PositionProxy
		cover: (61 to: 73)
		declaredAt: (61 to: 73)) on:
		(aPosition
			cover: (79 to: 87)
			declaredAt: (15 to: 23)) ] valueCoveringAll:
		{75 to: 77})
		cover: (49 to: 56)
		declaredAt: (49 to: 56).
	(head _ [
	(HeadingProxy
		cover: (99 to: 110)
		declaredAt: (99 to: 110)) on:
		([
		(aHeadingType
			cover: (117 to: 128)
			declaredAt: (34 to: 45)) for:
			(self coverAll:
				{135 to: 138}) ] valueCoveringAll:
			{130 to: 133}) ] valueCoveringAll:
		{112 to: 114})
		cover: (91 to: 94)
		declaredAt: (91 to: 94).! !
!Behavior method!
on: anInitialValue
	^ [
	([
	(self coverAll:
		{24 to: 27}) new ] valueCoveringAll:
		{29 to: 31}) initializeOn:
		(anInitialValue
			cover: (47 to: 60)
			declaredAt: (5 to: 18)) ] valueCoveringAll:
		{33 to: 45}.! !
!Behavior method!
initializeOn: anInitialValue
	(value _ anInitialValue
		cover: (41 to: 54)
		declaredAt: (15 to: 28))
		cover: (32 to: 36)
		declaredAt: (32 to: 36).
	(observers _ [
	(Set
		cover: (71 to: 73)
		declaredAt: (71 to: 73)) new ] valueCoveringAll:
		{75 to: 77})
		cover: (58 to: 66)
		declaredAt: (58 to: 66).! !
!Behavior method!
for: aMarsRover
	^ [
	([
	(self coverAll:
		{22 to: 25}) new ] valueCoveringAll:
		{27 to: 29}) initializeFor:
		(aMarsRover
			cover: (46 to: 55)
			declaredAt: (6 to: 15)) ] valueCoveringAll:
		{31 to: 44}.! !
!Behavior method!
initializeFor: aMarsRover
	(marsRover _ aMarsRover
		cover: (44 to: 53)
		declaredAt: (16 to: 25))
		cover: (31 to: 39)
		declaredAt: (31 to: 39).! !
!Behavior method!
followPositionChangesOn: aMarsRover
	^ [
	([
	(self coverAll:
		{42 to: 45}) new ] valueCoveringAll:
		{47 to: 49}) initializeFollowingPositionChangesOn:
		(aMarsRover
			cover: (89 to: 98)
			declaredAt: (26 to: 35)) ] valueCoveringAll:
		{51 to: 87}.! !
!Behavior method!
initialize
	(log _ [
	(WriteStream
		cover: (22 to: 32)
		declaredAt: (22 to: 32)) on:
		('' coverAll:
			{38 to: 39}) ] valueCoveringAll:
		{34 to: 36})
		cover: (14 to: 16)
		declaredAt: (14 to: 16).! !
!Behavior method!
initializeFollowingPositionChangesOn: aMarsRover
	[
	(aMarsRover
		cover: (54 to: 63)
		declaredAt: (39 to: 48)) followPositionChangesWith:
		(self coverAll:
			{92 to: 95}) ] valueCoveringAll:
		{65 to: 90}.! !
!Behavior method!
followPositionChangesWith: anObserver
	[
	(position
		cover: (41 to: 48)
		declaredAt: (41 to: 48)) attach:
		(anObserver
			cover: (58 to: 67)
			declaredAt: (28 to: 37)) ] valueCoveringAll:
		{50 to: 56}.! !
!Behavior method!
attach: anObserver
	[
	(observers
		cover: (22 to: 30)
		declaredAt: (22 to: 30)) add:
		(anObserver
			cover: (37 to: 46)
			declaredAt: (9 to: 18)) ] valueCoveringAll:
		{32 to: 35}.! !
!Behavior method!
process: aSequenceOfCommands
	[
	(aSequenceOfCommands
		cover: (32 to: 50)
		declaredAt: (10 to: 28)) do: [ :aCommand |
		[
		(self coverAll:
			{69 to: 72}) processCommand:
			(aCommand
				cover: (90 to: 97)
				declaredAt: (58 to: 65)) ] valueCoveringAll:
			{74 to: 88} ]] valueCoveringAll:
		{52 to: 54}.! !
!Behavior method!
readStream
	^ [
	(ReadStream
		cover: (16 to: 25)
		declaredAt: (16 to: 25)) on:
		([
		(log
			cover: (31 to: 33)
			declaredAt: (31 to: 33)) contents ] valueCoveringAll:
			{35 to: 42}) ] valueCoveringAll:
		{27 to: 29}.! !

!testRun: #MarsRoverLoggerTest #test01 stamp: 'fm 6/1/2022 19:18:59'!
PASSED!
!Behavior method!
processCommand: aCommand
	[
	([
	(self coverAll:
		{29 to: 32}) isForwardCommand:
		(aCommand
			cover: (52 to: 59)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{34 to: 50}) ifTrue: [ ^ [
		(self coverAll:
			{74 to: 77}) moveForward ] valueCoveringAll:
			{79 to: 89} ]] valueCoveringAll:
		{62 to: 68}.
	[
	([
	(self coverAll:
		{96 to: 99}) isBackwardCommand:
		(aCommand
			cover: (120 to: 127)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{101 to: 118}) ifTrue: [ ^ [
		(self coverAll:
			{142 to: 145}) moveBackward ] valueCoveringAll:
			{147 to: 158} ]] valueCoveringAll:
		{130 to: 136}.
	[
	([
	(self coverAll:
		{165 to: 168}) isRotateRightCommand:
		(aCommand
			cover: (192 to: 199)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{170 to: 190}) ifTrue: [ ^ [
		(self coverAll:
			{214 to: 217}) rotateRight ] valueCoveringAll:
			{219 to: 229} ]] valueCoveringAll:
		{202 to: 208}.
	[
	([
	(self coverAll:
		{236 to: 239}) isRotateLeftCommand:
		(aCommand
			cover: (262 to: 269)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{241 to: 260}) ifTrue: [ ^ [
		(self coverAll:
			{284 to: 287}) rotateLeft ] valueCoveringAll:
			{289 to: 298} ]] valueCoveringAll:
		{272 to: 278}.
	[
	(self coverAll:
		{305 to: 308}) signalInvalidCommand ] valueCoveringAll:
		{310 to: 329}.! !
!Behavior method!
isForwardCommand: aCommand
	^ [
	(aCommand
		cover: (31 to: 38)
		declaredAt: (19 to: 26)) =
		($f coverAll:
			{42 to: 43}) ] valueCoveringAll:
		{40 to: 40}.! !
!Behavior method!
moveForward
	[
	([
	(self coverAll:
		{16 to: 19}) headProxyValue ] valueCoveringAll:
		{21 to: 34}) moveForward ] valueCoveringAll:
		{36 to: 46}.! !
!Behavior method!
headProxyValue
	^ [
	(head
		cover: (20 to: 23)
		declaredAt: (20 to: 23)) value ] valueCoveringAll:
		{25 to: 29}.! !
!Behavior method!
value
	^ value
		cover: (10 to: 14)
		declaredAt: (10 to: 14).! !
!Behavior method!
moveForward
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) moveNorth ] valueCoveringAll:
		{27 to: 35}.! !
!Behavior method!
moveNorth
	[
	(self coverAll:
		{14 to: 17}) addToPosition:
		([
		(0 coverAll:
			{34 to: 34}) @
			(1 coverAll:
				{36 to: 36}) ] valueCoveringAll:
			{35 to: 35}) ] valueCoveringAll:
		{19 to: 32}.! !
!Behavior method!
addToPosition: newPosition
	[
	(position
		cover: (30 to: 37)
		declaredAt: (30 to: 37)) update:
		([
		([
		(self coverAll:
			{48 to: 51}) positionProxyValue ] valueCoveringAll:
			{53 to: 70}) +
			(newPosition
				cover: (74 to: 84)
				declaredAt: (16 to: 26)) ] valueCoveringAll:
			{72 to: 72}) ] valueCoveringAll:
		{39 to: 45}.! !
!Behavior method!
positionProxyValue
	^ [
	(position
		cover: (24 to: 31)
		declaredAt: (24 to: 31)) value ] valueCoveringAll:
		{33 to: 37}.! !
!Behavior method!
update: aNewValue
	(value _ aNewValue
		cover: (30 to: 38)
		declaredAt: (9 to: 17))
		cover: (21 to: 25)
		declaredAt: (21 to: 25).
	[
	(self coverAll:
		{42 to: 45}) notify ] valueCoveringAll:
		{47 to: 52}.! !
!Behavior method!
notify
	[
	(observers
		cover: (10 to: 18)
		declaredAt: (10 to: 18)) do: [ :observer |
		[
		(self coverAll:
			{37 to: 40}) notifyObserver:
			(observer
				cover: (58 to: 65)
				declaredAt: (26 to: 33)) ] valueCoveringAll:
			{42 to: 56} ]] valueCoveringAll:
		{20 to: 22}.! !
!Behavior method!
notifyObserver: anObserver
	[
	(anObserver
		cover: (30 to: 39)
		declaredAt: (17 to: 26)) updatePosition:
		(value
			cover: (57 to: 61)
			declaredAt: (57 to: 61)) ] valueCoveringAll:
		{41 to: 55}.! !
!Behavior method!
updatePosition: aPosition
	[
	(self coverAll:
		{29 to: 32}) addToLog:
		([
		(aPosition
			cover: (44 to: 52)
			declaredAt: (17 to: 25)) asString ] valueCoveringAll:
			{54 to: 61}) ] valueCoveringAll:
		{34 to: 42}.! !
!Behavior method!
addToLog: aLine
	[ | cascadeReceiver |
	cascadeReceiver _ log
		cover: (19 to: 21)
		declaredAt: (19 to: 21).
	[
	cascadeReceiver nextPutAll:
		(aLine
			cover: (35 to: 39)
			declaredAt: (11 to: 15)) ] valueCoveringAll:
		{23 to: 33}.
	[ cascadeReceiver newLine ] valueCoveringAll:
		{42 to: 48} ] value.! !

!testRun: #MarsRoverLoggerTest #test02 stamp: 'fm 6/1/2022 19:18:59'!
PASSED!
!Behavior method!
isBackwardCommand: aCommand
	^ [
	(aCommand
		cover: (32 to: 39)
		declaredAt: (20 to: 27)) =
		($b coverAll:
			{43 to: 44}) ] valueCoveringAll:
		{41 to: 41}.! !
!Behavior method!
moveBackward
	[
	([
	(self coverAll:
		{17 to: 20}) headProxyValue ] valueCoveringAll:
		{22 to: 35}) moveBackward ] valueCoveringAll:
		{37 to: 48}.! !
!Behavior method!
moveBackward
	^ [
	(marsRover
		cover: (18 to: 26)
		declaredAt: (18 to: 26)) moveSouth ] valueCoveringAll:
		{28 to: 36}.! !
!Behavior method!
moveSouth
	[
	(self coverAll:
		{14 to: 17}) addToPosition:
		([
		(0 coverAll:
			{34 to: 34}) @
			(-1 coverAll:
				{36 to: 37}) ] valueCoveringAll:
			{35 to: 35}) ] valueCoveringAll:
		{19 to: 32}.! !

!testRun: #MarsRoverLoggerTest #test03 stamp: 'fm 6/1/2022 19:18:59'!
PASSED!
!Behavior method!
moveForward
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) moveEast ] valueCoveringAll:
		{27 to: 34}.! !
!Behavior method!
moveEast
	[
	(self coverAll:
		{13 to: 16}) addToPosition:
		([
		(1 coverAll:
			{33 to: 33}) @
			(0 coverAll:
				{35 to: 35}) ] valueCoveringAll:
			{34 to: 34}) ] valueCoveringAll:
		{18 to: 31}.! !
!Behavior method!
moveBackward
	^ [
	(marsRover
		cover: (18 to: 26)
		declaredAt: (18 to: 26)) moveWest ] valueCoveringAll:
		{28 to: 35}.! !
!Behavior method!
moveWest
	[
	(self coverAll:
		{13 to: 16}) addToPosition:
		([
		(-1 coverAll:
			{33 to: 34}) @
			(0 coverAll:
				{35 to: 36}) ] valueCoveringAll:
			{35 to: 35}) ] valueCoveringAll:
		{18 to: 31}.! !

!testRun: #MarsRoverLoggerTest #test04 stamp: 'fm 6/1/2022 19:18:59'!
PASSED!
!Behavior method!
followHeadingChangesOn: aMarsRover
	^ [
	([
	(self coverAll:
		{41 to: 44}) new ] valueCoveringAll:
		{46 to: 48}) initializeFollowingHeadingChangesOn:
		(aMarsRover
			cover: (87 to: 96)
			declaredAt: (25 to: 34)) ] valueCoveringAll:
		{50 to: 85}.! !
!Behavior method!
initializeFollowingHeadingChangesOn: aMarsRover
	[
	(aMarsRover
		cover: (52 to: 61)
		declaredAt: (38 to: 47)) followHeadingChangesWith:
		(self coverAll:
			{89 to: 92}) ] valueCoveringAll:
		{63 to: 87}.! !
!Behavior method!
followHeadingChangesWith: anObserver
	[
	(head
		cover: (40 to: 43)
		declaredAt: (40 to: 43)) attach:
		(anObserver
			cover: (53 to: 62)
			declaredAt: (27 to: 36)) ] valueCoveringAll:
		{45 to: 51}.! !
!Behavior method!
isRotateRightCommand: aCommand
	^ [
	(aCommand
		cover: (35 to: 42)
		declaredAt: (23 to: 30)) =
		($r coverAll:
			{46 to: 47}) ] valueCoveringAll:
		{44 to: 44}.! !
!Behavior method!
rotateRight
	[
	([
	(self coverAll:
		{16 to: 19}) headProxyValue ] valueCoveringAll:
		{21 to: 34}) rotateRight ] valueCoveringAll:
		{36 to: 46}.! !
!Behavior method!
rotateRight
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) headEast ] valueCoveringAll:
		{27 to: 34}.! !
!Behavior method!
headEast
	[
	(head
		cover: (13 to: 16)
		declaredAt: (13 to: 16)) update:
		([
		(MarsRoverHeadingEast
			cover: (27 to: 46)
			declaredAt: (27 to: 46)) for:
			(self coverAll:
				{53 to: 56}) ] valueCoveringAll:
			{48 to: 51}) ] valueCoveringAll:
		{18 to: 24}.! !
!Behavior method!
notifyObserver: anObserver
	[
	(anObserver
		cover: (30 to: 39)
		declaredAt: (17 to: 26)) updateHeading:
		(value
			cover: (56 to: 60)
			declaredAt: (56 to: 60)) ] valueCoveringAll:
		{41 to: 54}.! !
!Behavior method!
updateHeading: aMarsRoverHeading
	[
	(aMarsRoverHeading
		cover: (36 to: 52)
		declaredAt: (16 to: 32)) accept:
		(self coverAll:
			{62 to: 65}) ] valueCoveringAll:
		{54 to: 60}.! !
!Behavior method!
accept: aVisitor
	^ [
	(aVisitor
		cover: (21 to: 28)
		declaredAt: (9 to: 16)) visitMarsRoverHeadingEast:
		(self coverAll:
			{57 to: 60}) ] valueCoveringAll:
		{30 to: 55}.! !
!Behavior method!
visitMarsRoverHeadingEast: aMarsRoverHeadingEast
	[
	(self coverAll:
		{53 to: 56}) addToLog:
		('East' coverAll:
			{68 to: 73}) ] valueCoveringAll:
		{58 to: 66}.! !

!testRun: #MarsRoverLoggerTest #test05 stamp: 'fm 6/1/2022 19:18:59'!
PASSED!
!Behavior method!
isRotateLeftCommand: aCommand
	^ [
	(aCommand
		cover: (34 to: 41)
		declaredAt: (22 to: 29)) =
		($l coverAll:
			{45 to: 46}) ] valueCoveringAll:
		{43 to: 43}.! !
!Behavior method!
rotateLeft
	[
	([
	(self coverAll:
		{15 to: 18}) headProxyValue ] valueCoveringAll:
		{20 to: 33}) rotateLeft ] valueCoveringAll:
		{35 to: 44}.! !
!Behavior method!
rotateLeft
	^ [
	(marsRover
		cover: (16 to: 24)
		declaredAt: (16 to: 24)) headNorth ] valueCoveringAll:
		{26 to: 34}.! !
!Behavior method!
headNorth
	[
	(head
		cover: (14 to: 17)
		declaredAt: (14 to: 17)) update:
		([
		(MarsRoverHeadingNorth
			cover: (28 to: 48)
			declaredAt: (28 to: 48)) for:
			(self coverAll:
				{55 to: 58}) ] valueCoveringAll:
			{50 to: 53}) ] valueCoveringAll:
		{19 to: 25}.! !
!Behavior method!
accept: aVisitor
	^ [
	(aVisitor
		cover: (21 to: 28)
		declaredAt: (9 to: 16)) visitMarsRoverHeadingNorth:
		(self coverAll:
			{58 to: 61}) ] valueCoveringAll:
		{30 to: 56}.! !
!Behavior method!
visitMarsRoverHeadingNorth: aMarsRoverHeadingNorth
	[
	(self coverAll:
		{55 to: 58}) addToLog:
		('North' coverAll:
			{70 to: 76}) ] valueCoveringAll:
		{60 to: 68}.! !
!Behavior method!
rotateLeft
	^ [
	(marsRover
		cover: (16 to: 24)
		declaredAt: (16 to: 24)) headWest ] valueCoveringAll:
		{26 to: 33}.! !
!Behavior method!
headWest
	[
	(head
		cover: (13 to: 16)
		declaredAt: (13 to: 16)) update:
		([
		(MarsRoverHeadingWest
			cover: (27 to: 46)
			declaredAt: (27 to: 46)) for:
			(self coverAll:
				{53 to: 56}) ] valueCoveringAll:
			{48 to: 51}) ] valueCoveringAll:
		{18 to: 24}.! !
!Behavior method!
accept: aVisitor
	^ [
	(aVisitor
		cover: (21 to: 28)
		declaredAt: (9 to: 16)) visitMarsRoverHeadingWest:
		(self coverAll:
			{57 to: 60}) ] valueCoveringAll:
		{30 to: 55}.! !
!Behavior method!
visitMarsRoverHeadingWest: aMarsRoverHeadingWest
	[
	(self coverAll:
		{53 to: 56}) addToLog:
		('West' coverAll:
			{68 to: 73}) ] valueCoveringAll:
		{58 to: 66}.! !
!Behavior method!
rotateLeft
	^ [
	(marsRover
		cover: (16 to: 24)
		declaredAt: (16 to: 24)) headSouth ] valueCoveringAll:
		{26 to: 34}.! !
!Behavior method!
headSouth
	[
	(head
		cover: (14 to: 17)
		declaredAt: (14 to: 17)) update:
		([
		(MarsRoverHeadingSouth
			cover: (28 to: 48)
			declaredAt: (28 to: 48)) for:
			(self coverAll:
				{55 to: 58}) ] valueCoveringAll:
			{50 to: 53}) ] valueCoveringAll:
		{19 to: 25}.! !
!Behavior method!
accept: aVisitor
	^ [
	(aVisitor
		cover: (21 to: 28)
		declaredAt: (9 to: 16)) visitMarsRoverHeadingSouth:
		(self coverAll:
			{58 to: 61}) ] valueCoveringAll:
		{30 to: 56}.! !
!Behavior method!
visitMarsRoverHeadingSouth: aMarsRoverHeadingSouth
	[
	(self coverAll:
		{55 to: 58}) addToLog:
		('South' coverAll:
			{70 to: 76}) ] valueCoveringAll:
		{60 to: 68}.! !

!testRun: #MarsRoverLoggerTest #test06 stamp: 'fm 6/1/2022 19:18:59'!
PASSED!
!Behavior method!
followPositionAndHeadingChangesOn: aMarsRover
	^ [
	([
	(self coverAll:
		{51 to: 54}) new ] valueCoveringAll:
		{56 to: 58}) initializeFollowingPositionAndHeadingChangesOn:
		(aMarsRover
			cover: (108 to: 117)
			declaredAt: (36 to: 45)) ] valueCoveringAll:
		{60 to: 106}.! !
!Behavior method!
initializeFollowingPositionAndHeadingChangesOn: aMarsRover
	[
	(self coverAll:
		{63 to: 66}) initializeFollowingHeadingChangesOn:
		(aMarsRover
			cover: (105 to: 114)
			declaredAt: (49 to: 58)) ] valueCoveringAll:
		{68 to: 103}.
	[
	(self coverAll:
		{118 to: 121}) initializeFollowingPositionChangesOn:
		(aMarsRover
			cover: (161 to: 170)
			declaredAt: (49 to: 58)) ] valueCoveringAll:
		{123 to: 159}.! !
!Behavior method!
rotateRight
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) headSouth ] valueCoveringAll:
		{27 to: 35}.! !
!Behavior method!
moveForward
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) moveSouth ] valueCoveringAll:
		{27 to: 35}.! !
!Behavior method!
rotateRight
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) headWest ] valueCoveringAll:
		{27 to: 34}.! !

!testRun: #MarsRoverLoggerTest #test07 stamp: 'fm 6/1/2022 19:18:59'!
PASSED!
!Behavior method!
isAt: aPosition heading: aHeadingType
	^ [
	([
	([
	(self coverAll:
		{42 to: 45}) positionProxyValue ] valueCoveringAll:
		{47 to: 64}) =
		(aPosition
			cover: (68 to: 76)
			declaredAt: (7 to: 15)) ] valueCoveringAll:
		{66 to: 66}) and: [
		[
		([
		(self coverAll:
			{85 to: 88}) headProxyValue ] valueCoveringAll:
			{90 to: 103}) isHeading:
			(aHeadingType
				cover: (116 to: 127)
				declaredAt: (26 to: 37)) ] valueCoveringAll:
			{105 to: 114} ]] valueCoveringAll:
		{78 to: 81}.! !
!Behavior method!
isHeading: aHeadingType
	^ [
	(self coverAll:
		{28 to: 31}) isKindOf:
		(aHeadingType
			cover: (43 to: 54)
			declaredAt: (12 to: 23)) ] valueCoveringAll:
		{33 to: 41}.! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'fm 6/1/2022 19:18:59'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'fm 6/1/2022 19:18:59'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'fm 6/1/2022 19:18:59'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'fm 6/1/2022 19:18:59'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'fm 6/1/2022 19:18:59'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'fm 6/1/2022 19:18:59'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'fm 6/1/2022 19:18:59'!
PASSED!
!Behavior method!
signalInvalidCommand
	[
	(self coverAll:
		{25 to: 28}) error:
		([
		(self coverAll:
			{37 to: 40}) invalidCommandErrorDescription ] valueCoveringAll:
			{42 to: 71}) ] valueCoveringAll:
		{30 to: 35}.! !
!Behavior method!
invalidCommandErrorDescription
	^ 'Invalid command' coverAll:
		{36 to: 52}.! !

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'fm 6/1/2022 19:18:59'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'fm 6/1/2022 19:18:59'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'fm 6/1/2022 19:18:59'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'fm 6/1/2022 19:18:59'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'fm 6/1/2022 19:18:59'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'fm 6/1/2022 19:18:59'!
PASSED!
!Behavior method!
moveBackward
	^ [
	(marsRover
		cover: (18 to: 26)
		declaredAt: (18 to: 26)) moveNorth ] valueCoveringAll:
		{28 to: 36}.! !
!Behavior method!
rotateLeft
	^ [
	(marsRover
		cover: (16 to: 24)
		declaredAt: (16 to: 24)) headEast ] valueCoveringAll:
		{26 to: 33}.! !

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'fm 6/1/2022 19:18:59'!
PASSED!
!Behavior method!
moveForward
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) moveWest ] valueCoveringAll:
		{27 to: 34}.! !
!Behavior method!
moveBackward
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) moveEast ] valueCoveringAll:
		{27 to: 34}.! !
!Behavior method!
rotateRight
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) headNorth ] valueCoveringAll:
		{27 to: 35}.! !

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'fm 6/1/2022 19:18:59'!
PASSED!
!Behavior method!
followPositionChangesOn: aMarsRover
	^ [
	([
	(self coverAll:
		{42 to: 45}) new ] valueCoveringAll:
		{47 to: 49}) initializeFollowingPositionChangesOn:
		(aMarsRover
			cover: (89 to: 98)
			declaredAt: (26 to: 35)) ] valueCoveringAll:
		{51 to: 87}.! !
!Behavior method!
initialize
	(headingField _ '' coverAll:
		{31 to: 32})
		cover: (14 to: 25)
		declaredAt: (14 to: 25).
	(positionField _ '' coverAll:
		{54 to: 55})
		cover: (36 to: 48)
		declaredAt: (36 to: 48).! !
!Behavior method!
show
	^ [
	([
	([
	(positionField
		cover: (10 to: 22)
		declaredAt: (10 to: 22)) ,
		(' ' coverAll:
			{24 to: 26}) ] valueCoveringAll:
		{23 to: 23}) ,
		(headingField
			cover: (28 to: 39)
			declaredAt: (28 to: 39)) ] valueCoveringAll:
		{27 to: 27}) withBlanksTrimmed ] valueCoveringAll:
		{42 to: 58}.! !

!testRun: #MarsRoverWindowTest #test01 stamp: 'fm 6/1/2022 19:18:59'!
PASSED!
!Behavior method!
updatePosition: aPosition
	(positionField _ [
	(aPosition
		cover: (46 to: 54)
		declaredAt: (17 to: 25)) asString ] valueCoveringAll:
		{56 to: 63})
		cover: (29 to: 41)
		declaredAt: (29 to: 41).! !

!testRun: #MarsRoverWindowTest #test02 stamp: 'fm 6/1/2022 19:18:59'!
PASSED!
!Behavior method!
followHeadingChangesOn: aMarsRover
	^ [
	([
	(self coverAll:
		{41 to: 44}) new ] valueCoveringAll:
		{46 to: 48}) initializeFollowingHeadingChangesOn:
		(aMarsRover
			cover: (87 to: 96)
			declaredAt: (25 to: 34)) ] valueCoveringAll:
		{50 to: 85}.! !

!testRun: #MarsRoverWindowTest #test03 stamp: 'fm 6/1/2022 19:18:59'!
PASSED!
!Behavior method!
visitMarsRoverHeadingSouth: aMarsRoverHeadingSouth
	(headingField _ 'Apuntando al Sur' coverAll:
		{71 to: 88})
		cover: (55 to: 66)
		declaredAt: (55 to: 66).! !
!Behavior method!
visitMarsRoverHeadingWest: aMarsRoverHeadingWest
	(headingField _ 'Apuntando al Oeste' coverAll:
		{69 to: 88})
		cover: (53 to: 64)
		declaredAt: (53 to: 64).! !
!Behavior method!
visitMarsRoverHeadingNorth: aMarsRoverHeadingNorth
	(headingField _ 'Apuntando al Norte' coverAll:
		{71 to: 90})
		cover: (55 to: 66)
		declaredAt: (55 to: 66).! !

!testRun: #MarsRoverWindowTest #test04 stamp: 'fm 6/1/2022 19:18:59'!
PASSED!
!Behavior method!
followPositionAndHeadingChangesOn: aMarsRover
	^ [
	([
	(self coverAll:
		{51 to: 54}) new ] valueCoveringAll:
		{56 to: 58}) initializeFollowingPositionAndHeadingChangesOn:
		(aMarsRover
			cover: (108 to: 117)
			declaredAt: (36 to: 45)) ] valueCoveringAll:
		{60 to: 106}.! !
!Behavior method!
visitMarsRoverHeadingEast: aMarsRoverHeadingEast
	(headingField _ 'Apuntando al Este' coverAll:
		{69 to: 87})
		cover: (53 to: 64)
		declaredAt: (53 to: 64).! !

!testRun: #MarsRoverWindowTest #test05 stamp: 'fm 6/1/2022 19:18:59'!
PASSED!

MarsRoverObserver subclass: #MarsRoverLogger
	instanceVariableNames: 'log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverLogger category: 'MarsRover-WithHeading' stamp: 'fm 6/1/2022 19:55:32'!
MarsRoverObserver subclass: #MarsRoverLogger
	instanceVariableNames: 'log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverObserver subclass: #MarsRoverWindow
	instanceVariableNames: 'positionField headingField'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverWindow category: 'MarsRover-WithHeading' stamp: 'fm 6/1/2022 19:55:41'!
MarsRoverObserver subclass: #MarsRoverWindow
	instanceVariableNames: 'positionField headingField'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

PositionAndHeadingObserver subclass: #MarsRoverWindow
	instanceVariableNames: 'positionField headingField'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverWindow category: 'MarsRover-WithHeading' stamp: 'fm 6/1/2022 19:56:07'!
PositionAndHeadingObserver subclass: #MarsRoverWindow
	instanceVariableNames: 'positionField headingField'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

PositionAndHeadingObserver subclass: #MarsRoverLogger
	instanceVariableNames: 'log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverLogger category: 'MarsRover-WithHeading' stamp: 'fm 6/1/2022 19:56:10'!
PositionAndHeadingObserver subclass: #MarsRoverLogger
	instanceVariableNames: 'log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Object subclass: #PositionAndHeadingObserver
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #PositionAndHeadingObserver category: 'MarsRover-WithHeading' stamp: 'fm 6/1/2022 19:56:36'!
Object subclass: #PositionAndHeadingObserver
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #MarsRoverObserver stamp: 'fm 6/1/2022 19:56:43'!
Object subclass: #MarsRoverObserver
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRenamed: #PositionAndHeadingObserver as: #MarsRoverObserver stamp: 'fm 6/1/2022 19:56:51'!
Smalltalk renameClassNamed: #PositionAndHeadingObserver as: #MarsRoverObserver!
!MarsRoverLogger class methodsFor: 'instance creation' stamp: 'fm 6/1/2022 19:57:24'!
followingHeadingChangesOn: aMarsRover 
	
	^self new initializeFollowingHeadingChangesOn: aMarsRover.! !
!MarsRoverLoggerTest methodsFor: 'as yet unclassified' stamp: 'fm 6/1/2022 19:57:24' prior: 50474768!
test06

	| marsRover logger logStream |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	logger := MarsRoverLogger followingHeadingChangesOn: marsRover.
	
	marsRover process: 'lll'.
	
	logStream := logger readStream.
	self assert: 'North' equals: logStream nextLine.
	self assert: 'West' equals: logStream nextLine.
	self assert: 'South' equals: logStream nextLine.
	self assert: logStream atEnd.! !
!MarsRoverLoggerTest methodsFor: 'as yet unclassified' stamp: 'fm 6/1/2022 19:57:24' prior: 50474755!
test05

	| marsRover logger logStream |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	logger := MarsRoverLogger followingHeadingChangesOn: marsRover.
	
	marsRover process: 'r'.
	
	logStream := logger readStream.
	self assert: 'East' equals: logStream nextLine.
	self assert: logStream atEnd.! !

!methodRemoval: MarsRoverLogger class #followHeadingChangesOn: stamp: 'fm 6/1/2022 19:57:24'!
followHeadingChangesOn: aMarsRover 
	
	^self new initializeFollowingHeadingChangesOn: aMarsRover.!
!MarsRoverLogger class methodsFor: 'instance creation' stamp: 'fm 6/1/2022 19:57:52'!
followingPositionChangesOn: aMarsRover 
	
	^self new initializeFollowingPositionChangesOn: aMarsRover.! !
!MarsRoverLoggerTest methodsFor: 'as yet unclassified' stamp: 'fm 6/1/2022 19:57:53' prior: 50474106!
test01

	| marsRover logger |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	logger := MarsRoverLogger followingPositionChangesOn: marsRover.
	
	marsRover process: ''.
	
	self assert: logger readStream atEnd.
! !
!MarsRoverLoggerTest methodsFor: 'as yet unclassified' stamp: 'fm 6/1/2022 19:57:53' prior: 50474116!
test02

	| marsRover logger logStream |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	logger := MarsRoverLogger followingPositionChangesOn: marsRover.
	
	marsRover process: 'f'.
	
	logStream := logger readStream.
	self assert: '1@2' equals: logStream nextLine.
	self assert: logStream atEnd.
! !
!MarsRoverLoggerTest methodsFor: 'as yet unclassified' stamp: 'fm 6/1/2022 19:57:53' prior: 50474129!
test03

	| marsRover logger logStream |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	logger := MarsRoverLogger followingPositionChangesOn: marsRover.
	
	marsRover process: 'b'.
	
	logStream := logger readStream.
	self assert: '1@0' equals: logStream nextLine.
	self assert: logStream atEnd.
! !
!MarsRoverLoggerTest methodsFor: 'as yet unclassified' stamp: 'fm 6/1/2022 19:57:53' prior: 50474142!
test04

	| marsRover logger logStream |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	logger := MarsRoverLogger followingPositionChangesOn: marsRover.
	
	marsRover process: 'fb'.
	
	logStream := logger readStream.
	self assert: '2@1' equals: logStream nextLine.
	self assert: '1@1' equals: logStream nextLine.
	self assert: logStream atEnd.
! !

!methodRemoval: MarsRoverLogger class #followPositionChangesOn: stamp: 'fm 6/1/2022 19:57:53'!
followPositionChangesOn: aMarsRover 
	
	^self new initializeFollowingPositionChangesOn: aMarsRover.!
!MarsRoverLogger class methodsFor: 'instance creation' stamp: 'fm 6/1/2022 19:58:05'!
followingPositionAndHeadingChangesOn: aMarsRover 

	^self new initializeFollowingPositionAndHeadingChangesOn: aMarsRover.! !
!MarsRoverLoggerTest methodsFor: 'as yet unclassified' stamp: 'fm 6/1/2022 19:58:05' prior: 50475130!
test07

	| marsRover logger logStream |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	logger := MarsRoverLogger followingPositionAndHeadingChangesOn: marsRover.
	
	marsRover process: 'rfr'.
	
	logStream := logger readStream.
	self assert: 'South' equals: logStream nextLine.
	self assert: '1@0' equals: logStream nextLine.
	self assert: 'West' equals: logStream nextLine.
	self assert: logStream atEnd.! !

!methodRemoval: MarsRoverLogger class #followPositionAndHeadingChangesOn: stamp: 'fm 6/1/2022 19:58:05'!
followPositionAndHeadingChangesOn: aMarsRover 

	^self new initializeFollowingPositionAndHeadingChangesOn: aMarsRover.!
!MarsRoverObserver class methodsFor: 'instance creation' stamp: 'fm 6/1/2022 19:58:16'!
followingHeadingChangesOn: aMarsRover 
	
	^self new initializeFollowingHeadingChangesOn: aMarsRover.! !

!methodRemoval: MarsRoverLogger class #followingHeadingChangesOn: stamp: 'fm 6/1/2022 19:58:16'!
followingHeadingChangesOn: aMarsRover 
	
	^self new initializeFollowingHeadingChangesOn: aMarsRover.!
!MarsRoverObserver class methodsFor: 'instance creation' stamp: 'fm 6/1/2022 19:58:19'!
followingPositionAndHeadingChangesOn: aMarsRover 

	^self new initializeFollowingPositionAndHeadingChangesOn: aMarsRover.! !

!methodRemoval: MarsRoverLogger class #followingPositionAndHeadingChangesOn: stamp: 'fm 6/1/2022 19:58:19'!
followingPositionAndHeadingChangesOn: aMarsRover 

	^self new initializeFollowingPositionAndHeadingChangesOn: aMarsRover.!
!MarsRoverObserver class methodsFor: 'instance creation' stamp: 'fm 6/1/2022 19:58:23'!
followingPositionChangesOn: aMarsRover 
	
	^self new initializeFollowingPositionChangesOn: aMarsRover.! !

!methodRemoval: MarsRoverLogger class #followingPositionChangesOn: stamp: 'fm 6/1/2022 19:58:23'!
followingPositionChangesOn: aMarsRover 
	
	^self new initializeFollowingPositionChangesOn: aMarsRover.!

----SNAPSHOT----(1 June 2022 20:00:47) CuisUniversity-5096.image priorSource: 4793449!

----STARTUP---- (1 June 2022 20:00:56) as C:\Users\Fede\Desktop\cuis\windows64\CuisUniversity-5096.image!

!MarsRoverLoggerTest methodsFor: 'tests' stamp: 'fm 6/1/2022 20:10:26'!
test01LogsNothingWhenRoverDoesNotMove

	| marsRover logger |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	logger := MarsRoverLogger followingPositionChangesOn: marsRover.
	
	marsRover process: ''.
	
	self assert: logger readStream atEnd.
! !

!methodRemoval: MarsRoverLoggerTest #test01 stamp: 'fm 6/1/2022 20:10:26'!
test01

	| marsRover logger |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	logger := MarsRoverLogger followingPositionChangesOn: marsRover.
	
	marsRover process: ''.
	
	self assert: logger readStream atEnd.
!
!MarsRoverLoggerTest methodsFor: 'tests' stamp: 'fm 6/1/2022 20:11:16'!
test02LogsNewPositionWhenRoverMoves

	| marsRover logger logStream |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	logger := MarsRoverLogger followingPositionChangesOn: marsRover.
	
	marsRover process: 'f'.
	
	logStream := logger readStream.
	self assert: '1@2' equals: logStream nextLine.
	self assert: logStream atEnd.
! !

!methodRemoval: MarsRoverLoggerTest #test02 stamp: 'fm 6/1/2022 20:11:16'!
test02

	| marsRover logger logStream |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	logger := MarsRoverLogger followingPositionChangesOn: marsRover.
	
	marsRover process: 'f'.
	
	logStream := logger readStream.
	self assert: '1@2' equals: logStream nextLine.
	self assert: logStream atEnd.
!
!MarsRoverLoggerTest methodsFor: 'tests' stamp: 'fm 6/1/2022 20:11:25'!
test02LogsNewPositionWhenRoverMovesForward

	| marsRover logger logStream |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	logger := MarsRoverLogger followingPositionChangesOn: marsRover.
	
	marsRover process: 'f'.
	
	logStream := logger readStream.
	self assert: '1@2' equals: logStream nextLine.
	self assert: logStream atEnd.
! !

!methodRemoval: MarsRoverLoggerTest #test02LogsNewPositionWhenRoverMoves stamp: 'fm 6/1/2022 20:11:25'!
test02LogsNewPositionWhenRoverMoves

	| marsRover logger logStream |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	logger := MarsRoverLogger followingPositionChangesOn: marsRover.
	
	marsRover process: 'f'.
	
	logStream := logger readStream.
	self assert: '1@2' equals: logStream nextLine.
	self assert: logStream atEnd.
!
!MarsRoverLoggerTest methodsFor: 'tests' stamp: 'fm 6/1/2022 20:11:35'!
test03LogsNewPositionWhenRoverMovesBackward

	| marsRover logger logStream |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	logger := MarsRoverLogger followingPositionChangesOn: marsRover.
	
	marsRover process: 'b'.
	
	logStream := logger readStream.
	self assert: '1@0' equals: logStream nextLine.
	self assert: logStream atEnd.
! !

!methodRemoval: MarsRoverLoggerTest #test03 stamp: 'fm 6/1/2022 20:11:35'!
test03

	| marsRover logger logStream |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	logger := MarsRoverLogger followingPositionChangesOn: marsRover.
	
	marsRover process: 'b'.
	
	logStream := logger readStream.
	self assert: '1@0' equals: logStream nextLine.
	self assert: logStream atEnd.
!
!MarsRoverLoggerTest methodsFor: 'tests' stamp: 'fm 6/1/2022 20:12:37'!
test04LogsALineForEveryRoverMovement

	| marsRover logger logStream |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	logger := MarsRoverLogger followingPositionChangesOn: marsRover.
	
	marsRover process: 'fb'.
	
	logStream := logger readStream.
	self assert: '2@1' equals: logStream nextLine.
	self assert: '1@1' equals: logStream nextLine.
	self assert: logStream atEnd.
! !

!methodRemoval: MarsRoverLoggerTest #test04 stamp: 'fm 6/1/2022 20:12:37'!
test04

	| marsRover logger logStream |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	logger := MarsRoverLogger followingPositionChangesOn: marsRover.
	
	marsRover process: 'fb'.
	
	logStream := logger readStream.
	self assert: '2@1' equals: logStream nextLine.
	self assert: '1@1' equals: logStream nextLine.
	self assert: logStream atEnd.
!
!MarsRoverLoggerTest methodsFor: 'tests' stamp: 'fm 6/1/2022 20:13:04'!
test05LogsNewHeadingWhenRoverRotatesRight

	| marsRover logger logStream |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	logger := MarsRoverLogger followingHeadingChangesOn: marsRover.
	
	marsRover process: 'r'.
	
	logStream := logger readStream.
	self assert: 'East' equals: logStream nextLine.
	self assert: logStream atEnd.! !

!methodRemoval: MarsRoverLoggerTest #test05 stamp: 'fm 6/1/2022 20:13:04'!
test05

	| marsRover logger logStream |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	logger := MarsRoverLogger followingHeadingChangesOn: marsRover.
	
	marsRover process: 'r'.
	
	logStream := logger readStream.
	self assert: 'East' equals: logStream nextLine.
	self assert: logStream atEnd.!
!MarsRoverLoggerTest methodsFor: 'tests' stamp: 'fm 6/1/2022 20:13:29'!
test06LogsALineForEveryRoverRotation

	| marsRover logger logStream |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	logger := MarsRoverLogger followingHeadingChangesOn: marsRover.
	
	marsRover process: 'lll'.
	
	logStream := logger readStream.
	self assert: 'North' equals: logStream nextLine.
	self assert: 'West' equals: logStream nextLine.
	self assert: 'South' equals: logStream nextLine.
	self assert: logStream atEnd.! !

!methodRemoval: MarsRoverLoggerTest #test06 stamp: 'fm 6/1/2022 20:13:29'!
test06

	| marsRover logger logStream |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	logger := MarsRoverLogger followingHeadingChangesOn: marsRover.
	
	marsRover process: 'lll'.
	
	logStream := logger readStream.
	self assert: 'North' equals: logStream nextLine.
	self assert: 'West' equals: logStream nextLine.
	self assert: 'South' equals: logStream nextLine.
	self assert: logStream atEnd.!
!MarsRoverLoggerTest methodsFor: 'tests' stamp: 'fm 6/1/2022 20:14:09'!
test07LogsALineForEveryRoverAction

	| marsRover logger logStream |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	logger := MarsRoverLogger followingPositionAndHeadingChangesOn: marsRover.
	
	marsRover process: 'rfr'.
	
	logStream := logger readStream.
	self assert: 'South' equals: logStream nextLine.
	self assert: '1@0' equals: logStream nextLine.
	self assert: 'West' equals: logStream nextLine.
	self assert: logStream atEnd.! !

!methodRemoval: MarsRoverLoggerTest #test07 stamp: 'fm 6/1/2022 20:14:09'!
test07

	| marsRover logger logStream |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	logger := MarsRoverLogger followingPositionAndHeadingChangesOn: marsRover.
	
	marsRover process: 'rfr'.
	
	logStream := logger readStream.
	self assert: 'South' equals: logStream nextLine.
	self assert: '1@0' equals: logStream nextLine.
	self assert: 'West' equals: logStream nextLine.
	self assert: logStream atEnd.!

!testRun: #MarsRoverLoggerTest #test01LogsNothingWhenRoverDoesNotMove stamp: 'fm 6/1/2022 20:14:14'!
PASSED!

!testRun: #MarsRoverLoggerTest #test02LogsNewPositionWhenRoverMovesForward stamp: 'fm 6/1/2022 20:14:14'!
PASSED!

!testRun: #MarsRoverLoggerTest #test03LogsNewPositionWhenRoverMovesBackward stamp: 'fm 6/1/2022 20:14:14'!
PASSED!

!testRun: #MarsRoverLoggerTest #test04LogsALineForEveryRoverMovement stamp: 'fm 6/1/2022 20:14:14'!
PASSED!

!testRun: #MarsRoverLoggerTest #test05LogsNewHeadingWhenRoverRotatesRight stamp: 'fm 6/1/2022 20:14:14'!
PASSED!

!testRun: #MarsRoverLoggerTest #test06LogsALineForEveryRoverRotation stamp: 'fm 6/1/2022 20:14:14'!
PASSED!

!testRun: #MarsRoverLoggerTest #test07LogsALineForEveryRoverAction stamp: 'fm 6/1/2022 20:14:14'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'fm 6/1/2022 20:14:14'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'fm 6/1/2022 20:14:14'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'fm 6/1/2022 20:14:14'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'fm 6/1/2022 20:14:14'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'fm 6/1/2022 20:14:14'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'fm 6/1/2022 20:14:14'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'fm 6/1/2022 20:14:14'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'fm 6/1/2022 20:14:14'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'fm 6/1/2022 20:14:14'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'fm 6/1/2022 20:14:14'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'fm 6/1/2022 20:14:14'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'fm 6/1/2022 20:14:14'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'fm 6/1/2022 20:14:14'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'fm 6/1/2022 20:14:14'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'fm 6/1/2022 20:14:14'!
PASSED!

!testRun: #MarsRoverWindowTest #test01 stamp: 'fm 6/1/2022 20:14:14'!
PASSED!

!testRun: #MarsRoverWindowTest #test02 stamp: 'fm 6/1/2022 20:14:14'!
PASSED!

!testRun: #MarsRoverWindowTest #test03 stamp: 'fm 6/1/2022 20:14:14'!
PASSED!

!testRun: #MarsRoverWindowTest #test04 stamp: 'fm 6/1/2022 20:14:14'!
PASSED!

!testRun: #MarsRoverWindowTest #test05 stamp: 'fm 6/1/2022 20:14:14'!
PASSED!
!MarsRoverWindowTest methodsFor: 'tests' stamp: 'fm 6/1/2022 20:15:52'!
test01ShowsNothingWhenRoverDoesNotMove

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow followPositionChangesOn: marsRover.
	
	marsRover process: ''.
	
	self assert: '' equals: window show! !

!methodRemoval: MarsRoverWindowTest #test01 stamp: 'fm 6/1/2022 20:15:52'!
test01

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow followPositionChangesOn: marsRover.
	
	marsRover process: ''.
	
	self assert: '' equals: window show!
!MarsRoverWindowTest methodsFor: 'tests' stamp: 'fm 6/1/2022 20:16:26'!
test02ShowsNewPositionWhenRoverMoves

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow followPositionChangesOn: marsRover.
	
	marsRover process: 'f'.
	
	self assert: '2@1' equals: window show! !

!methodRemoval: MarsRoverWindowTest #test02 stamp: 'fm 6/1/2022 20:16:26'!
test02

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow followPositionChangesOn: marsRover.
	
	marsRover process: 'f'.
	
	self assert: '2@1' equals: window show!
!MarsRoverWindowTest methodsFor: 'tests' stamp: 'fm 6/1/2022 20:18:07'!
test03ShowsNothingWhenRoverDoesNotRotate

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow followHeadingChangesOn: marsRover.
	
	marsRover process: ''.
	
	self assert: '' equals: window show! !

!methodRemoval: MarsRoverWindowTest #test03 stamp: 'fm 6/1/2022 20:18:07'!
test03

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow followHeadingChangesOn: marsRover.
	
	marsRover process: ''.
	
	self assert: '' equals: window show!
!MarsRoverWindowTest methodsFor: 'tests' stamp: 'fm 6/1/2022 20:18:29'!
test04ShowsLastHeadingWhenRoverRotatesManyTimes

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow followHeadingChangesOn: marsRover.
	
	marsRover process: 'rrr'.
	
	self assert: 'Apuntando al Norte' equals: window show! !

!methodRemoval: MarsRoverWindowTest #test04 stamp: 'fm 6/1/2022 20:18:29'!
test04

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingEast.
	window := MarsRoverWindow followHeadingChangesOn: marsRover.
	
	marsRover process: 'rrr'.
	
	self assert: 'Apuntando al Norte' equals: window show!
!MarsRoverWindowTest methodsFor: 'tests' stamp: 'fm 6/1/2022 20:22:10'!
test05ShowsOnlyUpdatedFieldsAccordingToRoverActions

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingSouth.
	window := MarsRoverWindow followPositionAndHeadingChangesOn: marsRover.
	
	self assert: '' equals: window show.
	
	marsRover process: 'l'.
	
	self assert: 'Apuntando al Este' equals: window show.
	
	marsRover process: 'f'.
	
	self assert: '2@1 Apuntando al Este' equals: window show. ! !

!methodRemoval: MarsRoverWindowTest #test05 stamp: 'fm 6/1/2022 20:22:10'!
test05

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingSouth.
	window := MarsRoverWindow followPositionAndHeadingChangesOn: marsRover.
	
	self assert: '' equals: window show.
	
	marsRover process: 'l'.
	
	self assert: 'Apuntando al Este' equals: window show.
	
	marsRover process: 'f'.
	
	self assert: '2@1 Apuntando al Este' equals: window show. !
!MarsRoverWindowTest methodsFor: 'tests' stamp: 'fm 6/1/2022 20:22:49' prior: 50482942!
test05ShowsOnlyUpdatedFieldsAccordingToRoverActions

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingSouth.
	window := MarsRoverWindow followPositionAndHeadingChangesOn: marsRover.
	
	self assert: '' equals: window show.
	
	marsRover process: 'l'.
	
	self assert: 'Apuntando al Este' equals: window show.
	
	marsRover process: 'f'.
	
	self assert: '2@1 Apuntando al Este' equals: window show. ! !

!testRun: #MarsRoverLoggerTest #test01LogsNothingWhenRoverDoesNotMove stamp: 'fm 6/1/2022 20:22:54'!
PASSED!

!testRun: #MarsRoverLoggerTest #test02LogsNewPositionWhenRoverMovesForward stamp: 'fm 6/1/2022 20:22:54'!
PASSED!

!testRun: #MarsRoverLoggerTest #test03LogsNewPositionWhenRoverMovesBackward stamp: 'fm 6/1/2022 20:22:54'!
PASSED!

!testRun: #MarsRoverLoggerTest #test04LogsALineForEveryRoverMovement stamp: 'fm 6/1/2022 20:22:54'!
PASSED!

!testRun: #MarsRoverLoggerTest #test05LogsNewHeadingWhenRoverRotatesRight stamp: 'fm 6/1/2022 20:22:54'!
PASSED!

!testRun: #MarsRoverLoggerTest #test06LogsALineForEveryRoverRotation stamp: 'fm 6/1/2022 20:22:54'!
PASSED!

!testRun: #MarsRoverLoggerTest #test07LogsALineForEveryRoverAction stamp: 'fm 6/1/2022 20:22:54'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'fm 6/1/2022 20:22:54'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'fm 6/1/2022 20:22:54'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'fm 6/1/2022 20:22:54'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'fm 6/1/2022 20:22:55'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'fm 6/1/2022 20:22:55'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'fm 6/1/2022 20:22:55'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'fm 6/1/2022 20:22:55'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'fm 6/1/2022 20:22:55'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'fm 6/1/2022 20:22:55'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'fm 6/1/2022 20:22:55'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'fm 6/1/2022 20:22:55'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'fm 6/1/2022 20:22:55'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'fm 6/1/2022 20:22:55'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'fm 6/1/2022 20:22:55'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'fm 6/1/2022 20:22:55'!
PASSED!

!testRun: #MarsRoverWindowTest #test01ShowsNothingWhenRoverDoesNotMove stamp: 'fm 6/1/2022 20:22:55'!
PASSED!

!testRun: #MarsRoverWindowTest #test02ShowsNewPositionWhenRoverMoves stamp: 'fm 6/1/2022 20:22:55'!
PASSED!

!testRun: #MarsRoverWindowTest #test03ShowsNothingWhenRoverDoesNotRotate stamp: 'fm 6/1/2022 20:22:55'!
PASSED!

!testRun: #MarsRoverWindowTest #test04ShowsLastHeadingWhenRoverRotatesManyTimes stamp: 'fm 6/1/2022 20:22:55'!
PASSED!

!testRun: #MarsRoverWindowTest #test05ShowsOnlyUpdatedFieldsAccordingToRoverActions stamp: 'fm 6/1/2022 20:22:55'!
PASSED!
!Behavior method!
at: aPosition heading: aHeadingType
	^ [
	([
	(self coverAll:
		{41 to: 44}) new ] valueCoveringAll:
		{46 to: 48})
		initializeAt:
			(aPosition
				cover: (64 to: 72)
				declaredAt: (5 to: 13))
		heading:
			(aHeadingType
				cover: (83 to: 94)
				declaredAt: (24 to: 35)) ] valueCoveringAll:
		{50 to: 62. 74 to: 81}.! !
!Behavior method!
initializeAt: aPosition heading: aHeadingType
	(position _ [
	(PositionProxy
		cover: (61 to: 73)
		declaredAt: (61 to: 73)) on:
		(aPosition
			cover: (79 to: 87)
			declaredAt: (15 to: 23)) ] valueCoveringAll:
		{75 to: 77})
		cover: (49 to: 56)
		declaredAt: (49 to: 56).
	(head _ [
	(HeadingProxy
		cover: (99 to: 110)
		declaredAt: (99 to: 110)) on:
		([
		(aHeadingType
			cover: (117 to: 128)
			declaredAt: (34 to: 45)) for:
			(self coverAll:
				{135 to: 138}) ] valueCoveringAll:
			{130 to: 133}) ] valueCoveringAll:
		{112 to: 114})
		cover: (91 to: 94)
		declaredAt: (91 to: 94).! !
!Behavior method!
on: anInitialValue
	^ [
	([
	(self coverAll:
		{24 to: 27}) new ] valueCoveringAll:
		{29 to: 31}) initializeOn:
		(anInitialValue
			cover: (47 to: 60)
			declaredAt: (5 to: 18)) ] valueCoveringAll:
		{33 to: 45}.! !
!Behavior method!
initializeOn: anInitialValue
	(value _ anInitialValue
		cover: (41 to: 54)
		declaredAt: (15 to: 28))
		cover: (32 to: 36)
		declaredAt: (32 to: 36).
	(observers _ [
	(Set
		cover: (71 to: 73)
		declaredAt: (71 to: 73)) new ] valueCoveringAll:
		{75 to: 77})
		cover: (58 to: 66)
		declaredAt: (58 to: 66).! !
!Behavior method!
for: aMarsRover
	^ [
	([
	(self coverAll:
		{22 to: 25}) new ] valueCoveringAll:
		{27 to: 29}) initializeFor:
		(aMarsRover
			cover: (46 to: 55)
			declaredAt: (6 to: 15)) ] valueCoveringAll:
		{31 to: 44}.! !
!Behavior method!
initializeFor: aMarsRover
	(marsRover _ aMarsRover
		cover: (44 to: 53)
		declaredAt: (16 to: 25))
		cover: (31 to: 39)
		declaredAt: (31 to: 39).! !
!Behavior method!
followingPositionChangesOn: aMarsRover
	^ [
	([
	(self coverAll:
		{45 to: 48}) new ] valueCoveringAll:
		{50 to: 52}) initializeFollowingPositionChangesOn:
		(aMarsRover
			cover: (92 to: 101)
			declaredAt: (29 to: 38)) ] valueCoveringAll:
		{54 to: 90}.! !
!Behavior method!
initialize
	(log _ [
	(WriteStream
		cover: (22 to: 32)
		declaredAt: (22 to: 32)) on:
		('' coverAll:
			{38 to: 39}) ] valueCoveringAll:
		{34 to: 36})
		cover: (14 to: 16)
		declaredAt: (14 to: 16).! !
!Behavior method!
initializeFollowingPositionChangesOn: aMarsRover
	[
	(aMarsRover
		cover: (54 to: 63)
		declaredAt: (39 to: 48)) followPositionChangesWith:
		(self coverAll:
			{92 to: 95}) ] valueCoveringAll:
		{65 to: 90}.! !
!Behavior method!
followPositionChangesWith: anObserver
	[
	(position
		cover: (41 to: 48)
		declaredAt: (41 to: 48)) attach:
		(anObserver
			cover: (58 to: 67)
			declaredAt: (28 to: 37)) ] valueCoveringAll:
		{50 to: 56}.! !
!Behavior method!
attach: anObserver
	[
	(observers
		cover: (22 to: 30)
		declaredAt: (22 to: 30)) add:
		(anObserver
			cover: (37 to: 46)
			declaredAt: (9 to: 18)) ] valueCoveringAll:
		{32 to: 35}.! !
!Behavior method!
process: aSequenceOfCommands
	[
	(aSequenceOfCommands
		cover: (32 to: 50)
		declaredAt: (10 to: 28)) do: [ :aCommand |
		[
		(self coverAll:
			{69 to: 72}) processCommand:
			(aCommand
				cover: (90 to: 97)
				declaredAt: (58 to: 65)) ] valueCoveringAll:
			{74 to: 88} ]] valueCoveringAll:
		{52 to: 54}.! !
!Behavior method!
readStream
	^ [
	(ReadStream
		cover: (16 to: 25)
		declaredAt: (16 to: 25)) on:
		([
		(log
			cover: (31 to: 33)
			declaredAt: (31 to: 33)) contents ] valueCoveringAll:
			{35 to: 42}) ] valueCoveringAll:
		{27 to: 29}.! !

!testRun: #MarsRoverLoggerTest #test01LogsNothingWhenRoverDoesNotMove stamp: 'fm 6/1/2022 20:22:58'!
PASSED!
!Behavior method!
processCommand: aCommand
	[
	([
	(self coverAll:
		{29 to: 32}) isForwardCommand:
		(aCommand
			cover: (52 to: 59)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{34 to: 50}) ifTrue: [ ^ [
		(self coverAll:
			{74 to: 77}) moveForward ] valueCoveringAll:
			{79 to: 89} ]] valueCoveringAll:
		{62 to: 68}.
	[
	([
	(self coverAll:
		{96 to: 99}) isBackwardCommand:
		(aCommand
			cover: (120 to: 127)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{101 to: 118}) ifTrue: [ ^ [
		(self coverAll:
			{142 to: 145}) moveBackward ] valueCoveringAll:
			{147 to: 158} ]] valueCoveringAll:
		{130 to: 136}.
	[
	([
	(self coverAll:
		{165 to: 168}) isRotateRightCommand:
		(aCommand
			cover: (192 to: 199)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{170 to: 190}) ifTrue: [ ^ [
		(self coverAll:
			{214 to: 217}) rotateRight ] valueCoveringAll:
			{219 to: 229} ]] valueCoveringAll:
		{202 to: 208}.
	[
	([
	(self coverAll:
		{236 to: 239}) isRotateLeftCommand:
		(aCommand
			cover: (262 to: 269)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{241 to: 260}) ifTrue: [ ^ [
		(self coverAll:
			{284 to: 287}) rotateLeft ] valueCoveringAll:
			{289 to: 298} ]] valueCoveringAll:
		{272 to: 278}.
	[
	(self coverAll:
		{305 to: 308}) signalInvalidCommand ] valueCoveringAll:
		{310 to: 329}.! !
!Behavior method!
isForwardCommand: aCommand
	^ [
	(aCommand
		cover: (31 to: 38)
		declaredAt: (19 to: 26)) =
		($f coverAll:
			{42 to: 43}) ] valueCoveringAll:
		{40 to: 40}.! !
!Behavior method!
moveForward
	[
	([
	(self coverAll:
		{16 to: 19}) headProxyValue ] valueCoveringAll:
		{21 to: 34}) moveForward ] valueCoveringAll:
		{36 to: 46}.! !
!Behavior method!
headProxyValue
	^ [
	(head
		cover: (20 to: 23)
		declaredAt: (20 to: 23)) value ] valueCoveringAll:
		{25 to: 29}.! !
!Behavior method!
value
	^ value
		cover: (10 to: 14)
		declaredAt: (10 to: 14).! !
!Behavior method!
moveForward
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) moveNorth ] valueCoveringAll:
		{27 to: 35}.! !
!Behavior method!
moveNorth
	[
	(self coverAll:
		{14 to: 17}) addToPosition:
		([
		(0 coverAll:
			{34 to: 34}) @
			(1 coverAll:
				{36 to: 36}) ] valueCoveringAll:
			{35 to: 35}) ] valueCoveringAll:
		{19 to: 32}.! !
!Behavior method!
addToPosition: newPosition
	[
	(position
		cover: (30 to: 37)
		declaredAt: (30 to: 37)) update:
		([
		([
		(self coverAll:
			{48 to: 51}) positionProxyValue ] valueCoveringAll:
			{53 to: 70}) +
			(newPosition
				cover: (74 to: 84)
				declaredAt: (16 to: 26)) ] valueCoveringAll:
			{72 to: 72}) ] valueCoveringAll:
		{39 to: 45}.! !
!Behavior method!
positionProxyValue
	^ [
	(position
		cover: (24 to: 31)
		declaredAt: (24 to: 31)) value ] valueCoveringAll:
		{33 to: 37}.! !
!Behavior method!
update: aNewValue
	(value _ aNewValue
		cover: (30 to: 38)
		declaredAt: (9 to: 17))
		cover: (21 to: 25)
		declaredAt: (21 to: 25).
	[
	(self coverAll:
		{42 to: 45}) notify ] valueCoveringAll:
		{47 to: 52}.! !
!Behavior method!
notify
	[
	(observers
		cover: (10 to: 18)
		declaredAt: (10 to: 18)) do: [ :observer |
		[
		(self coverAll:
			{37 to: 40}) notifyObserver:
			(observer
				cover: (58 to: 65)
				declaredAt: (26 to: 33)) ] valueCoveringAll:
			{42 to: 56} ]] valueCoveringAll:
		{20 to: 22}.! !
!Behavior method!
notifyObserver: anObserver
	[
	(anObserver
		cover: (30 to: 39)
		declaredAt: (17 to: 26)) updatePosition:
		(value
			cover: (57 to: 61)
			declaredAt: (57 to: 61)) ] valueCoveringAll:
		{41 to: 55}.! !
!Behavior method!
updatePosition: aPosition
	[
	(self coverAll:
		{29 to: 32}) addToLog:
		([
		(aPosition
			cover: (44 to: 52)
			declaredAt: (17 to: 25)) asString ] valueCoveringAll:
			{54 to: 61}) ] valueCoveringAll:
		{34 to: 42}.! !
!Behavior method!
addToLog: aLine
	[ | cascadeReceiver |
	cascadeReceiver _ log
		cover: (19 to: 21)
		declaredAt: (19 to: 21).
	[
	cascadeReceiver nextPutAll:
		(aLine
			cover: (35 to: 39)
			declaredAt: (11 to: 15)) ] valueCoveringAll:
		{23 to: 33}.
	[ cascadeReceiver newLine ] valueCoveringAll:
		{42 to: 48} ] value.! !

!testRun: #MarsRoverLoggerTest #test02LogsNewPositionWhenRoverMovesForward stamp: 'fm 6/1/2022 20:22:58'!
PASSED!
!Behavior method!
isBackwardCommand: aCommand
	^ [
	(aCommand
		cover: (32 to: 39)
		declaredAt: (20 to: 27)) =
		($b coverAll:
			{43 to: 44}) ] valueCoveringAll:
		{41 to: 41}.! !
!Behavior method!
moveBackward
	[
	([
	(self coverAll:
		{17 to: 20}) headProxyValue ] valueCoveringAll:
		{22 to: 35}) moveBackward ] valueCoveringAll:
		{37 to: 48}.! !
!Behavior method!
moveBackward
	^ [
	(marsRover
		cover: (18 to: 26)
		declaredAt: (18 to: 26)) moveSouth ] valueCoveringAll:
		{28 to: 36}.! !
!Behavior method!
moveSouth
	[
	(self coverAll:
		{14 to: 17}) addToPosition:
		([
		(0 coverAll:
			{34 to: 34}) @
			(-1 coverAll:
				{36 to: 37}) ] valueCoveringAll:
			{35 to: 35}) ] valueCoveringAll:
		{19 to: 32}.! !

!testRun: #MarsRoverLoggerTest #test03LogsNewPositionWhenRoverMovesBackward stamp: 'fm 6/1/2022 20:22:58'!
PASSED!
!Behavior method!
moveForward
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) moveEast ] valueCoveringAll:
		{27 to: 34}.! !
!Behavior method!
moveEast
	[
	(self coverAll:
		{13 to: 16}) addToPosition:
		([
		(1 coverAll:
			{33 to: 33}) @
			(0 coverAll:
				{35 to: 35}) ] valueCoveringAll:
			{34 to: 34}) ] valueCoveringAll:
		{18 to: 31}.! !
!Behavior method!
moveBackward
	^ [
	(marsRover
		cover: (18 to: 26)
		declaredAt: (18 to: 26)) moveWest ] valueCoveringAll:
		{28 to: 35}.! !
!Behavior method!
moveWest
	[
	(self coverAll:
		{13 to: 16}) addToPosition:
		([
		(-1 coverAll:
			{33 to: 34}) @
			(0 coverAll:
				{35 to: 36}) ] valueCoveringAll:
			{35 to: 35}) ] valueCoveringAll:
		{18 to: 31}.! !

!testRun: #MarsRoverLoggerTest #test04LogsALineForEveryRoverMovement stamp: 'fm 6/1/2022 20:22:58'!
PASSED!
!Behavior method!
followingHeadingChangesOn: aMarsRover
	^ [
	([
	(self coverAll:
		{44 to: 47}) new ] valueCoveringAll:
		{49 to: 51}) initializeFollowingHeadingChangesOn:
		(aMarsRover
			cover: (90 to: 99)
			declaredAt: (28 to: 37)) ] valueCoveringAll:
		{53 to: 88}.! !
!Behavior method!
initializeFollowingHeadingChangesOn: aMarsRover
	[
	(aMarsRover
		cover: (52 to: 61)
		declaredAt: (38 to: 47)) followHeadingChangesWith:
		(self coverAll:
			{89 to: 92}) ] valueCoveringAll:
		{63 to: 87}.! !
!Behavior method!
followHeadingChangesWith: anObserver
	[
	(head
		cover: (40 to: 43)
		declaredAt: (40 to: 43)) attach:
		(anObserver
			cover: (53 to: 62)
			declaredAt: (27 to: 36)) ] valueCoveringAll:
		{45 to: 51}.! !
!Behavior method!
isRotateRightCommand: aCommand
	^ [
	(aCommand
		cover: (35 to: 42)
		declaredAt: (23 to: 30)) =
		($r coverAll:
			{46 to: 47}) ] valueCoveringAll:
		{44 to: 44}.! !
!Behavior method!
rotateRight
	[
	([
	(self coverAll:
		{16 to: 19}) headProxyValue ] valueCoveringAll:
		{21 to: 34}) rotateRight ] valueCoveringAll:
		{36 to: 46}.! !
!Behavior method!
rotateRight
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) headEast ] valueCoveringAll:
		{27 to: 34}.! !
!Behavior method!
headEast
	[
	(head
		cover: (13 to: 16)
		declaredAt: (13 to: 16)) update:
		([
		(MarsRoverHeadingEast
			cover: (27 to: 46)
			declaredAt: (27 to: 46)) for:
			(self coverAll:
				{53 to: 56}) ] valueCoveringAll:
			{48 to: 51}) ] valueCoveringAll:
		{18 to: 24}.! !
!Behavior method!
notifyObserver: anObserver
	[
	(anObserver
		cover: (30 to: 39)
		declaredAt: (17 to: 26)) updateHeading:
		(value
			cover: (56 to: 60)
			declaredAt: (56 to: 60)) ] valueCoveringAll:
		{41 to: 54}.! !
!Behavior method!
updateHeading: aMarsRoverHeading
	[
	(aMarsRoverHeading
		cover: (36 to: 52)
		declaredAt: (16 to: 32)) accept:
		(self coverAll:
			{62 to: 65}) ] valueCoveringAll:
		{54 to: 60}.! !
!Behavior method!
accept: aVisitor
	^ [
	(aVisitor
		cover: (21 to: 28)
		declaredAt: (9 to: 16)) visitMarsRoverHeadingEast:
		(self coverAll:
			{57 to: 60}) ] valueCoveringAll:
		{30 to: 55}.! !
!Behavior method!
visitMarsRoverHeadingEast: aMarsRoverHeadingEast
	[
	(self coverAll:
		{53 to: 56}) addToLog:
		('East' coverAll:
			{68 to: 73}) ] valueCoveringAll:
		{58 to: 66}.! !

!testRun: #MarsRoverLoggerTest #test05LogsNewHeadingWhenRoverRotatesRight stamp: 'fm 6/1/2022 20:22:58'!
PASSED!
!Behavior method!
isRotateLeftCommand: aCommand
	^ [
	(aCommand
		cover: (34 to: 41)
		declaredAt: (22 to: 29)) =
		($l coverAll:
			{45 to: 46}) ] valueCoveringAll:
		{43 to: 43}.! !
!Behavior method!
rotateLeft
	[
	([
	(self coverAll:
		{15 to: 18}) headProxyValue ] valueCoveringAll:
		{20 to: 33}) rotateLeft ] valueCoveringAll:
		{35 to: 44}.! !
!Behavior method!
rotateLeft
	^ [
	(marsRover
		cover: (16 to: 24)
		declaredAt: (16 to: 24)) headNorth ] valueCoveringAll:
		{26 to: 34}.! !
!Behavior method!
headNorth
	[
	(head
		cover: (14 to: 17)
		declaredAt: (14 to: 17)) update:
		([
		(MarsRoverHeadingNorth
			cover: (28 to: 48)
			declaredAt: (28 to: 48)) for:
			(self coverAll:
				{55 to: 58}) ] valueCoveringAll:
			{50 to: 53}) ] valueCoveringAll:
		{19 to: 25}.! !
!Behavior method!
accept: aVisitor
	^ [
	(aVisitor
		cover: (21 to: 28)
		declaredAt: (9 to: 16)) visitMarsRoverHeadingNorth:
		(self coverAll:
			{58 to: 61}) ] valueCoveringAll:
		{30 to: 56}.! !
!Behavior method!
visitMarsRoverHeadingNorth: aMarsRoverHeadingNorth
	[
	(self coverAll:
		{55 to: 58}) addToLog:
		('North' coverAll:
			{70 to: 76}) ] valueCoveringAll:
		{60 to: 68}.! !
!Behavior method!
rotateLeft
	^ [
	(marsRover
		cover: (16 to: 24)
		declaredAt: (16 to: 24)) headWest ] valueCoveringAll:
		{26 to: 33}.! !
!Behavior method!
headWest
	[
	(head
		cover: (13 to: 16)
		declaredAt: (13 to: 16)) update:
		([
		(MarsRoverHeadingWest
			cover: (27 to: 46)
			declaredAt: (27 to: 46)) for:
			(self coverAll:
				{53 to: 56}) ] valueCoveringAll:
			{48 to: 51}) ] valueCoveringAll:
		{18 to: 24}.! !
!Behavior method!
accept: aVisitor
	^ [
	(aVisitor
		cover: (21 to: 28)
		declaredAt: (9 to: 16)) visitMarsRoverHeadingWest:
		(self coverAll:
			{57 to: 60}) ] valueCoveringAll:
		{30 to: 55}.! !
!Behavior method!
visitMarsRoverHeadingWest: aMarsRoverHeadingWest
	[
	(self coverAll:
		{53 to: 56}) addToLog:
		('West' coverAll:
			{68 to: 73}) ] valueCoveringAll:
		{58 to: 66}.! !
!Behavior method!
rotateLeft
	^ [
	(marsRover
		cover: (16 to: 24)
		declaredAt: (16 to: 24)) headSouth ] valueCoveringAll:
		{26 to: 34}.! !
!Behavior method!
headSouth
	[
	(head
		cover: (14 to: 17)
		declaredAt: (14 to: 17)) update:
		([
		(MarsRoverHeadingSouth
			cover: (28 to: 48)
			declaredAt: (28 to: 48)) for:
			(self coverAll:
				{55 to: 58}) ] valueCoveringAll:
			{50 to: 53}) ] valueCoveringAll:
		{19 to: 25}.! !
!Behavior method!
accept: aVisitor
	^ [
	(aVisitor
		cover: (21 to: 28)
		declaredAt: (9 to: 16)) visitMarsRoverHeadingSouth:
		(self coverAll:
			{58 to: 61}) ] valueCoveringAll:
		{30 to: 56}.! !
!Behavior method!
visitMarsRoverHeadingSouth: aMarsRoverHeadingSouth
	[
	(self coverAll:
		{55 to: 58}) addToLog:
		('South' coverAll:
			{70 to: 76}) ] valueCoveringAll:
		{60 to: 68}.! !

!testRun: #MarsRoverLoggerTest #test06LogsALineForEveryRoverRotation stamp: 'fm 6/1/2022 20:22:58'!
PASSED!
!Behavior method!
followingPositionAndHeadingChangesOn: aMarsRover
	^ [
	([
	(self coverAll:
		{54 to: 57}) new ] valueCoveringAll:
		{59 to: 61}) initializeFollowingPositionAndHeadingChangesOn:
		(aMarsRover
			cover: (111 to: 120)
			declaredAt: (39 to: 48)) ] valueCoveringAll:
		{63 to: 109}.! !
!Behavior method!
initializeFollowingPositionAndHeadingChangesOn: aMarsRover
	[
	(self coverAll:
		{63 to: 66}) initializeFollowingHeadingChangesOn:
		(aMarsRover
			cover: (105 to: 114)
			declaredAt: (49 to: 58)) ] valueCoveringAll:
		{68 to: 103}.
	[
	(self coverAll:
		{118 to: 121}) initializeFollowingPositionChangesOn:
		(aMarsRover
			cover: (161 to: 170)
			declaredAt: (49 to: 58)) ] valueCoveringAll:
		{123 to: 159}.! !
!Behavior method!
rotateRight
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) headSouth ] valueCoveringAll:
		{27 to: 35}.! !
!Behavior method!
moveForward
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) moveSouth ] valueCoveringAll:
		{27 to: 35}.! !
!Behavior method!
rotateRight
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) headWest ] valueCoveringAll:
		{27 to: 34}.! !

!testRun: #MarsRoverLoggerTest #test07LogsALineForEveryRoverAction stamp: 'fm 6/1/2022 20:22:58'!
PASSED!
!Behavior method!
isAt: aPosition heading: aHeadingType
	^ [
	([
	([
	(self coverAll:
		{42 to: 45}) positionProxyValue ] valueCoveringAll:
		{47 to: 64}) =
		(aPosition
			cover: (68 to: 76)
			declaredAt: (7 to: 15)) ] valueCoveringAll:
		{66 to: 66}) and: [
		[
		([
		(self coverAll:
			{85 to: 88}) headProxyValue ] valueCoveringAll:
			{90 to: 103}) isHeading:
			(aHeadingType
				cover: (116 to: 127)
				declaredAt: (26 to: 37)) ] valueCoveringAll:
			{105 to: 114} ]] valueCoveringAll:
		{78 to: 81}.! !
!Behavior method!
isHeading: aHeadingType
	^ [
	(self coverAll:
		{28 to: 31}) isKindOf:
		(aHeadingType
			cover: (43 to: 54)
			declaredAt: (12 to: 23)) ] valueCoveringAll:
		{33 to: 41}.! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'fm 6/1/2022 20:22:58'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'fm 6/1/2022 20:22:58'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'fm 6/1/2022 20:22:58'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'fm 6/1/2022 20:22:58'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'fm 6/1/2022 20:22:58'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'fm 6/1/2022 20:22:58'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'fm 6/1/2022 20:22:58'!
PASSED!
!Behavior method!
signalInvalidCommand
	[
	(self coverAll:
		{25 to: 28}) error:
		([
		(self coverAll:
			{37 to: 40}) invalidCommandErrorDescription ] valueCoveringAll:
			{42 to: 71}) ] valueCoveringAll:
		{30 to: 35}.! !
!Behavior method!
invalidCommandErrorDescription
	^ 'Invalid command' coverAll:
		{36 to: 52}.! !

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'fm 6/1/2022 20:22:58'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'fm 6/1/2022 20:22:58'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'fm 6/1/2022 20:22:58'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'fm 6/1/2022 20:22:58'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'fm 6/1/2022 20:22:58'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'fm 6/1/2022 20:22:58'!
PASSED!
!Behavior method!
moveBackward
	^ [
	(marsRover
		cover: (18 to: 26)
		declaredAt: (18 to: 26)) moveNorth ] valueCoveringAll:
		{28 to: 36}.! !
!Behavior method!
rotateLeft
	^ [
	(marsRover
		cover: (16 to: 24)
		declaredAt: (16 to: 24)) headEast ] valueCoveringAll:
		{26 to: 33}.! !

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'fm 6/1/2022 20:22:58'!
PASSED!
!Behavior method!
moveForward
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) moveWest ] valueCoveringAll:
		{27 to: 34}.! !
!Behavior method!
moveBackward
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) moveEast ] valueCoveringAll:
		{27 to: 34}.! !
!Behavior method!
rotateRight
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) headNorth ] valueCoveringAll:
		{27 to: 35}.! !

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'fm 6/1/2022 20:22:58'!
PASSED!
!Behavior method!
followPositionChangesOn: aMarsRover
	^ [
	([
	(self coverAll:
		{42 to: 45}) new ] valueCoveringAll:
		{47 to: 49}) initializeFollowingPositionChangesOn:
		(aMarsRover
			cover: (89 to: 98)
			declaredAt: (26 to: 35)) ] valueCoveringAll:
		{51 to: 87}.! !
!Behavior method!
initialize
	(headingField _ '' coverAll:
		{31 to: 32})
		cover: (14 to: 25)
		declaredAt: (14 to: 25).
	(positionField _ '' coverAll:
		{54 to: 55})
		cover: (36 to: 48)
		declaredAt: (36 to: 48).! !
!Behavior method!
show
	^ [
	([
	([
	(positionField
		cover: (10 to: 22)
		declaredAt: (10 to: 22)) ,
		(' ' coverAll:
			{24 to: 26}) ] valueCoveringAll:
		{23 to: 23}) ,
		(headingField
			cover: (28 to: 39)
			declaredAt: (28 to: 39)) ] valueCoveringAll:
		{27 to: 27}) withBlanksTrimmed ] valueCoveringAll:
		{42 to: 58}.! !

!testRun: #MarsRoverWindowTest #test01ShowsNothingWhenRoverDoesNotMove stamp: 'fm 6/1/2022 20:22:59'!
PASSED!
!Behavior method!
updatePosition: aPosition
	(positionField _ [
	(aPosition
		cover: (46 to: 54)
		declaredAt: (17 to: 25)) asString ] valueCoveringAll:
		{56 to: 63})
		cover: (29 to: 41)
		declaredAt: (29 to: 41).! !

!testRun: #MarsRoverWindowTest #test02ShowsNewPositionWhenRoverMoves stamp: 'fm 6/1/2022 20:22:59'!
PASSED!
!Behavior method!
followHeadingChangesOn: aMarsRover
	^ [
	([
	(self coverAll:
		{41 to: 44}) new ] valueCoveringAll:
		{46 to: 48}) initializeFollowingHeadingChangesOn:
		(aMarsRover
			cover: (87 to: 96)
			declaredAt: (25 to: 34)) ] valueCoveringAll:
		{50 to: 85}.! !

!testRun: #MarsRoverWindowTest #test03ShowsNothingWhenRoverDoesNotRotate stamp: 'fm 6/1/2022 20:22:59'!
PASSED!
!Behavior method!
visitMarsRoverHeadingSouth: aMarsRoverHeadingSouth
	(headingField _ 'Apuntando al Sur' coverAll:
		{71 to: 88})
		cover: (55 to: 66)
		declaredAt: (55 to: 66).! !
!Behavior method!
visitMarsRoverHeadingWest: aMarsRoverHeadingWest
	(headingField _ 'Apuntando al Oeste' coverAll:
		{69 to: 88})
		cover: (53 to: 64)
		declaredAt: (53 to: 64).! !
!Behavior method!
visitMarsRoverHeadingNorth: aMarsRoverHeadingNorth
	(headingField _ 'Apuntando al Norte' coverAll:
		{71 to: 90})
		cover: (55 to: 66)
		declaredAt: (55 to: 66).! !

!testRun: #MarsRoverWindowTest #test04ShowsLastHeadingWhenRoverRotatesManyTimes stamp: 'fm 6/1/2022 20:22:59'!
PASSED!
!Behavior method!
followPositionAndHeadingChangesOn: aMarsRover
	^ [
	([
	(self coverAll:
		{51 to: 54}) new ] valueCoveringAll:
		{56 to: 58}) initializeFollowingPositionAndHeadingChangesOn:
		(aMarsRover
			cover: (108 to: 117)
			declaredAt: (36 to: 45)) ] valueCoveringAll:
		{60 to: 106}.! !
!Behavior method!
visitMarsRoverHeadingEast: aMarsRoverHeadingEast
	(headingField _ 'Apuntando al Este' coverAll:
		{69 to: 87})
		cover: (53 to: 64)
		declaredAt: (53 to: 64).! !

!testRun: #MarsRoverWindowTest #test05ShowsOnlyUpdatedFieldsAccordingToRoverActions stamp: 'fm 6/1/2022 20:22:59'!
PASSED!
!MarsRoverObserver methodsFor: 'updating' stamp: 'fm 6/1/2022 20:28:26'!
visitMarsRoverHeadingEast

	self subclassResponsibility ! !
!MarsRoverLogger methodsFor: 'updating' stamp: 'fm 6/1/2022 20:28:26' overrides: 50483838!
visitMarsRoverHeadingEast
	
	self addToLog: 'East'.! !
!MarsRoverWindow methodsFor: 'updating' stamp: 'fm 6/1/2022 20:28:26' overrides: 50483838!
visitMarsRoverHeadingEast
	
	headingField := 'Apuntando al Este'.! !
!MarsRoverHeadingEast methodsFor: 'as yet unclassified' stamp: 'fm 6/1/2022 20:28:26' prior: 50474577 overrides: 50479366!
accept: aVisitor

	^aVisitor visitMarsRoverHeadingEast! !

!methodRemoval: MarsRoverObserver #visitMarsRoverHeadingEast: stamp: 'fm 6/1/2022 20:28:26'!
visitMarsRoverHeadingEast: aMarsRoverHeadingEast

	self subclassResponsibility !

!methodRemoval: MarsRoverLogger #visitMarsRoverHeadingEast: stamp: 'fm 6/1/2022 20:28:26'!
visitMarsRoverHeadingEast: aMarsRoverHeadingEast
	
	self addToLog: 'East'.!

!methodRemoval: MarsRoverWindow #visitMarsRoverHeadingEast: stamp: 'fm 6/1/2022 20:28:26'!
visitMarsRoverHeadingEast: aMarsRoverHeadingEast
	
	headingField := 'Apuntando al Este'.!
!MarsRoverObserver methodsFor: 'updating' stamp: 'fm 6/1/2022 20:28:33'!
visitMarsRoverHeadingNorth

	self subclassResponsibility ! !
!MarsRoverLogger methodsFor: 'updating' stamp: 'fm 6/1/2022 20:28:33' overrides: 50483875!
visitMarsRoverHeadingNorth
	
	self addToLog: 'North'.! !
!MarsRoverWindow methodsFor: 'updating' stamp: 'fm 6/1/2022 20:28:33' overrides: 50483875!
visitMarsRoverHeadingNorth
	
	headingField := 'Apuntando al Norte'.! !
!MarsRoverHeadingNorth methodsFor: 'as yet unclassified' stamp: 'fm 6/1/2022 20:28:33' prior: 50474876 overrides: 50479366!
accept: aVisitor

	^aVisitor visitMarsRoverHeadingNorth! !

!methodRemoval: MarsRoverObserver #visitMarsRoverHeadingNorth: stamp: 'fm 6/1/2022 20:28:33'!
visitMarsRoverHeadingNorth: aMarsRoverHeadingNorth

	self subclassResponsibility !

!methodRemoval: MarsRoverLogger #visitMarsRoverHeadingNorth: stamp: 'fm 6/1/2022 20:28:33'!
visitMarsRoverHeadingNorth: aMarsRoverHeadingNorth
	
	self addToLog: 'North'.!

!methodRemoval: MarsRoverWindow #visitMarsRoverHeadingNorth: stamp: 'fm 6/1/2022 20:28:33'!
visitMarsRoverHeadingNorth: aMarsRoverHeadingNorth
	
	headingField := 'Apuntando al Norte'.!
!MarsRoverObserver methodsFor: 'updating' stamp: 'fm 6/1/2022 20:28:40'!
visitMarsRoverHeadingSouth

	self subclassResponsibility ! !
!MarsRoverLogger methodsFor: 'updating' stamp: 'fm 6/1/2022 20:28:40' overrides: 50483913!
visitMarsRoverHeadingSouth
	
	self addToLog: 'South'.! !
!MarsRoverWindow methodsFor: 'updating' stamp: 'fm 6/1/2022 20:28:40' overrides: 50483913!
visitMarsRoverHeadingSouth
	
	headingField := 'Apuntando al Sur'.! !
!MarsRoverHeadingSouth methodsFor: 'as yet unclassified' stamp: 'fm 6/1/2022 20:28:40' prior: 50474881 overrides: 50479366!
accept: aVisitor

	^aVisitor visitMarsRoverHeadingSouth! !

!methodRemoval: MarsRoverObserver #visitMarsRoverHeadingSouth: stamp: 'fm 6/1/2022 20:28:40'!
visitMarsRoverHeadingSouth: aMarsRoverHeadingSouth

	self subclassResponsibility !

!methodRemoval: MarsRoverLogger #visitMarsRoverHeadingSouth: stamp: 'fm 6/1/2022 20:28:40'!
visitMarsRoverHeadingSouth: aMarsRoverHeadingSouth
	
	self addToLog: 'South'.!

!methodRemoval: MarsRoverWindow #visitMarsRoverHeadingSouth: stamp: 'fm 6/1/2022 20:28:40'!
visitMarsRoverHeadingSouth: aMarsRoverHeadingSouth
	
	headingField := 'Apuntando al Sur'.!
!MarsRoverObserver methodsFor: 'updating' stamp: 'fm 6/1/2022 20:28:51'!
visitMarsRoverHeadingWest

	self subclassResponsibility ! !
!MarsRoverLogger methodsFor: 'updating' stamp: 'fm 6/1/2022 20:28:52' overrides: 50483951!
visitMarsRoverHeadingWest
	
	self addToLog: 'West'.! !
!MarsRoverWindow methodsFor: 'updating' stamp: 'fm 6/1/2022 20:28:52' overrides: 50483951!
visitMarsRoverHeadingWest
	
	headingField := 'Apuntando al Oeste'.! !
!MarsRoverHeadingWest methodsFor: 'as yet unclassified' stamp: 'fm 6/1/2022 20:28:52' prior: 50474886 overrides: 50479366!
accept: aVisitor

	^aVisitor visitMarsRoverHeadingWest! !

!methodRemoval: MarsRoverObserver #visitMarsRoverHeadingWest: stamp: 'fm 6/1/2022 20:28:52'!
visitMarsRoverHeadingWest: aMarsRoverHeadingWest

	self subclassResponsibility !

!methodRemoval: MarsRoverLogger #visitMarsRoverHeadingWest: stamp: 'fm 6/1/2022 20:28:52'!
visitMarsRoverHeadingWest: aMarsRoverHeadingWest
	
	self addToLog: 'West'.!

!methodRemoval: MarsRoverWindow #visitMarsRoverHeadingWest: stamp: 'fm 6/1/2022 20:28:52'!
visitMarsRoverHeadingWest: aMarsRoverHeadingWest
	
	headingField := 'Apuntando al Oeste'.!
!Behavior method!
at: aPosition heading: aHeadingType
	^ [
	([
	(self coverAll:
		{41 to: 44}) new ] valueCoveringAll:
		{46 to: 48})
		initializeAt:
			(aPosition
				cover: (64 to: 72)
				declaredAt: (5 to: 13))
		heading:
			(aHeadingType
				cover: (83 to: 94)
				declaredAt: (24 to: 35)) ] valueCoveringAll:
		{50 to: 62. 74 to: 81}.! !
!Behavior method!
initializeAt: aPosition heading: aHeadingType
	(position _ [
	(PositionProxy
		cover: (61 to: 73)
		declaredAt: (61 to: 73)) on:
		(aPosition
			cover: (79 to: 87)
			declaredAt: (15 to: 23)) ] valueCoveringAll:
		{75 to: 77})
		cover: (49 to: 56)
		declaredAt: (49 to: 56).
	(head _ [
	(HeadingProxy
		cover: (99 to: 110)
		declaredAt: (99 to: 110)) on:
		([
		(aHeadingType
			cover: (117 to: 128)
			declaredAt: (34 to: 45)) for:
			(self coverAll:
				{135 to: 138}) ] valueCoveringAll:
			{130 to: 133}) ] valueCoveringAll:
		{112 to: 114})
		cover: (91 to: 94)
		declaredAt: (91 to: 94).! !
!Behavior method!
on: anInitialValue
	^ [
	([
	(self coverAll:
		{24 to: 27}) new ] valueCoveringAll:
		{29 to: 31}) initializeOn:
		(anInitialValue
			cover: (47 to: 60)
			declaredAt: (5 to: 18)) ] valueCoveringAll:
		{33 to: 45}.! !
!Behavior method!
initializeOn: anInitialValue
	(value _ anInitialValue
		cover: (41 to: 54)
		declaredAt: (15 to: 28))
		cover: (32 to: 36)
		declaredAt: (32 to: 36).
	(observers _ [
	(Set
		cover: (71 to: 73)
		declaredAt: (71 to: 73)) new ] valueCoveringAll:
		{75 to: 77})
		cover: (58 to: 66)
		declaredAt: (58 to: 66).! !
!Behavior method!
for: aMarsRover
	^ [
	([
	(self coverAll:
		{22 to: 25}) new ] valueCoveringAll:
		{27 to: 29}) initializeFor:
		(aMarsRover
			cover: (46 to: 55)
			declaredAt: (6 to: 15)) ] valueCoveringAll:
		{31 to: 44}.! !
!Behavior method!
initializeFor: aMarsRover
	(marsRover _ aMarsRover
		cover: (44 to: 53)
		declaredAt: (16 to: 25))
		cover: (31 to: 39)
		declaredAt: (31 to: 39).! !
!Behavior method!
followingPositionChangesOn: aMarsRover
	^ [
	([
	(self coverAll:
		{45 to: 48}) new ] valueCoveringAll:
		{50 to: 52}) initializeFollowingPositionChangesOn:
		(aMarsRover
			cover: (92 to: 101)
			declaredAt: (29 to: 38)) ] valueCoveringAll:
		{54 to: 90}.! !
!Behavior method!
initialize
	(log _ [
	(WriteStream
		cover: (22 to: 32)
		declaredAt: (22 to: 32)) on:
		('' coverAll:
			{38 to: 39}) ] valueCoveringAll:
		{34 to: 36})
		cover: (14 to: 16)
		declaredAt: (14 to: 16).! !
!Behavior method!
initializeFollowingPositionChangesOn: aMarsRover
	[
	(aMarsRover
		cover: (54 to: 63)
		declaredAt: (39 to: 48)) followPositionChangesWith:
		(self coverAll:
			{92 to: 95}) ] valueCoveringAll:
		{65 to: 90}.! !
!Behavior method!
followPositionChangesWith: anObserver
	[
	(position
		cover: (41 to: 48)
		declaredAt: (41 to: 48)) attach:
		(anObserver
			cover: (58 to: 67)
			declaredAt: (28 to: 37)) ] valueCoveringAll:
		{50 to: 56}.! !
!Behavior method!
attach: anObserver
	[
	(observers
		cover: (22 to: 30)
		declaredAt: (22 to: 30)) add:
		(anObserver
			cover: (37 to: 46)
			declaredAt: (9 to: 18)) ] valueCoveringAll:
		{32 to: 35}.! !
!Behavior method!
process: aSequenceOfCommands
	[
	(aSequenceOfCommands
		cover: (32 to: 50)
		declaredAt: (10 to: 28)) do: [ :aCommand |
		[
		(self coverAll:
			{69 to: 72}) processCommand:
			(aCommand
				cover: (90 to: 97)
				declaredAt: (58 to: 65)) ] valueCoveringAll:
			{74 to: 88} ]] valueCoveringAll:
		{52 to: 54}.! !
!Behavior method!
readStream
	^ [
	(ReadStream
		cover: (16 to: 25)
		declaredAt: (16 to: 25)) on:
		([
		(log
			cover: (31 to: 33)
			declaredAt: (31 to: 33)) contents ] valueCoveringAll:
			{35 to: 42}) ] valueCoveringAll:
		{27 to: 29}.! !

!testRun: #MarsRoverLoggerTest #test01LogsNothingWhenRoverDoesNotMove stamp: 'fm 6/1/2022 20:28:57'!
PASSED!
!Behavior method!
processCommand: aCommand
	[
	([
	(self coverAll:
		{29 to: 32}) isForwardCommand:
		(aCommand
			cover: (52 to: 59)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{34 to: 50}) ifTrue: [ ^ [
		(self coverAll:
			{74 to: 77}) moveForward ] valueCoveringAll:
			{79 to: 89} ]] valueCoveringAll:
		{62 to: 68}.
	[
	([
	(self coverAll:
		{96 to: 99}) isBackwardCommand:
		(aCommand
			cover: (120 to: 127)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{101 to: 118}) ifTrue: [ ^ [
		(self coverAll:
			{142 to: 145}) moveBackward ] valueCoveringAll:
			{147 to: 158} ]] valueCoveringAll:
		{130 to: 136}.
	[
	([
	(self coverAll:
		{165 to: 168}) isRotateRightCommand:
		(aCommand
			cover: (192 to: 199)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{170 to: 190}) ifTrue: [ ^ [
		(self coverAll:
			{214 to: 217}) rotateRight ] valueCoveringAll:
			{219 to: 229} ]] valueCoveringAll:
		{202 to: 208}.
	[
	([
	(self coverAll:
		{236 to: 239}) isRotateLeftCommand:
		(aCommand
			cover: (262 to: 269)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{241 to: 260}) ifTrue: [ ^ [
		(self coverAll:
			{284 to: 287}) rotateLeft ] valueCoveringAll:
			{289 to: 298} ]] valueCoveringAll:
		{272 to: 278}.
	[
	(self coverAll:
		{305 to: 308}) signalInvalidCommand ] valueCoveringAll:
		{310 to: 329}.! !
!Behavior method!
isForwardCommand: aCommand
	^ [
	(aCommand
		cover: (31 to: 38)
		declaredAt: (19 to: 26)) =
		($f coverAll:
			{42 to: 43}) ] valueCoveringAll:
		{40 to: 40}.! !
!Behavior method!
moveForward
	[
	([
	(self coverAll:
		{16 to: 19}) headProxyValue ] valueCoveringAll:
		{21 to: 34}) moveForward ] valueCoveringAll:
		{36 to: 46}.! !
!Behavior method!
headProxyValue
	^ [
	(head
		cover: (20 to: 23)
		declaredAt: (20 to: 23)) value ] valueCoveringAll:
		{25 to: 29}.! !
!Behavior method!
value
	^ value
		cover: (10 to: 14)
		declaredAt: (10 to: 14).! !
!Behavior method!
moveForward
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) moveNorth ] valueCoveringAll:
		{27 to: 35}.! !
!Behavior method!
moveNorth
	[
	(self coverAll:
		{14 to: 17}) addToPosition:
		([
		(0 coverAll:
			{34 to: 34}) @
			(1 coverAll:
				{36 to: 36}) ] valueCoveringAll:
			{35 to: 35}) ] valueCoveringAll:
		{19 to: 32}.! !
!Behavior method!
addToPosition: newPosition
	[
	(position
		cover: (30 to: 37)
		declaredAt: (30 to: 37)) update:
		([
		([
		(self coverAll:
			{48 to: 51}) positionProxyValue ] valueCoveringAll:
			{53 to: 70}) +
			(newPosition
				cover: (74 to: 84)
				declaredAt: (16 to: 26)) ] valueCoveringAll:
			{72 to: 72}) ] valueCoveringAll:
		{39 to: 45}.! !
!Behavior method!
positionProxyValue
	^ [
	(position
		cover: (24 to: 31)
		declaredAt: (24 to: 31)) value ] valueCoveringAll:
		{33 to: 37}.! !
!Behavior method!
update: aNewValue
	(value _ aNewValue
		cover: (30 to: 38)
		declaredAt: (9 to: 17))
		cover: (21 to: 25)
		declaredAt: (21 to: 25).
	[
	(self coverAll:
		{42 to: 45}) notify ] valueCoveringAll:
		{47 to: 52}.! !
!Behavior method!
notify
	[
	(observers
		cover: (10 to: 18)
		declaredAt: (10 to: 18)) do: [ :observer |
		[
		(self coverAll:
			{37 to: 40}) notifyObserver:
			(observer
				cover: (58 to: 65)
				declaredAt: (26 to: 33)) ] valueCoveringAll:
			{42 to: 56} ]] valueCoveringAll:
		{20 to: 22}.! !
!Behavior method!
notifyObserver: anObserver
	[
	(anObserver
		cover: (30 to: 39)
		declaredAt: (17 to: 26)) updatePosition:
		(value
			cover: (57 to: 61)
			declaredAt: (57 to: 61)) ] valueCoveringAll:
		{41 to: 55}.! !
!Behavior method!
updatePosition: aPosition
	[
	(self coverAll:
		{29 to: 32}) addToLog:
		([
		(aPosition
			cover: (44 to: 52)
			declaredAt: (17 to: 25)) asString ] valueCoveringAll:
			{54 to: 61}) ] valueCoveringAll:
		{34 to: 42}.! !
!Behavior method!
addToLog: aLine
	[ | cascadeReceiver |
	cascadeReceiver _ log
		cover: (19 to: 21)
		declaredAt: (19 to: 21).
	[
	cascadeReceiver nextPutAll:
		(aLine
			cover: (35 to: 39)
			declaredAt: (11 to: 15)) ] valueCoveringAll:
		{23 to: 33}.
	[ cascadeReceiver newLine ] valueCoveringAll:
		{42 to: 48} ] value.! !

!testRun: #MarsRoverLoggerTest #test02LogsNewPositionWhenRoverMovesForward stamp: 'fm 6/1/2022 20:28:58'!
PASSED!
!Behavior method!
isBackwardCommand: aCommand
	^ [
	(aCommand
		cover: (32 to: 39)
		declaredAt: (20 to: 27)) =
		($b coverAll:
			{43 to: 44}) ] valueCoveringAll:
		{41 to: 41}.! !
!Behavior method!
moveBackward
	[
	([
	(self coverAll:
		{17 to: 20}) headProxyValue ] valueCoveringAll:
		{22 to: 35}) moveBackward ] valueCoveringAll:
		{37 to: 48}.! !
!Behavior method!
moveBackward
	^ [
	(marsRover
		cover: (18 to: 26)
		declaredAt: (18 to: 26)) moveSouth ] valueCoveringAll:
		{28 to: 36}.! !
!Behavior method!
moveSouth
	[
	(self coverAll:
		{14 to: 17}) addToPosition:
		([
		(0 coverAll:
			{34 to: 34}) @
			(-1 coverAll:
				{36 to: 37}) ] valueCoveringAll:
			{35 to: 35}) ] valueCoveringAll:
		{19 to: 32}.! !

!testRun: #MarsRoverLoggerTest #test03LogsNewPositionWhenRoverMovesBackward stamp: 'fm 6/1/2022 20:28:58'!
PASSED!
!Behavior method!
moveForward
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) moveEast ] valueCoveringAll:
		{27 to: 34}.! !
!Behavior method!
moveEast
	[
	(self coverAll:
		{13 to: 16}) addToPosition:
		([
		(1 coverAll:
			{33 to: 33}) @
			(0 coverAll:
				{35 to: 35}) ] valueCoveringAll:
			{34 to: 34}) ] valueCoveringAll:
		{18 to: 31}.! !
!Behavior method!
moveBackward
	^ [
	(marsRover
		cover: (18 to: 26)
		declaredAt: (18 to: 26)) moveWest ] valueCoveringAll:
		{28 to: 35}.! !
!Behavior method!
moveWest
	[
	(self coverAll:
		{13 to: 16}) addToPosition:
		([
		(-1 coverAll:
			{33 to: 34}) @
			(0 coverAll:
				{35 to: 36}) ] valueCoveringAll:
			{35 to: 35}) ] valueCoveringAll:
		{18 to: 31}.! !

!testRun: #MarsRoverLoggerTest #test04LogsALineForEveryRoverMovement stamp: 'fm 6/1/2022 20:28:58'!
PASSED!
!Behavior method!
followingHeadingChangesOn: aMarsRover
	^ [
	([
	(self coverAll:
		{44 to: 47}) new ] valueCoveringAll:
		{49 to: 51}) initializeFollowingHeadingChangesOn:
		(aMarsRover
			cover: (90 to: 99)
			declaredAt: (28 to: 37)) ] valueCoveringAll:
		{53 to: 88}.! !
!Behavior method!
initializeFollowingHeadingChangesOn: aMarsRover
	[
	(aMarsRover
		cover: (52 to: 61)
		declaredAt: (38 to: 47)) followHeadingChangesWith:
		(self coverAll:
			{89 to: 92}) ] valueCoveringAll:
		{63 to: 87}.! !
!Behavior method!
followHeadingChangesWith: anObserver
	[
	(head
		cover: (40 to: 43)
		declaredAt: (40 to: 43)) attach:
		(anObserver
			cover: (53 to: 62)
			declaredAt: (27 to: 36)) ] valueCoveringAll:
		{45 to: 51}.! !
!Behavior method!
isRotateRightCommand: aCommand
	^ [
	(aCommand
		cover: (35 to: 42)
		declaredAt: (23 to: 30)) =
		($r coverAll:
			{46 to: 47}) ] valueCoveringAll:
		{44 to: 44}.! !
!Behavior method!
rotateRight
	[
	([
	(self coverAll:
		{16 to: 19}) headProxyValue ] valueCoveringAll:
		{21 to: 34}) rotateRight ] valueCoveringAll:
		{36 to: 46}.! !
!Behavior method!
rotateRight
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) headEast ] valueCoveringAll:
		{27 to: 34}.! !
!Behavior method!
headEast
	[
	(head
		cover: (13 to: 16)
		declaredAt: (13 to: 16)) update:
		([
		(MarsRoverHeadingEast
			cover: (27 to: 46)
			declaredAt: (27 to: 46)) for:
			(self coverAll:
				{53 to: 56}) ] valueCoveringAll:
			{48 to: 51}) ] valueCoveringAll:
		{18 to: 24}.! !
!Behavior method!
notifyObserver: anObserver
	[
	(anObserver
		cover: (30 to: 39)
		declaredAt: (17 to: 26)) updateHeading:
		(value
			cover: (56 to: 60)
			declaredAt: (56 to: 60)) ] valueCoveringAll:
		{41 to: 54}.! !
!Behavior method!
updateHeading: aMarsRoverHeading
	[
	(aMarsRoverHeading
		cover: (36 to: 52)
		declaredAt: (16 to: 32)) accept:
		(self coverAll:
			{62 to: 65}) ] valueCoveringAll:
		{54 to: 60}.! !
!Behavior method!
accept: aVisitor
	^ [
	(aVisitor
		cover: (21 to: 28)
		declaredAt: (9 to: 16)) visitMarsRoverHeadingEast ] valueCoveringAll:
		{30 to: 54}.! !
!Behavior method!
visitMarsRoverHeadingEast
	[
	(self coverAll:
		{30 to: 33}) addToLog:
		('East' coverAll:
			{45 to: 50}) ] valueCoveringAll:
		{35 to: 43}.! !

!testRun: #MarsRoverLoggerTest #test05LogsNewHeadingWhenRoverRotatesRight stamp: 'fm 6/1/2022 20:28:58'!
PASSED!
!Behavior method!
isRotateLeftCommand: aCommand
	^ [
	(aCommand
		cover: (34 to: 41)
		declaredAt: (22 to: 29)) =
		($l coverAll:
			{45 to: 46}) ] valueCoveringAll:
		{43 to: 43}.! !
!Behavior method!
rotateLeft
	[
	([
	(self coverAll:
		{15 to: 18}) headProxyValue ] valueCoveringAll:
		{20 to: 33}) rotateLeft ] valueCoveringAll:
		{35 to: 44}.! !
!Behavior method!
rotateLeft
	^ [
	(marsRover
		cover: (16 to: 24)
		declaredAt: (16 to: 24)) headNorth ] valueCoveringAll:
		{26 to: 34}.! !
!Behavior method!
headNorth
	[
	(head
		cover: (14 to: 17)
		declaredAt: (14 to: 17)) update:
		([
		(MarsRoverHeadingNorth
			cover: (28 to: 48)
			declaredAt: (28 to: 48)) for:
			(self coverAll:
				{55 to: 58}) ] valueCoveringAll:
			{50 to: 53}) ] valueCoveringAll:
		{19 to: 25}.! !
!Behavior method!
accept: aVisitor
	^ [
	(aVisitor
		cover: (21 to: 28)
		declaredAt: (9 to: 16)) visitMarsRoverHeadingNorth ] valueCoveringAll:
		{30 to: 55}.! !
!Behavior method!
visitMarsRoverHeadingNorth
	[
	(self coverAll:
		{31 to: 34}) addToLog:
		('North' coverAll:
			{46 to: 52}) ] valueCoveringAll:
		{36 to: 44}.! !
!Behavior method!
rotateLeft
	^ [
	(marsRover
		cover: (16 to: 24)
		declaredAt: (16 to: 24)) headWest ] valueCoveringAll:
		{26 to: 33}.! !
!Behavior method!
headWest
	[
	(head
		cover: (13 to: 16)
		declaredAt: (13 to: 16)) update:
		([
		(MarsRoverHeadingWest
			cover: (27 to: 46)
			declaredAt: (27 to: 46)) for:
			(self coverAll:
				{53 to: 56}) ] valueCoveringAll:
			{48 to: 51}) ] valueCoveringAll:
		{18 to: 24}.! !
!Behavior method!
accept: aVisitor
	^ [
	(aVisitor
		cover: (21 to: 28)
		declaredAt: (9 to: 16)) visitMarsRoverHeadingWest ] valueCoveringAll:
		{30 to: 54}.! !
!Behavior method!
visitMarsRoverHeadingWest
	[
	(self coverAll:
		{30 to: 33}) addToLog:
		('West' coverAll:
			{45 to: 50}) ] valueCoveringAll:
		{35 to: 43}.! !
!Behavior method!
rotateLeft
	^ [
	(marsRover
		cover: (16 to: 24)
		declaredAt: (16 to: 24)) headSouth ] valueCoveringAll:
		{26 to: 34}.! !
!Behavior method!
headSouth
	[
	(head
		cover: (14 to: 17)
		declaredAt: (14 to: 17)) update:
		([
		(MarsRoverHeadingSouth
			cover: (28 to: 48)
			declaredAt: (28 to: 48)) for:
			(self coverAll:
				{55 to: 58}) ] valueCoveringAll:
			{50 to: 53}) ] valueCoveringAll:
		{19 to: 25}.! !
!Behavior method!
accept: aVisitor
	^ [
	(aVisitor
		cover: (21 to: 28)
		declaredAt: (9 to: 16)) visitMarsRoverHeadingSouth ] valueCoveringAll:
		{30 to: 55}.! !
!Behavior method!
visitMarsRoverHeadingSouth
	[
	(self coverAll:
		{31 to: 34}) addToLog:
		('South' coverAll:
			{46 to: 52}) ] valueCoveringAll:
		{36 to: 44}.! !

!testRun: #MarsRoverLoggerTest #test06LogsALineForEveryRoverRotation stamp: 'fm 6/1/2022 20:28:58'!
PASSED!
!Behavior method!
followingPositionAndHeadingChangesOn: aMarsRover
	^ [
	([
	(self coverAll:
		{54 to: 57}) new ] valueCoveringAll:
		{59 to: 61}) initializeFollowingPositionAndHeadingChangesOn:
		(aMarsRover
			cover: (111 to: 120)
			declaredAt: (39 to: 48)) ] valueCoveringAll:
		{63 to: 109}.! !
!Behavior method!
initializeFollowingPositionAndHeadingChangesOn: aMarsRover
	[
	(self coverAll:
		{63 to: 66}) initializeFollowingHeadingChangesOn:
		(aMarsRover
			cover: (105 to: 114)
			declaredAt: (49 to: 58)) ] valueCoveringAll:
		{68 to: 103}.
	[
	(self coverAll:
		{118 to: 121}) initializeFollowingPositionChangesOn:
		(aMarsRover
			cover: (161 to: 170)
			declaredAt: (49 to: 58)) ] valueCoveringAll:
		{123 to: 159}.! !
!Behavior method!
rotateRight
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) headSouth ] valueCoveringAll:
		{27 to: 35}.! !
!Behavior method!
moveForward
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) moveSouth ] valueCoveringAll:
		{27 to: 35}.! !
!Behavior method!
rotateRight
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) headWest ] valueCoveringAll:
		{27 to: 34}.! !

!testRun: #MarsRoverLoggerTest #test07LogsALineForEveryRoverAction stamp: 'fm 6/1/2022 20:28:58'!
PASSED!
!Behavior method!
isAt: aPosition heading: aHeadingType
	^ [
	([
	([
	(self coverAll:
		{42 to: 45}) positionProxyValue ] valueCoveringAll:
		{47 to: 64}) =
		(aPosition
			cover: (68 to: 76)
			declaredAt: (7 to: 15)) ] valueCoveringAll:
		{66 to: 66}) and: [
		[
		([
		(self coverAll:
			{85 to: 88}) headProxyValue ] valueCoveringAll:
			{90 to: 103}) isHeading:
			(aHeadingType
				cover: (116 to: 127)
				declaredAt: (26 to: 37)) ] valueCoveringAll:
			{105 to: 114} ]] valueCoveringAll:
		{78 to: 81}.! !
!Behavior method!
isHeading: aHeadingType
	^ [
	(self coverAll:
		{28 to: 31}) isKindOf:
		(aHeadingType
			cover: (43 to: 54)
			declaredAt: (12 to: 23)) ] valueCoveringAll:
		{33 to: 41}.! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'fm 6/1/2022 20:28:58'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'fm 6/1/2022 20:28:58'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'fm 6/1/2022 20:28:58'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'fm 6/1/2022 20:28:58'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'fm 6/1/2022 20:28:58'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'fm 6/1/2022 20:28:58'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'fm 6/1/2022 20:28:58'!
PASSED!
!Behavior method!
signalInvalidCommand
	[
	(self coverAll:
		{25 to: 28}) error:
		([
		(self coverAll:
			{37 to: 40}) invalidCommandErrorDescription ] valueCoveringAll:
			{42 to: 71}) ] valueCoveringAll:
		{30 to: 35}.! !
!Behavior method!
invalidCommandErrorDescription
	^ 'Invalid command' coverAll:
		{36 to: 52}.! !

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'fm 6/1/2022 20:28:58'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'fm 6/1/2022 20:28:58'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'fm 6/1/2022 20:28:58'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'fm 6/1/2022 20:28:58'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'fm 6/1/2022 20:28:58'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'fm 6/1/2022 20:28:58'!
PASSED!
!Behavior method!
moveBackward
	^ [
	(marsRover
		cover: (18 to: 26)
		declaredAt: (18 to: 26)) moveNorth ] valueCoveringAll:
		{28 to: 36}.! !
!Behavior method!
rotateLeft
	^ [
	(marsRover
		cover: (16 to: 24)
		declaredAt: (16 to: 24)) headEast ] valueCoveringAll:
		{26 to: 33}.! !

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'fm 6/1/2022 20:28:58'!
PASSED!
!Behavior method!
moveForward
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) moveWest ] valueCoveringAll:
		{27 to: 34}.! !
!Behavior method!
moveBackward
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) moveEast ] valueCoveringAll:
		{27 to: 34}.! !
!Behavior method!
rotateRight
	^ [
	(marsRover
		cover: (17 to: 25)
		declaredAt: (17 to: 25)) headNorth ] valueCoveringAll:
		{27 to: 35}.! !

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'fm 6/1/2022 20:28:58'!
PASSED!
!Behavior method!
followPositionChangesOn: aMarsRover
	^ [
	([
	(self coverAll:
		{42 to: 45}) new ] valueCoveringAll:
		{47 to: 49}) initializeFollowingPositionChangesOn:
		(aMarsRover
			cover: (89 to: 98)
			declaredAt: (26 to: 35)) ] valueCoveringAll:
		{51 to: 87}.! !
!Behavior method!
initialize
	(headingField _ '' coverAll:
		{31 to: 32})
		cover: (14 to: 25)
		declaredAt: (14 to: 25).
	(positionField _ '' coverAll:
		{54 to: 55})
		cover: (36 to: 48)
		declaredAt: (36 to: 48).! !
!Behavior method!
show
	^ [
	([
	([
	(positionField
		cover: (10 to: 22)
		declaredAt: (10 to: 22)) ,
		(' ' coverAll:
			{24 to: 26}) ] valueCoveringAll:
		{23 to: 23}) ,
		(headingField
			cover: (28 to: 39)
			declaredAt: (28 to: 39)) ] valueCoveringAll:
		{27 to: 27}) withBlanksTrimmed ] valueCoveringAll:
		{42 to: 58}.! !

!testRun: #MarsRoverWindowTest #test01ShowsNothingWhenRoverDoesNotMove stamp: 'fm 6/1/2022 20:28:58'!
PASSED!
!Behavior method!
updatePosition: aPosition
	(positionField _ [
	(aPosition
		cover: (46 to: 54)
		declaredAt: (17 to: 25)) asString ] valueCoveringAll:
		{56 to: 63})
		cover: (29 to: 41)
		declaredAt: (29 to: 41).! !

!testRun: #MarsRoverWindowTest #test02ShowsNewPositionWhenRoverMoves stamp: 'fm 6/1/2022 20:28:58'!
PASSED!
!Behavior method!
followHeadingChangesOn: aMarsRover
	^ [
	([
	(self coverAll:
		{41 to: 44}) new ] valueCoveringAll:
		{46 to: 48}) initializeFollowingHeadingChangesOn:
		(aMarsRover
			cover: (87 to: 96)
			declaredAt: (25 to: 34)) ] valueCoveringAll:
		{50 to: 85}.! !

!testRun: #MarsRoverWindowTest #test03ShowsNothingWhenRoverDoesNotRotate stamp: 'fm 6/1/2022 20:28:58'!
PASSED!
!Behavior method!
visitMarsRoverHeadingSouth
	(headingField _ 'Apuntando al Sur' coverAll:
		{47 to: 64})
		cover: (31 to: 42)
		declaredAt: (31 to: 42).! !
!Behavior method!
visitMarsRoverHeadingWest
	(headingField _ 'Apuntando al Oeste' coverAll:
		{46 to: 65})
		cover: (30 to: 41)
		declaredAt: (30 to: 41).! !
!Behavior method!
visitMarsRoverHeadingNorth
	(headingField _ 'Apuntando al Norte' coverAll:
		{47 to: 66})
		cover: (31 to: 42)
		declaredAt: (31 to: 42).! !

!testRun: #MarsRoverWindowTest #test04ShowsLastHeadingWhenRoverRotatesManyTimes stamp: 'fm 6/1/2022 20:28:58'!
PASSED!
!Behavior method!
followPositionAndHeadingChangesOn: aMarsRover
	^ [
	([
	(self coverAll:
		{51 to: 54}) new ] valueCoveringAll:
		{56 to: 58}) initializeFollowingPositionAndHeadingChangesOn:
		(aMarsRover
			cover: (108 to: 117)
			declaredAt: (36 to: 45)) ] valueCoveringAll:
		{60 to: 106}.! !
!Behavior method!
visitMarsRoverHeadingEast
	(headingField _ 'Apuntando al Este' coverAll:
		{46 to: 64})
		cover: (30 to: 41)
		declaredAt: (30 to: 41).! !

!testRun: #MarsRoverWindowTest #test05ShowsOnlyUpdatedFieldsAccordingToRoverActions stamp: 'fm 6/1/2022 20:28:58'!
PASSED!

----SNAPSHOT----(1 June 2022 20:30:05) CuisUniversity-5096.image priorSource: 4828532!

----QUIT----(1 June 2022 20:30:16) CuisUniversity-5096.image priorSource: 4898566!

----STARTUP---- (1 June 2022 20:30:22) as C:\Users\Fede\Desktop\cuis\windows64\CuisUniversity-5096.image!


----QUIT----(1 June 2022 20:31:11) CuisUniversity-5096.image priorSource: 4898654!
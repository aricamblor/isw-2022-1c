

----STARTUP---- (16 May 2022 11:51:34) as /mnt/c/Users/Ari/Desktop/Ingenieria/CuisUniversity/MarsRoverTDD/linux64/CuisUniversity-5096.image!


TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!

!classDefinition: #MarsRoverTest category: 'MarsRover-Exercise' stamp: 'AEC 5/16/2022 11:55:37'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!

!classDefinition: #MarsRover category: 'MarsRover-Exercise' stamp: 'AEC 5/16/2022 11:57:16'!
Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!
!MarsRoverTest methodsFor: 'no messages' stamp: 'AEC 5/16/2022 11:57:07'!
test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString

	| rover |
	rover := MarsRover new.
	
	rover process: ''.
	
	self assert: rover position equals: (0@0).
	self assert: rover isHeadingSouth.! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 11:57:20'!
ERROR!
!MarsRover methodsFor: 'usage' stamp: 'AEC 5/16/2022 11:57:35'!
process: aString 
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'usage' stamp: 'AEC 5/16/2022 11:57:44' prior: 50474127!
process: aString ! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 11:57:46'!
ERROR!
!MarsRover methodsFor: 'accesing' stamp: 'AEC 5/16/2022 11:57:57'!
position
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'accesing' stamp: 'AEC 5/16/2022 11:58:02' prior: 50474138!
position
	
	^0@0! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 11:58:04'!
ERROR!
!MarsRover methodsFor: 'accesing' stamp: 'AEC 5/16/2022 11:58:10'!
isHeadingSouth
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'accesing' stamp: 'AEC 5/16/2022 11:58:15' prior: 50474149!
isHeadingSouth
	
	^true! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 11:58:16'!
PASSED!

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 11:58:16'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'AEC 5/16/2022 11:59:24'!
test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth

	| rover |
	rover := MarsRover new.
	
	rover process: 'l'.
	
	self assert: rover position equals: (0@0).
	self assert: rover isHeadingEast! !

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 11:59:28'!
ERROR!
!MarsRover methodsFor: 'accesing' stamp: 'AEC 5/16/2022 12:00:09'!
isHeadingEast
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'accesing' stamp: 'AEC 5/16/2022 12:00:13' prior: 50474178!
isHeadingEast
	
	^true! !

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:00:15'!
PASSED!

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 12:00:15'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:00:15'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'AEC 5/16/2022 12:01:19' prior: 50474165!
test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth

	| rover |
	rover := MarsRover new.
	
	rover process: 'l'.
	
	self assert: rover position equals: (0@0).
	self assert: rover isHeadingEast.
	self deny: rover isHeadingSouth! !

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:01:20'!
FAILURE!

!classDefinition: #MarsRover category: 'MarsRover-Exercise' stamp: 'AEC 5/16/2022 12:03:06'!
Object subclass: #MarsRover
	instanceVariableNames: 'heading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!
!MarsRover methodsFor: 'usage' stamp: 'AEC 5/16/2022 12:03:05' prior: 50474131!
process: aString

	aString notEmpty ifTrue:[ heading := #East ]! !
!MarsRover methodsFor: 'accesing' stamp: 'AEC 5/16/2022 12:03:30' prior: 50474182!
isHeadingEast
	
	^ heading = #East! !
!MarsRover methodsFor: 'accesing' stamp: 'AEC 5/16/2022 12:03:40' prior: 50474153!
isHeadingSouth
	
	^ heading = #South! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 12:04:15'!
FAILURE!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:04:15'!
PASSED!

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 12:04:15'!
FAILURE!
!MarsRover methodsFor: 'nil' stamp: 'AEC 5/16/2022 12:04:36' overrides: 16920235!
initialize

	heading := #South! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 12:04:39'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:04:39'!
PASSED!
!Behavior method!
initialize
	(heading _ #South coverAll:
		{25 to: 30})
		cover: (14 to: 20)
		declaredAt: (14 to: 20).! !
!Behavior method!
process: aString
	[
	([
	(aString
		cover: (20 to: 26)
		declaredAt: (10 to: 16)) notEmpty ] valueCoveringAll:
		{28 to: 35}) ifTrue: [
		(heading _ #East coverAll:
			{57 to: 61})
			cover: (46 to: 52)
			declaredAt: (46 to: 52) ]] valueCoveringAll:
		{37 to: 43}.! !
!Behavior method!
position
	^ [
	(0 coverAll:
		{14 to: 14}) @
		(0 coverAll:
			{15 to: 16}) ] valueCoveringAll:
		{15 to: 15}.! !
!Behavior method!
isHeadingSouth
	^ [
	(heading
		cover: (21 to: 27)
		declaredAt: (21 to: 27)) =
		(#South coverAll:
			{31 to: 36}) ] valueCoveringAll:
		{29 to: 29}.! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 12:05:03'!
PASSED!
!Behavior method!
isHeadingEast
	^ [
	(heading
		cover: (20 to: 26)
		declaredAt: (20 to: 26)) =
		(#East coverAll:
			{30 to: 34}) ] valueCoveringAll:
		{28 to: 28}.! !

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:05:03'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'AEC 5/16/2022 12:06:13'!
test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth

	| rover |
	rover := MarsRover heading: #North.
	
	rover process: 'l'.
	
	self assert: rover position equals: (0@0).
	self assert: rover isHeadingWest! !

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:06:20'!
ERROR!
!MarsRover class methodsFor: 'instance creation' stamp: 'AEC 5/16/2022 12:06:30'!
heading: aSymbol 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeHeading: aSymbol ! !
!MarsRover class methodsFor: 'instance creation' stamp: 'AEC 5/16/2022 12:06:40' prior: 50474311!
heading: aSymbol 
	
	^self new initializeHeading: aSymbol ! !

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:06:42'!
ERROR!

!classDefinition: #MarsRover category: 'MarsRover-Exercise' stamp: 'AEC 5/16/2022 12:06:50'!
Object subclass: #MarsRover
	instanceVariableNames: 'heading symbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!
!MarsRover methodsFor: 'initialization' stamp: 'AEC 5/16/2022 12:06:50'!
initializeHeading: aSymbol 
	self shouldBeImplemented.
	symbol := aSymbol.! !
!MarsRover methodsFor: 'initialization' stamp: 'AEC 5/16/2022 12:06:56' prior: 50474335!
initializeHeading: aSymbol 
	
	heading := aSymbol.! !

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:06:58'!
ERROR!
!MarsRover methodsFor: 'accesing' stamp: 'AEC 5/16/2022 12:07:04'!
isHeadingWest
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'accesing' stamp: 'AEC 5/16/2022 12:07:11' prior: 50474349!
isHeadingWest
	
	^true! !

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:07:12'!
PASSED!

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 12:07:12'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:07:12'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:07:12'!
PASSED!

!methodRemoval: MarsRover #initialize stamp: 'AEC 5/16/2022 12:07:33'!
initialize

	heading := #South!

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 12:07:46'!
FAILURE!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:07:46'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:07:46'!
PASSED!

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 12:07:46'!
FAILURE!
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 12:07:57' prior: 50474114!
test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString

	| rover |
	rover := MarsRover heading: #South.
	
	rover process: ''.
	
	self assert: rover position equals: (0@0).
	self assert: rover isHeadingSouth.! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 12:08:04' prior: 50474199!
test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth

	| rover |
	rover := MarsRover heading: #South.
	
	rover process: 'l'.
	
	self assert: rover position equals: (0@0).
	self assert: rover isHeadingEast.
	self deny: rover isHeadingSouth! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 12:08:08'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:08:08'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:08:08'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 12:08:43' prior: 50474297!
test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth

	| rover |
	rover := MarsRover heading: #North.
	
	rover process: 'l'.
	
	self assert: rover position equals: (0@0).
	self assert: rover isHeadingWest.
	self deny: rover isHeadingNorth! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 12:08:57' prior: 50474426!
test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth

	| rover |
	rover := MarsRover heading: #North.
	
	rover process: 'l'.
	
	self assert: rover position equals: (0@0).
	self deny: rover isHeadingNorth.
	self assert: rover isHeadingWest! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 12:09:04' prior: 50474403!
test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth

	| rover |
	rover := MarsRover heading: #South.
	
	rover process: 'l'.
	
	self assert: rover position equals: (0@0).
	self deny: rover isHeadingSouth.
	self assert: rover isHeadingEast! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 12:09:15'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:09:15'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:09:15'!
ERROR!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:09:15'!
ERROR!
!MarsRover methodsFor: 'accesing' stamp: 'AEC 5/16/2022 12:09:20'!
isHeadingNorth
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'accesing' stamp: 'AEC 5/16/2022 12:09:26' prior: 50474475!
isHeadingNorth
	
	^false! !

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:09:27'!
PASSED!

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 12:09:29'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:09:29'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:09:29'!
PASSED!
!Behavior method!
heading: aSymbol
	^ [
	([
	(self coverAll:
		{23 to: 26}) new ] valueCoveringAll:
		{28 to: 30}) initializeHeading:
		(aSymbol
			cover: (51 to: 57)
			declaredAt: (10 to: 16)) ] valueCoveringAll:
		{32 to: 49}.! !
!Behavior method!
initializeHeading: aSymbol
	(heading _ aSymbol
		cover: (43 to: 49)
		declaredAt: (20 to: 26))
		cover: (32 to: 38)
		declaredAt: (32 to: 38).! !
!Behavior method!
process: aString
	[
	([
	(aString
		cover: (20 to: 26)
		declaredAt: (10 to: 16)) notEmpty ] valueCoveringAll:
		{28 to: 35}) ifTrue: [
		(heading _ #East coverAll:
			{57 to: 61})
			cover: (46 to: 52)
			declaredAt: (46 to: 52) ]] valueCoveringAll:
		{37 to: 43}.! !
!Behavior method!
position
	^ [
	(0 coverAll:
		{14 to: 14}) @
		(0 coverAll:
			{15 to: 16}) ] valueCoveringAll:
		{15 to: 15}.! !
!Behavior method!
isHeadingSouth
	^ [
	(heading
		cover: (21 to: 27)
		declaredAt: (21 to: 27)) =
		(#South coverAll:
			{31 to: 36}) ] valueCoveringAll:
		{29 to: 29}.! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 12:09:31'!
PASSED!
!Behavior method!
isHeadingEast
	^ [
	(heading
		cover: (20 to: 26)
		declaredAt: (20 to: 26)) =
		(#East coverAll:
			{30 to: 34}) ] valueCoveringAll:
		{28 to: 28}.! !

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:09:31'!
PASSED!
!Behavior method!
isHeadingNorth
	^ false coverAll:
		{20 to: 24}.! !
!Behavior method!
isHeadingWest
	^ true coverAll:
		{19 to: 22}.! !

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:09:31'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 12:10:13'!
test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast

	| rover |
	rover := MarsRover heading: #East.
	
	rover process: 'l'.
	
	self assert: rover position equals: (0@0).
	self deny: rover isHeadingEast.
	self assert: rover isHeadingNorth! !

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 12:10:15'!
FAILURE!
!MarsRover methodsFor: 'accesing' stamp: 'AEC 5/16/2022 12:11:15' prior: 50474479!
isHeadingNorth
	
	^heading = #North! !
!MarsRover methodsFor: 'accesing' stamp: 'AEC 5/16/2022 12:11:26' prior: 50474353!
isHeadingWest
	
	^heading = #West! !
!MarsRover methodsFor: 'usage' stamp: 'AEC 5/16/2022 12:12:34' prior: 50474221!
process: aString

	aString notEmpty ifTrue:[ 
		heading = #South ifTrue:[ heading := #East ].
		heading = #North ifTrue:[ heading := #West ].
		heading = #East ifTrue:[ heading := #North ]
	]! !
!MarsRover methodsFor: 'usage' stamp: 'AEC 5/16/2022 12:12:55' prior: 50474579!
process: aString

	aString notEmpty ifTrue:[ 
		heading = #South ifTrue:[ ^heading := #East ].
		heading = #North ifTrue:[ ^heading := #West ].
		heading = #East ifTrue:[ ^heading := #North ]
	]! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 12:12:58'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:12:58'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:12:58'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 12:12:58'!
PASSED!
!Behavior method!
heading: aSymbol
	^ [
	([
	(self coverAll:
		{23 to: 26}) new ] valueCoveringAll:
		{28 to: 30}) initializeHeading:
		(aSymbol
			cover: (51 to: 57)
			declaredAt: (10 to: 16)) ] valueCoveringAll:
		{32 to: 49}.! !
!Behavior method!
initializeHeading: aSymbol
	(heading _ aSymbol
		cover: (43 to: 49)
		declaredAt: (20 to: 26))
		cover: (32 to: 38)
		declaredAt: (32 to: 38).! !
!Behavior method!
process: aString
	[
	([
	(aString
		cover: (20 to: 26)
		declaredAt: (10 to: 16)) notEmpty ] valueCoveringAll:
		{28 to: 35}) ifTrue: [
		[
		([
		(heading
			cover: (49 to: 55)
			declaredAt: (49 to: 55)) =
			(#South coverAll:
				{59 to: 64}) ] valueCoveringAll:
			{57 to: 57}) ifTrue: [ ^ (heading _ #East coverAll:
				{87 to: 91})
				cover: (76 to: 82)
				declaredAt: (49 to: 55) ]] valueCoveringAll:
			{66 to: 72}.
		[
		([
		(heading
			cover: (98 to: 104)
			declaredAt: (49 to: 55)) =
			(#North coverAll:
				{108 to: 113}) ] valueCoveringAll:
			{106 to: 106}) ifTrue: [ ^ (heading _ #West coverAll:
				{136 to: 140})
				cover: (125 to: 131)
				declaredAt: (49 to: 55) ]] valueCoveringAll:
			{115 to: 121}.
		[
		([
		(heading
			cover: (147 to: 153)
			declaredAt: (49 to: 55)) =
			(#East coverAll:
				{157 to: 161}) ] valueCoveringAll:
			{155 to: 155}) ifTrue: [ ^ (heading _ #North coverAll:
				{184 to: 189})
				cover: (173 to: 179)
				declaredAt: (49 to: 55) ]] valueCoveringAll:
			{163 to: 169} ]] valueCoveringAll:
		{37 to: 43}.! !
!Behavior method!
position
	^ [
	(0 coverAll:
		{14 to: 14}) @
		(0 coverAll:
			{15 to: 16}) ] valueCoveringAll:
		{15 to: 15}.! !
!Behavior method!
isHeadingSouth
	^ [
	(heading
		cover: (21 to: 27)
		declaredAt: (21 to: 27)) =
		(#South coverAll:
			{31 to: 36}) ] valueCoveringAll:
		{29 to: 29}.! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 12:13:11'!
PASSED!
!Behavior method!
isHeadingEast
	^ [
	(heading
		cover: (20 to: 26)
		declaredAt: (20 to: 26)) =
		(#East coverAll:
			{30 to: 34}) ] valueCoveringAll:
		{28 to: 28}.! !

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:13:11'!
PASSED!
!Behavior method!
isHeadingNorth
	^ [
	(heading
		cover: (20 to: 26)
		declaredAt: (20 to: 26)) =
		(#North coverAll:
			{30 to: 35}) ] valueCoveringAll:
		{28 to: 28}.! !
!Behavior method!
isHeadingWest
	^ [
	(heading
		cover: (19 to: 25)
		declaredAt: (19 to: 25)) =
		(#West coverAll:
			{29 to: 33}) ] valueCoveringAll:
		{27 to: 27}.! !

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:13:11'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 12:13:11'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 12:14:20'!
test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest

	| rover |
	rover := MarsRover heading: #West.
	
	rover process: 'l'.
	
	self assert: rover position equals: (0@0).
	self deny: rover isHeadingWest.
	self assert: rover isHeadingSouth! !

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 12:14:21'!
FAILURE!
!MarsRover methodsFor: 'usage' stamp: 'AEC 5/16/2022 12:15:11' prior: 50474588!
process: aString

	aString notEmpty ifTrue:[ 
		heading = #South ifTrue:[ ^heading := #East ].
		heading = #North ifTrue:[ ^heading := #West ].
		heading = #East ifTrue:[ ^heading := #North ].
		heading := #South
	]! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 12:15:14'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:15:14'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:15:14'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 12:15:14'!
PASSED!

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 12:15:14'!
PASSED!

Object subclass: #Direction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!

!classDefinition: #Direction category: 'MarsRover-Exercise' stamp: 'AEC 5/16/2022 12:19:37'!
Object subclass: #Direction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!

Direction subclass: #North
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!

!classDefinition: #North category: 'MarsRover-Exercise' stamp: 'AEC 5/16/2022 12:19:45'!
Direction subclass: #North
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!

Direction subclass: #South
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!

!classDefinition: #South category: 'MarsRover-Exercise' stamp: 'AEC 5/16/2022 12:19:48'!
Direction subclass: #South
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!

Direction subclass: #East
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!

!classDefinition: #East category: 'MarsRover-Exercise' stamp: 'AEC 5/16/2022 12:19:51'!
Direction subclass: #East
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!

Direction subclass: #West
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!

!classDefinition: #West category: 'MarsRover-Exercise' stamp: 'AEC 5/16/2022 12:19:53'!
Direction subclass: #West
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!
!Direction methodsFor: 'no messages' stamp: 'AEC 5/16/2022 12:20:14'!
rotateLeft

	^self subclassResponsibility ! !
!Direction methodsFor: 'as yet unclassified' stamp: 'AEC 5/16/2022 12:20:32' overrides: 16903326!
is: aSymbol

	^self class name = aSymbol ! !
!East methodsFor: 'no messages' stamp: 'AEC 5/16/2022 12:20:58' overrides: 50474808!
rotateLeft

	^North new! !
!North methodsFor: 'no messages' stamp: 'AEC 5/16/2022 12:21:10' overrides: 50474808!
rotateLeft

	^West new! !
!South methodsFor: 'no messages' stamp: 'AEC 5/16/2022 12:21:19' overrides: 50474808!
rotateLeft

	^East new! !
!West methodsFor: 'no messages' stamp: 'AEC 5/16/2022 12:21:26' overrides: 50474808!
rotateLeft

	^South new! !
!MarsRover methodsFor: 'usage' stamp: 'AEC 5/16/2022 12:21:51' prior: 50474722!
process: aString

	aString notEmpty ifTrue:[ self rotateLeft ]! !
!MarsRover methodsFor: 'nil' stamp: 'AEC 5/16/2022 12:22:10'!
rotateLeft

	^ heading := heading rotateLeft! !
!MarsRover methodsFor: 'accesing' stamp: 'AEC 5/16/2022 12:22:24' prior: 50474226!
isHeadingEast
	
	^ heading is: #East! !
!MarsRover methodsFor: 'accesing' stamp: 'AEC 5/16/2022 12:22:33' prior: 50474571!
isHeadingNorth
	
	^heading is: #North! !
!MarsRover methodsFor: 'accesing' stamp: 'AEC 5/16/2022 12:22:39' prior: 50474230!
isHeadingSouth
	
	^ heading is: #South! !
!MarsRover methodsFor: 'accesing' stamp: 'AEC 5/16/2022 12:22:46' prior: 50474575!
isHeadingWest
	
	^heading is: #West! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 12:22:55'!
FAILURE!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:22:55'!
ERROR!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:22:55'!
ERROR!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 12:22:55'!
ERROR!

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 12:22:55'!
ERROR!
!MarsRover class methodsFor: 'instance creation' stamp: 'AEC 5/16/2022 12:23:18' prior: 50474319!
heading: aDirection
	
	^self new initializeHeading: aDirection! !
!MarsRover methodsFor: 'initialization' stamp: 'AEC 5/16/2022 12:23:30' prior: 50474341!
initializeHeading: aDirection
	
	heading := aDirection.! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 12:23:47' prior: 50474393!
test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString

	| rover |
	rover := MarsRover heading: South new.
	
	rover process: ''.
	
	self assert: rover position equals: (0@0).
	self assert: rover isHeadingSouth.! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 12:23:55' prior: 50474448!
test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth

	| rover |
	rover := MarsRover heading: South new.
	
	rover process: 'l'.
	
	self assert: rover position equals: (0@0).
	self deny: rover isHeadingSouth.
	self assert: rover isHeadingEast! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 12:24:00' prior: 50474437!
test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth

	| rover |
	rover := MarsRover heading: North new.
	
	rover process: 'l'.
	
	self assert: rover position equals: (0@0).
	self deny: rover isHeadingNorth.
	self assert: rover isHeadingWest! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 12:24:04' prior: 50474556!
test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast

	| rover |
	rover := MarsRover heading: East new.
	
	rover process: 'l'.
	
	self assert: rover position equals: (0@0).
	self deny: rover isHeadingEast.
	self assert: rover isHeadingNorth! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 12:24:09' prior: 50474707!
test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest

	| rover |
	rover := MarsRover heading: West new.
	
	rover process: 'l'.
	
	self assert: rover position equals: (0@0).
	self deny: rover isHeadingWest.
	self assert: rover isHeadingSouth! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 12:24:12'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:24:12'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:24:12'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 12:24:12'!
PASSED!

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 12:24:12'!
PASSED!
!Behavior method!
heading: aDirection
	^ [
	([
	(self coverAll:
		{25 to: 28}) new ] valueCoveringAll:
		{30 to: 32}) initializeHeading:
		(aDirection
			cover: (53 to: 62)
			declaredAt: (10 to: 19)) ] valueCoveringAll:
		{34 to: 51}.! !
!Behavior method!
initializeHeading: aDirection
	(heading _ aDirection
		cover: (45 to: 54)
		declaredAt: (20 to: 29))
		cover: (34 to: 40)
		declaredAt: (34 to: 40).! !
!Behavior method!
process: aString
	[
	([
	(aString
		cover: (20 to: 26)
		declaredAt: (10 to: 16)) notEmpty ] valueCoveringAll:
		{28 to: 35}) ifTrue: [
		[
		(self coverAll:
			{46 to: 49}) rotateLeft ] valueCoveringAll:
			{51 to: 60} ]] valueCoveringAll:
		{37 to: 43}.! !
!Behavior method!
position
	^ [
	(0 coverAll:
		{14 to: 14}) @
		(0 coverAll:
			{15 to: 16}) ] valueCoveringAll:
		{15 to: 15}.! !
!Behavior method!
isHeadingSouth
	^ [
	(heading
		cover: (21 to: 27)
		declaredAt: (21 to: 27)) is:
		(#South coverAll:
			{33 to: 38}) ] valueCoveringAll:
		{29 to: 31}.! !
!Behavior method!
is: aSymbol
	^ [
	([
	([
	(self coverAll:
		{16 to: 19}) class ] valueCoveringAll:
		{21 to: 25}) name ] valueCoveringAll:
		{27 to: 30}) =
		(aSymbol
			cover: (34 to: 40)
			declaredAt: (5 to: 11)) ] valueCoveringAll:
		{32 to: 32}.! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 12:24:21'!
PASSED!
!Behavior method!
rotateLeft
	^ (heading _ [
	(heading
		cover: (16 to: 22)
		declaredAt: (16 to: 22)) rotateLeft ] valueCoveringAll:
		{35 to: 44})
		cover: (27 to: 33)
		declaredAt: (16 to: 22).! !
!Behavior method!
rotateLeft
	^ [
	(East
		cover: (15 to: 18)
		declaredAt: (15 to: 18)) new ] valueCoveringAll:
		{20 to: 22}.! !
!Behavior method!
isHeadingEast
	^ [
	(heading
		cover: (20 to: 26)
		declaredAt: (20 to: 26)) is:
		(#East coverAll:
			{32 to: 36}) ] valueCoveringAll:
		{28 to: 30}.! !

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:24:21'!
PASSED!
!Behavior method!
rotateLeft
	^ [
	(West
		cover: (15 to: 18)
		declaredAt: (15 to: 18)) new ] valueCoveringAll:
		{20 to: 22}.! !
!Behavior method!
isHeadingNorth
	^ [
	(heading
		cover: (20 to: 26)
		declaredAt: (20 to: 26)) is:
		(#North coverAll:
			{32 to: 37}) ] valueCoveringAll:
		{28 to: 30}.! !
!Behavior method!
isHeadingWest
	^ [
	(heading
		cover: (19 to: 25)
		declaredAt: (19 to: 25)) is:
		(#West coverAll:
			{31 to: 35}) ] valueCoveringAll:
		{27 to: 29}.! !

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:24:21'!
PASSED!
!Behavior method!
rotateLeft
	^ [
	(North
		cover: (15 to: 19)
		declaredAt: (15 to: 19)) new ] valueCoveringAll:
		{21 to: 23}.! !

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 12:24:21'!
PASSED!
!Behavior method!
rotateLeft
	^ [
	(South
		cover: (15 to: 19)
		declaredAt: (15 to: 19)) new ] valueCoveringAll:
		{21 to: 23}.! !

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 12:24:21'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 12:26:56'!
test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth

	| rover |
	rover := MarsRover heading: South new.
	
	rover process: 'r'.
	
	self assert: rover position equals: (0@0).
	self deny: rover isHeadingSouth.
	self assert: rover isHeadingWest! !

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:29:29'!
FAILURE!
!MarsRover methodsFor: 'usage' stamp: 'AEC 5/16/2022 12:30:56' prior: 50474834!
process: aString

	aString notEmpty ifTrue:[ 
		aString = 'l' ifTrue: [ self rotateLeft ].
		heading := West new
	]! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 12:31:00'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:31:00'!
FAILURE!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:31:00'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 12:31:00'!
FAILURE!

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 12:31:00'!
FAILURE!

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:31:00'!
PASSED!
!MarsRover methodsFor: 'usage' stamp: 'AEC 5/16/2022 12:31:14' prior: 50475087!
process: aString

	aString notEmpty ifTrue:[ 
		aString = 'l' ifTrue: [ ^self rotateLeft ].
		heading := West new
	]! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 12:31:17'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:31:17'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:31:17'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 12:31:17'!
PASSED!

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 12:31:17'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:31:17'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 12:31:58'!
test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth

	| rover |
	rover := MarsRover heading: North new.
	
	rover process: 'r'.
	
	self assert: rover position equals: (0@0).
	self deny: rover isHeadingNorth.
	self assert: rover isHeadingEast! !

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:32:45'!
FAILURE!
!MarsRover methodsFor: 'usage' stamp: 'AEC 5/16/2022 12:33:08' prior: 50475119!
process: aString

	aString notEmpty ifTrue:[ 
		aString = 'l' ifTrue: [ ^self rotateLeft ].
		heading rotateRight
	]! !
!Direction methodsFor: 'rotation' stamp: 'AEC 5/16/2022 12:33:18'!
rotateRight

	^self subclassResponsibility ! !
!South methodsFor: 'rotation' stamp: 'AEC 5/16/2022 12:33:46' overrides: 50475171!
rotateRight

	^West new! !
!North methodsFor: 'rotation' stamp: 'AEC 5/16/2022 12:34:06' overrides: 50475171!
rotateRight

	^East new! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 12:34:14'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:34:14'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:34:14'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 12:34:14'!
PASSED!

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 12:34:14'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:34:14'!
FAILURE!

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:34:14'!
FAILURE!
!MarsRover methodsFor: 'usage' stamp: 'AEC 5/16/2022 12:34:34' prior: 50475165!
process: aString

	aString notEmpty ifTrue:[ 
		aString = 'l' ifTrue: [ ^self rotateLeft ].
		heading := heading rotateRight
	]! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 12:34:39'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:34:39'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:34:39'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 12:34:39'!
PASSED!

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 12:34:39'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:34:39'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:34:39'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 12:35:17'!
test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast

	| rover |
	rover := MarsRover heading: East new.
	
	rover process: 'r'.
	
	self assert: rover position equals: (0@0).
	self deny: rover isHeadingEast.
	self assert: rover isHeadingSouth! !

!testRun: #MarsRoverTest #test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast stamp: 'AEC 5/16/2022 12:35:20'!
ERROR!
!East methodsFor: 'rotation' stamp: 'AEC 5/16/2022 12:35:37' overrides: 50475171!
rotateRight

	^South new! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 12:35:43'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:35:43'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:35:43'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 12:35:43'!
PASSED!

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 12:35:43'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:35:43'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:35:43'!
PASSED!

!testRun: #MarsRoverTest #test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast stamp: 'AEC 5/16/2022 12:35:43'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 12:36:54'!
test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest

	| rover |
	rover := MarsRover heading: West new.
	
	rover process: 'r'.
	
	self assert: rover position equals: (0@0).
	self deny: rover isHeadingWest.
	self assert: rover isHeadingNorth! !

!testRun: #MarsRoverTest #test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest stamp: 'AEC 5/16/2022 12:37:12'!
ERROR!
!West methodsFor: 'rotation' stamp: 'AEC 5/16/2022 12:37:28' overrides: 50475171!
rotateRight

	^North new! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 12:37:31'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:37:31'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:37:31'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 12:37:31'!
PASSED!

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 12:37:31'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:37:31'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:37:31'!
PASSED!

!testRun: #MarsRoverTest #test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast stamp: 'AEC 5/16/2022 12:37:31'!
PASSED!

!testRun: #MarsRoverTest #test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest stamp: 'AEC 5/16/2022 12:37:31'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 12:38:03'!
test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth

	| rover |
	rover := MarsRover heading: South new.
	
	rover process: 'f'.
	
	self assert: rover position equals: (0@-1).! !

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:38:23'!
FAILURE!

!classDefinition: #MarsRover category: 'MarsRover-Exercise' stamp: 'AEC 5/16/2022 12:39:15'!
Object subclass: #MarsRover
	instanceVariableNames: 'heading symbol position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!
!MarsRover methodsFor: 'usage' stamp: 'AEC 5/16/2022 12:39:14' prior: 50475213!
process: aString

	aString notEmpty ifTrue:[ 
		aString = 'l' ifTrue: [ ^self rotateLeft ].
		aString = 'r' ifTrue: [ ^heading := heading rotateRight ].
		position := 0@-1
	]! !
!MarsRover methodsFor: 'accesing' stamp: 'AEC 5/16/2022 12:39:44' prior: 50474142!
position
	
	^position! !
!MarsRover methodsFor: 'initialization' stamp: 'AEC 5/16/2022 12:40:33'!
initializeHeading: aDirection at: aPosition
	
	heading := aDirection.
	position := aPosition! !

!methodRemoval: MarsRover #initializeHeading: stamp: 'AEC 5/16/2022 12:40:42'!
initializeHeading: aDirection
	
	heading := aDirection.!
!MarsRover class methodsFor: 'instance creation' stamp: 'AEC 5/16/2022 12:40:50' prior: 50474880!
heading: aDirection
	
	^self new initializeHeading: aDirection at: 0@0! !
!MarsRover class methodsFor: 'instance creation' stamp: 'AEC 5/16/2022 12:41:03'!
heading: aDirection at: aPosition
	
	^self new initializeHeading: aDirection at: aPosition! !
!MarsRover class methodsFor: 'instance creation' stamp: 'AEC 5/16/2022 12:41:09' prior: 50475402!
heading: aDirection
	
	^self heading: aDirection at: 0@0! !

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:41:23'!
PASSED!

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 12:41:23'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:41:23'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:41:23'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 12:41:23'!
PASSED!

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 12:41:23'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:41:23'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:41:23'!
PASSED!

!testRun: #MarsRoverTest #test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast stamp: 'AEC 5/16/2022 12:41:23'!
PASSED!

!testRun: #MarsRoverTest #test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest stamp: 'AEC 5/16/2022 12:41:23'!
PASSED!

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:41:23'!
PASSED!
!Behavior method!
heading: aDirection
	^ [
	(self coverAll:
		{25 to: 28})
		heading:
			(aDirection
				cover: (39 to: 48)
				declaredAt: (10 to: 19))
		at:
			([
			(0 coverAll:
				{54 to: 54}) @
				(0 coverAll:
					{55 to: 56}) ] valueCoveringAll:
				{55 to: 55}) ] valueCoveringAll:
		{30 to: 37. 50 to: 52}.! !
!Behavior method!
heading: aDirection at: aPosition
	^ [
	([
	(self coverAll:
		{39 to: 42}) new ] valueCoveringAll:
		{44 to: 46})
		initializeHeading:
			(aDirection
				cover: (67 to: 76)
				declaredAt: (10 to: 19))
		at:
			(aPosition
				cover: (82 to: 90)
				declaredAt: (25 to: 33)) ] valueCoveringAll:
		{48 to: 65. 78 to: 80}.! !
!Behavior method!
initializeHeading: aDirection at: aPosition
	(heading _ aDirection
		cover: (59 to: 68)
		declaredAt: (20 to: 29))
		cover: (48 to: 54)
		declaredAt: (48 to: 54).
	(position _ aPosition
		cover: (84 to: 92)
		declaredAt: (35 to: 43))
		cover: (72 to: 79)
		declaredAt: (72 to: 79).! !
!Behavior method!
process: aString
	[
	([
	(aString
		cover: (20 to: 26)
		declaredAt: (10 to: 16)) notEmpty ] valueCoveringAll:
		{28 to: 35}) ifTrue: [
		[
		([
		(aString
			cover: (49 to: 55)
			declaredAt: (10 to: 16)) =
			('l' coverAll:
				{59 to: 61}) ] valueCoveringAll:
			{57 to: 57}) ifTrue: [ ^ [
			(self coverAll:
				{74 to: 77}) rotateLeft ] valueCoveringAll:
				{79 to: 88} ]] valueCoveringAll:
			{63 to: 69}.
		[
		([
		(aString
			cover: (95 to: 101)
			declaredAt: (10 to: 16)) =
			('r' coverAll:
				{105 to: 107}) ] valueCoveringAll:
			{103 to: 103}) ifTrue: [ ^ (heading _ [
			(heading
				cover: (120 to: 126)
				declaredAt: (120 to: 126)) rotateRight ] valueCoveringAll:
				{139 to: 149})
				cover: (131 to: 137)
				declaredAt: (120 to: 126) ]] valueCoveringAll:
			{109 to: 115}.
		(position _ [
		(0 coverAll:
			{168 to: 168}) @
			(-1 coverAll:
				{170 to: 171}) ] valueCoveringAll:
			{169 to: 169})
			cover: (156 to: 163)
			declaredAt: (156 to: 163) ]] valueCoveringAll:
		{37 to: 43}.! !
!Behavior method!
position
	^ position
		cover: (14 to: 21)
		declaredAt: (14 to: 21).! !
!Behavior method!
isHeadingSouth
	^ [
	(heading
		cover: (21 to: 27)
		declaredAt: (21 to: 27)) is:
		(#South coverAll:
			{33 to: 38}) ] valueCoveringAll:
		{29 to: 31}.! !
!Behavior method!
is: aSymbol
	^ [
	([
	([
	(self coverAll:
		{16 to: 19}) class ] valueCoveringAll:
		{21 to: 25}) name ] valueCoveringAll:
		{27 to: 30}) =
		(aSymbol
			cover: (34 to: 40)
			declaredAt: (5 to: 11)) ] valueCoveringAll:
		{32 to: 32}.! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 12:41:48'!
PASSED!
!Behavior method!
rotateLeft
	^ (heading _ [
	(heading
		cover: (16 to: 22)
		declaredAt: (16 to: 22)) rotateLeft ] valueCoveringAll:
		{35 to: 44})
		cover: (27 to: 33)
		declaredAt: (16 to: 22).! !
!Behavior method!
rotateLeft
	^ [
	(East
		cover: (15 to: 18)
		declaredAt: (15 to: 18)) new ] valueCoveringAll:
		{20 to: 22}.! !
!Behavior method!
isHeadingEast
	^ [
	(heading
		cover: (20 to: 26)
		declaredAt: (20 to: 26)) is:
		(#East coverAll:
			{32 to: 36}) ] valueCoveringAll:
		{28 to: 30}.! !

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:41:48'!
PASSED!
!Behavior method!
rotateLeft
	^ [
	(West
		cover: (15 to: 18)
		declaredAt: (15 to: 18)) new ] valueCoveringAll:
		{20 to: 22}.! !
!Behavior method!
isHeadingNorth
	^ [
	(heading
		cover: (20 to: 26)
		declaredAt: (20 to: 26)) is:
		(#North coverAll:
			{32 to: 37}) ] valueCoveringAll:
		{28 to: 30}.! !
!Behavior method!
isHeadingWest
	^ [
	(heading
		cover: (19 to: 25)
		declaredAt: (19 to: 25)) is:
		(#West coverAll:
			{31 to: 35}) ] valueCoveringAll:
		{27 to: 29}.! !

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:41:48'!
PASSED!
!Behavior method!
rotateLeft
	^ [
	(North
		cover: (15 to: 19)
		declaredAt: (15 to: 19)) new ] valueCoveringAll:
		{21 to: 23}.! !

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 12:41:48'!
PASSED!
!Behavior method!
rotateLeft
	^ [
	(South
		cover: (15 to: 19)
		declaredAt: (15 to: 19)) new ] valueCoveringAll:
		{21 to: 23}.! !

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 12:41:48'!
PASSED!
!Behavior method!
rotateRight
	^ [
	(West
		cover: (16 to: 19)
		declaredAt: (16 to: 19)) new ] valueCoveringAll:
		{21 to: 23}.! !

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:41:48'!
PASSED!
!Behavior method!
rotateRight
	^ [
	(East
		cover: (16 to: 19)
		declaredAt: (16 to: 19)) new ] valueCoveringAll:
		{21 to: 23}.! !

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:41:48'!
PASSED!
!Behavior method!
rotateRight
	^ [
	(South
		cover: (16 to: 20)
		declaredAt: (16 to: 20)) new ] valueCoveringAll:
		{22 to: 24}.! !

!testRun: #MarsRoverTest #test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast stamp: 'AEC 5/16/2022 12:41:48'!
PASSED!
!Behavior method!
rotateRight
	^ [
	(North
		cover: (16 to: 20)
		declaredAt: (16 to: 20)) new ] valueCoveringAll:
		{22 to: 24}.! !

!testRun: #MarsRoverTest #test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest stamp: 'AEC 5/16/2022 12:41:48'!
PASSED!

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:41:48'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 12:42:11'!
test11RoverAdvancesOneStepNorthWhenReceivesForwardAndIsHeadingNorth

	| rover |
	rover := MarsRover heading: North new.
	
	rover process: 'f'.
	
	self assert: rover position equals: (0@1).! !

!testRun: #MarsRoverTest #test11RoverAdvancesOneStepNorthWhenReceivesForwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:42:12'!
FAILURE!
!MarsRover methodsFor: 'usage' stamp: 'AEC 5/16/2022 12:43:05' prior: 50475378!
process: aString

	aString notEmpty ifTrue:[ 
		aString = 'l' ifTrue: [ ^self rotateLeft ].
		aString = 'r' ifTrue: [ ^heading := heading rotateRight ].
		self isHeadingSouth isTrue:[ position := 0@-1 ].
		self isHeadingNorth isTrue:[ position := 0@1 ].
	]! !
!MarsRover methodsFor: 'usage' stamp: 'AEC 5/16/2022 12:43:07' prior: 50475665!
process: aString

	aString notEmpty ifTrue:[ 
		aString = 'l' ifTrue: [ ^self rotateLeft ].
		aString = 'r' ifTrue: [ ^heading := heading rotateRight ].
		self isHeadingSouth isTrue:[ position := 0@-1 ].
		self isHeadingNorth isTrue:[ position := 0@1 ]
	]! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 12:43:18'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:43:18'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:43:18'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 12:43:18'!
PASSED!

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 12:43:18'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:43:18'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:43:18'!
PASSED!

!testRun: #MarsRoverTest #test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast stamp: 'AEC 5/16/2022 12:43:18'!
PASSED!

!testRun: #MarsRoverTest #test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest stamp: 'AEC 5/16/2022 12:43:19'!
PASSED!

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:43:19'!
ERROR!

!testRun: #MarsRoverTest #test11RoverAdvancesOneStepNorthWhenReceivesForwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:43:19'!
ERROR!
!MarsRover methodsFor: 'usage' stamp: 'AEC 5/16/2022 12:43:30' prior: 50475676!
process: aString

	aString notEmpty ifTrue:[ 
		aString = 'l' ifTrue: [ ^self rotateLeft ].
		aString = 'r' ifTrue: [ ^heading := heading rotateRight ].
		self isHeadingSouth isTrue:[ ^position := 0@-1 ].
		self isHeadingNorth isTrue:[ ^position := 0@1 ]
	]! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 12:43:32'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:43:32'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:43:32'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 12:43:32'!
PASSED!

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 12:43:32'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:43:32'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:43:32'!
PASSED!

!testRun: #MarsRoverTest #test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast stamp: 'AEC 5/16/2022 12:43:32'!
PASSED!

!testRun: #MarsRoverTest #test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest stamp: 'AEC 5/16/2022 12:43:32'!
PASSED!

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:43:32'!
ERROR!

!testRun: #MarsRoverTest #test11RoverAdvancesOneStepNorthWhenReceivesForwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:43:32'!
ERROR!

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:43:50'!
ERROR!

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:43:50'!
ERROR!
!MarsRover methodsFor: 'usage' stamp: 'AEC 5/16/2022 12:44:05' prior: 50475733!
process: aString

	aString notEmpty ifTrue:[ 
		aString = 'l' ifTrue: [ ^self rotateLeft ].
		aString = 'r' ifTrue: [ ^heading := heading rotateRight ].
		self isHeadingSouth ifTrue:[ ^position := 0@-1 ].
		self isHeadingNorth ifTrue:[ ^position := 0@1 ]
	]! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 12:44:05'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:44:05'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:44:05'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 12:44:05'!
PASSED!

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 12:44:05'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:44:05'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:44:05'!
PASSED!

!testRun: #MarsRoverTest #test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast stamp: 'AEC 5/16/2022 12:44:05'!
PASSED!

!testRun: #MarsRoverTest #test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest stamp: 'AEC 5/16/2022 12:44:05'!
PASSED!

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:44:05'!
PASSED!

!testRun: #MarsRoverTest #test11RoverAdvancesOneStepNorthWhenReceivesForwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:44:05'!
PASSED!
!MarsRover methodsFor: 'usage' stamp: 'AEC 5/16/2022 12:44:38' prior: 50475798!
process: aString

	aString notEmpty ifTrue:[ 
		aString = 'l' ifTrue: [ ^self rotateLeft ].
		aString = 'r' ifTrue: [ ^self rotateRight ].
		self isHeadingSouth ifTrue:[ ^position := 0@-1 ].
		self isHeadingNorth ifTrue:[ ^position := 0@1 ]
	]! !
!MarsRover methodsFor: 'rotation' stamp: 'AEC 5/16/2022 12:44:47'!
rotateRight

	^ heading := heading rotateRight! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 12:45:16'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:45:16'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:45:16'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 12:45:16'!
PASSED!

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 12:45:16'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:45:16'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:45:16'!
PASSED!

!testRun: #MarsRoverTest #test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast stamp: 'AEC 5/16/2022 12:45:16'!
PASSED!

!testRun: #MarsRoverTest #test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest stamp: 'AEC 5/16/2022 12:45:16'!
PASSED!

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:45:16'!
PASSED!

!testRun: #MarsRoverTest #test11RoverAdvancesOneStepNorthWhenReceivesForwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:45:16'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 12:45:56'!
test12RoverAdvancesOneStepEastWhenReceivesForwardAndIsHeadingEast

	| rover |
	rover := MarsRover heading: East new.
	
	rover process: 'f'.
	
	self assert: rover position equals: (1@0).! !

!testRun: #MarsRoverTest #test12RoverAdvancesOneStepEastWhenReceivesForwardAndIsHeadingEast stamp: 'AEC 5/16/2022 12:45:57'!
FAILURE!
!MarsRover methodsFor: 'command-process' stamp: 'AEC 5/16/2022 12:46:23' prior: 50475855!
process: aString

	aString notEmpty ifTrue:[ 
		aString = 'l' ifTrue: [ ^self rotateLeft ].
		aString = 'r' ifTrue: [ ^self rotateRight ].
		self isHeadingSouth ifTrue:[ ^position := 0@-1 ].
		self isHeadingNorth ifTrue:[ ^position := 0@1 ].
		self isHeadingEast ifTrue:[ ^position := 1@0 ]
	]! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 12:46:24'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:46:24'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:46:24'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 12:46:24'!
PASSED!

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 12:46:24'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:46:24'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:46:24'!
PASSED!

!testRun: #MarsRoverTest #test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast stamp: 'AEC 5/16/2022 12:46:24'!
PASSED!

!testRun: #MarsRoverTest #test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest stamp: 'AEC 5/16/2022 12:46:24'!
PASSED!

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:46:24'!
PASSED!

!testRun: #MarsRoverTest #test11RoverAdvancesOneStepNorthWhenReceivesForwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:46:24'!
PASSED!

!testRun: #MarsRoverTest #test12RoverAdvancesOneStepEastWhenReceivesForwardAndIsHeadingEast stamp: 'AEC 5/16/2022 12:46:24'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 12:47:55'!
test13RoverAdvancesOneStepWestWhenReceivesForwardAndIsHeadingWest

	| rover |
	rover := MarsRover heading: West new.
	
	rover process: 'f'.
	
	self assert: rover position equals: (-1@0).! !

!testRun: #MarsRoverTest #test13RoverAdvancesOneStepWestWhenReceivesForwardAndIsHeadingWest stamp: 'AEC 5/16/2022 12:47:57'!
FAILURE!
!MarsRover methodsFor: 'command-process' stamp: 'AEC 5/16/2022 12:48:13' prior: 50475928!
process: aString

	aString notEmpty ifTrue:[ 
		aString = 'l' ifTrue: [ ^self rotateLeft ].
		aString = 'r' ifTrue: [ ^self rotateRight ].
		self isHeadingSouth ifTrue:[ ^position := 0@-1 ].
		self isHeadingNorth ifTrue:[ ^position := 0@1 ].
		self isHeadingEast ifTrue:[ ^position := 1@0 ].
		position := -1@0
	]! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 12:48:16'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:48:16'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:48:16'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 12:48:16'!
PASSED!

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 12:48:16'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:48:16'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:48:16'!
PASSED!

!testRun: #MarsRoverTest #test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast stamp: 'AEC 5/16/2022 12:48:16'!
PASSED!

!testRun: #MarsRoverTest #test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest stamp: 'AEC 5/16/2022 12:48:16'!
PASSED!

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:48:16'!
PASSED!

!testRun: #MarsRoverTest #test11RoverAdvancesOneStepNorthWhenReceivesForwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:48:16'!
PASSED!

!testRun: #MarsRoverTest #test12RoverAdvancesOneStepEastWhenReceivesForwardAndIsHeadingEast stamp: 'AEC 5/16/2022 12:48:16'!
PASSED!

!testRun: #MarsRoverTest #test13RoverAdvancesOneStepWestWhenReceivesForwardAndIsHeadingWest stamp: 'AEC 5/16/2022 12:48:16'!
PASSED!
!MarsRover methodsFor: 'command-process' stamp: 'AEC 5/16/2022 12:48:47' prior: 50476003!
process: aString

	aString notEmpty ifTrue:[ 
		aString = 'l' ifTrue: [ ^self rotateLeft ].
		aString = 'r' ifTrue: [ ^self rotateRight ].
		self moveForward
	]! !
!MarsRover methodsFor: 'nil' stamp: 'AEC 5/16/2022 12:49:06'!
moveForward

	self isHeadingSouth ifTrue:[ ^position := 0@-1 ].
	self isHeadingNorth ifTrue:[ ^position := 0@1 ].
	self isHeadingEast ifTrue:[ ^position := 1@0 ].
	position := -1@0! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 12:49:10'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:49:10'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:49:10'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 12:49:10'!
PASSED!

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 12:49:10'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:49:10'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:49:10'!
PASSED!

!testRun: #MarsRoverTest #test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast stamp: 'AEC 5/16/2022 12:49:10'!
PASSED!

!testRun: #MarsRoverTest #test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest stamp: 'AEC 5/16/2022 12:49:10'!
PASSED!

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:49:10'!
PASSED!

!testRun: #MarsRoverTest #test11RoverAdvancesOneStepNorthWhenReceivesForwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:49:10'!
PASSED!

!testRun: #MarsRoverTest #test12RoverAdvancesOneStepEastWhenReceivesForwardAndIsHeadingEast stamp: 'AEC 5/16/2022 12:49:10'!
PASSED!

!testRun: #MarsRoverTest #test13RoverAdvancesOneStepWestWhenReceivesForwardAndIsHeadingWest stamp: 'AEC 5/16/2022 12:49:10'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AEC 5/16/2022 12:49:58' prior: 50476078!
moveForward
"
	self isHeadingSouth ifTrue:[ ^position := 0@-1 ].
	self isHeadingNorth ifTrue:[ ^position := 0@1 ].
	self isHeadingEast ifTrue:[ ^position := 1@0 ].
	position := -1@0
"
	
	heading moveForward: self! !
!Direction methodsFor: 'nil' stamp: 'AEC 5/16/2022 12:50:12'!
moveForward

	^ self subclassResponsibility ! !
!East methodsFor: 'nil' stamp: 'AEC 5/16/2022 12:51:01'!
moveForward: aMarsRover

	^aMarsRover moveEast! !
!North methodsFor: 'rotation' stamp: 'AEC 5/16/2022 12:51:17'!
moveForward: aMarsRover

	^aMarsRover moveNorth! !
!South methodsFor: 'rotation' stamp: 'AEC 5/16/2022 12:51:24'!
moveForward: aMarsRover

	^aMarsRover moveEast! !
!West methodsFor: 'rotation' stamp: 'AEC 5/16/2022 12:51:29'!
moveForward: aMarsRover

	^aMarsRover moveWest! !
!South methodsFor: 'rotation' stamp: 'AEC 5/16/2022 12:51:36' prior: 50476162!
moveForward: aMarsRover

	^aMarsRover moveSouth! !
!MarsRover methodsFor: 'nil' stamp: 'AEC 5/16/2022 12:52:12'!
moveEast

	position := position + (1@0)! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AEC 5/16/2022 12:52:17'!
moveWest

	position := position + (-1@0)! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AEC 5/16/2022 12:52:32' prior: 50476179!
moveWest

	position := position - (1@0)! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AEC 5/16/2022 12:52:41'!
moveNorth

	position := position + (1@0)! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AEC 5/16/2022 12:52:50'!
moveSouth

	position := position - (0@1)! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AEC 5/16/2022 12:52:57' prior: 50476188!
moveNorth

	position := position + (0@1)! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 12:53:12'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:53:12'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:53:12'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 12:53:12'!
PASSED!

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 12:53:12'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:53:12'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:53:12'!
PASSED!

!testRun: #MarsRoverTest #test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast stamp: 'AEC 5/16/2022 12:53:12'!
PASSED!

!testRun: #MarsRoverTest #test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest stamp: 'AEC 5/16/2022 12:53:12'!
PASSED!

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:53:12'!
PASSED!

!testRun: #MarsRoverTest #test11RoverAdvancesOneStepNorthWhenReceivesForwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:53:12'!
PASSED!

!testRun: #MarsRoverTest #test12RoverAdvancesOneStepEastWhenReceivesForwardAndIsHeadingEast stamp: 'AEC 5/16/2022 12:53:12'!
PASSED!

!testRun: #MarsRoverTest #test13RoverAdvancesOneStepWestWhenReceivesForwardAndIsHeadingWest stamp: 'AEC 5/16/2022 12:53:12'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AEC 5/16/2022 12:53:21' prior: 50476141!
moveForward
	
	heading moveForward: self! !
!Direction methodsFor: 'movement' stamp: 'AEC 5/16/2022 12:54:12'!
moveForward: aMarsRover

	^ self subclassResponsibility ! !

!methodRemoval: Direction #moveForward stamp: 'AEC 5/16/2022 12:54:25'!
moveForward

	^ self subclassResponsibility !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 12:55:15'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:55:15'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:55:15'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 12:55:15'!
PASSED!

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 12:55:15'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:55:15'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:55:15'!
PASSED!

!testRun: #MarsRoverTest #test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast stamp: 'AEC 5/16/2022 12:55:15'!
PASSED!

!testRun: #MarsRoverTest #test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest stamp: 'AEC 5/16/2022 12:55:15'!
PASSED!

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:55:15'!
PASSED!

!testRun: #MarsRoverTest #test11RoverAdvancesOneStepNorthWhenReceivesForwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:55:15'!
PASSED!

!testRun: #MarsRoverTest #test12RoverAdvancesOneStepEastWhenReceivesForwardAndIsHeadingEast stamp: 'AEC 5/16/2022 12:55:15'!
PASSED!

!testRun: #MarsRoverTest #test13RoverAdvancesOneStepWestWhenReceivesForwardAndIsHeadingWest stamp: 'AEC 5/16/2022 12:55:15'!
PASSED!
!Behavior method!
heading: aDirection
	^ [
	(self coverAll:
		{25 to: 28})
		heading:
			(aDirection
				cover: (39 to: 48)
				declaredAt: (10 to: 19))
		at:
			([
			(0 coverAll:
				{54 to: 54}) @
				(0 coverAll:
					{55 to: 56}) ] valueCoveringAll:
				{55 to: 55}) ] valueCoveringAll:
		{30 to: 37. 50 to: 52}.! !
!Behavior method!
heading: aDirection at: aPosition
	^ [
	([
	(self coverAll:
		{39 to: 42}) new ] valueCoveringAll:
		{44 to: 46})
		initializeHeading:
			(aDirection
				cover: (67 to: 76)
				declaredAt: (10 to: 19))
		at:
			(aPosition
				cover: (82 to: 90)
				declaredAt: (25 to: 33)) ] valueCoveringAll:
		{48 to: 65. 78 to: 80}.! !
!Behavior method!
initializeHeading: aDirection at: aPosition
	(heading _ aDirection
		cover: (59 to: 68)
		declaredAt: (20 to: 29))
		cover: (48 to: 54)
		declaredAt: (48 to: 54).
	(position _ aPosition
		cover: (84 to: 92)
		declaredAt: (35 to: 43))
		cover: (72 to: 79)
		declaredAt: (72 to: 79).! !
!Behavior method!
process: aString
	[
	([
	(aString
		cover: (20 to: 26)
		declaredAt: (10 to: 16)) notEmpty ] valueCoveringAll:
		{28 to: 35}) ifTrue: [
		[
		([
		(aString
			cover: (49 to: 55)
			declaredAt: (10 to: 16)) =
			('l' coverAll:
				{59 to: 61}) ] valueCoveringAll:
			{57 to: 57}) ifTrue: [ ^ [
			(self coverAll:
				{74 to: 77}) rotateLeft ] valueCoveringAll:
				{79 to: 88} ]] valueCoveringAll:
			{63 to: 69}.
		[
		([
		(aString
			cover: (95 to: 101)
			declaredAt: (10 to: 16)) =
			('r' coverAll:
				{105 to: 107}) ] valueCoveringAll:
			{103 to: 103}) ifTrue: [ ^ [
			(self coverAll:
				{120 to: 123}) rotateRight ] valueCoveringAll:
				{125 to: 135} ]] valueCoveringAll:
			{109 to: 115}.
		[
		(self coverAll:
			{142 to: 145}) moveForward ] valueCoveringAll:
			{147 to: 157} ]] valueCoveringAll:
		{37 to: 43}.! !
!Behavior method!
position
	^ position
		cover: (14 to: 21)
		declaredAt: (14 to: 21).! !
!Behavior method!
isHeadingSouth
	^ [
	(heading
		cover: (21 to: 27)
		declaredAt: (21 to: 27)) is:
		(#South coverAll:
			{33 to: 38}) ] valueCoveringAll:
		{29 to: 31}.! !
!Behavior method!
is: aSymbol
	^ [
	([
	([
	(self coverAll:
		{16 to: 19}) class ] valueCoveringAll:
		{21 to: 25}) name ] valueCoveringAll:
		{27 to: 30}) =
		(aSymbol
			cover: (34 to: 40)
			declaredAt: (5 to: 11)) ] valueCoveringAll:
		{32 to: 32}.! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 12:55:54'!
PASSED!
!Behavior method!
rotateLeft
	^ (heading _ [
	(heading
		cover: (16 to: 22)
		declaredAt: (16 to: 22)) rotateLeft ] valueCoveringAll:
		{35 to: 44})
		cover: (27 to: 33)
		declaredAt: (16 to: 22).! !
!Behavior method!
rotateLeft
	^ [
	(East
		cover: (15 to: 18)
		declaredAt: (15 to: 18)) new ] valueCoveringAll:
		{20 to: 22}.! !
!Behavior method!
isHeadingEast
	^ [
	(heading
		cover: (20 to: 26)
		declaredAt: (20 to: 26)) is:
		(#East coverAll:
			{32 to: 36}) ] valueCoveringAll:
		{28 to: 30}.! !

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:55:54'!
PASSED!
!Behavior method!
rotateLeft
	^ [
	(West
		cover: (15 to: 18)
		declaredAt: (15 to: 18)) new ] valueCoveringAll:
		{20 to: 22}.! !
!Behavior method!
isHeadingNorth
	^ [
	(heading
		cover: (20 to: 26)
		declaredAt: (20 to: 26)) is:
		(#North coverAll:
			{32 to: 37}) ] valueCoveringAll:
		{28 to: 30}.! !
!Behavior method!
isHeadingWest
	^ [
	(heading
		cover: (19 to: 25)
		declaredAt: (19 to: 25)) is:
		(#West coverAll:
			{31 to: 35}) ] valueCoveringAll:
		{27 to: 29}.! !

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:55:54'!
PASSED!
!Behavior method!
rotateLeft
	^ [
	(North
		cover: (15 to: 19)
		declaredAt: (15 to: 19)) new ] valueCoveringAll:
		{21 to: 23}.! !

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 12:55:54'!
PASSED!
!Behavior method!
rotateLeft
	^ [
	(South
		cover: (15 to: 19)
		declaredAt: (15 to: 19)) new ] valueCoveringAll:
		{21 to: 23}.! !

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 12:55:54'!
PASSED!
!Behavior method!
rotateRight
	^ (heading _ [
	(heading
		cover: (17 to: 23)
		declaredAt: (17 to: 23)) rotateRight ] valueCoveringAll:
		{36 to: 46})
		cover: (28 to: 34)
		declaredAt: (17 to: 23).! !
!Behavior method!
rotateRight
	^ [
	(West
		cover: (16 to: 19)
		declaredAt: (16 to: 19)) new ] valueCoveringAll:
		{21 to: 23}.! !

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:55:54'!
PASSED!
!Behavior method!
rotateRight
	^ [
	(East
		cover: (16 to: 19)
		declaredAt: (16 to: 19)) new ] valueCoveringAll:
		{21 to: 23}.! !

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:55:54'!
PASSED!
!Behavior method!
rotateRight
	^ [
	(South
		cover: (16 to: 20)
		declaredAt: (16 to: 20)) new ] valueCoveringAll:
		{22 to: 24}.! !

!testRun: #MarsRoverTest #test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast stamp: 'AEC 5/16/2022 12:55:54'!
PASSED!
!Behavior method!
rotateRight
	^ [
	(North
		cover: (16 to: 20)
		declaredAt: (16 to: 20)) new ] valueCoveringAll:
		{22 to: 24}.! !

!testRun: #MarsRoverTest #test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest stamp: 'AEC 5/16/2022 12:55:54'!
PASSED!
!Behavior method!
moveForward
	[
	(heading
		cover: (16 to: 22)
		declaredAt: (16 to: 22)) moveForward:
		(self coverAll:
			{37 to: 40}) ] valueCoveringAll:
		{24 to: 35}.! !
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (28 to: 37)
		declaredAt: (14 to: 23)) moveSouth ] valueCoveringAll:
		{39 to: 47}.! !
!Behavior method!
moveSouth
	(position _ [
	(position
		cover: (13 to: 20)
		declaredAt: (13 to: 20)) -
		([
		(0 coverAll:
			{37 to: 37}) @
			(1 coverAll:
				{39 to: 39}) ] valueCoveringAll:
			{38 to: 38}) ] valueCoveringAll:
		{34 to: 34})
		cover: (25 to: 32)
		declaredAt: (13 to: 20).! !

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 12:55:54'!
PASSED!
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (28 to: 37)
		declaredAt: (14 to: 23)) moveNorth ] valueCoveringAll:
		{39 to: 47}.! !
!Behavior method!
moveNorth
	(position _ [
	(position
		cover: (13 to: 20)
		declaredAt: (13 to: 20)) +
		([
		(0 coverAll:
			{37 to: 37}) @
			(1 coverAll:
				{39 to: 39}) ] valueCoveringAll:
			{38 to: 38}) ] valueCoveringAll:
		{34 to: 34})
		cover: (25 to: 32)
		declaredAt: (13 to: 20).! !

!testRun: #MarsRoverTest #test11RoverAdvancesOneStepNorthWhenReceivesForwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 12:55:54'!
PASSED!
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (28 to: 37)
		declaredAt: (14 to: 23)) moveEast ] valueCoveringAll:
		{39 to: 46}.! !
!Behavior method!
moveEast
	(position _ [
	(position
		cover: (12 to: 19)
		declaredAt: (12 to: 19)) +
		([
		(1 coverAll:
			{36 to: 36}) @
			(0 coverAll:
				{38 to: 38}) ] valueCoveringAll:
			{37 to: 37}) ] valueCoveringAll:
		{33 to: 33})
		cover: (24 to: 31)
		declaredAt: (12 to: 19).! !

!testRun: #MarsRoverTest #test12RoverAdvancesOneStepEastWhenReceivesForwardAndIsHeadingEast stamp: 'AEC 5/16/2022 12:55:54'!
PASSED!
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (28 to: 37)
		declaredAt: (14 to: 23)) moveWest ] valueCoveringAll:
		{39 to: 46}.! !
!Behavior method!
moveWest
	(position _ [
	(position
		cover: (12 to: 19)
		declaredAt: (12 to: 19)) -
		([
		(1 coverAll:
			{36 to: 36}) @
			(0 coverAll:
				{38 to: 38}) ] valueCoveringAll:
			{37 to: 37}) ] valueCoveringAll:
		{33 to: 33})
		cover: (24 to: 31)
		declaredAt: (12 to: 19).! !

!testRun: #MarsRoverTest #test13RoverAdvancesOneStepWestWhenReceivesForwardAndIsHeadingWest stamp: 'AEC 5/16/2022 12:55:54'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 13:01:46'!
test14RoverMovesOneStepNorthWhenReceivesBackwardAndIsHeadingSouth

	| rover |
	rover := MarsRover heading: South new.
	
	rover process: 'b'.
	
	self assert: rover position equals: (0@1).! !

!testRun: #MarsRoverTest #test14RoverMovesOneStepNorthWhenReceivesBackwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:01:47'!
FAILURE!
!MarsRover methodsFor: 'command-process' stamp: 'AEC 5/16/2022 13:02:08' prior: 50476070!
process: aString

	aString notEmpty ifTrue:[ 
		aString = 'l' ifTrue: [ ^self rotateLeft ].
		aString = 'r' ifTrue: [ ^self rotateRight ].
		aString = 'r' ifTrue: [ ^self moveForward ].
		self moveBackwards
	]! !
!MarsRover methodsFor: 'movement' stamp: 'AEC 5/16/2022 13:02:40'!
moveBackwards
	
	position := 0@-1! !
!MarsRover methodsFor: 'movement' stamp: 'AEC 5/16/2022 13:02:58' prior: 50476611!
moveBackwards
	
	position := 0@1! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 13:03:49'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:03:49'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:03:49'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 13:03:49'!
PASSED!

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 13:03:49'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:03:49'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:03:49'!
PASSED!

!testRun: #MarsRoverTest #test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast stamp: 'AEC 5/16/2022 13:03:49'!
PASSED!

!testRun: #MarsRoverTest #test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest stamp: 'AEC 5/16/2022 13:03:49'!
PASSED!

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:03:49'!
FAILURE!

!testRun: #MarsRoverTest #test11RoverAdvancesOneStepNorthWhenReceivesForwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:03:49'!
PASSED!

!testRun: #MarsRoverTest #test12RoverAdvancesOneStepEastWhenReceivesForwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:03:49'!
FAILURE!

!testRun: #MarsRoverTest #test13RoverAdvancesOneStepWestWhenReceivesForwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:03:49'!
FAILURE!

!testRun: #MarsRoverTest #test14RoverMovesOneStepNorthWhenReceivesBackwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:03:49'!
PASSED!
!MarsRover methodsFor: 'command-process' stamp: 'AEC 5/16/2022 13:03:59' prior: 50476602!
process: aString

	aString notEmpty ifTrue:[ 
		aString = 'l' ifTrue: [ ^self rotateLeft ].
		aString = 'r' ifTrue: [ ^self rotateRight ].
		aString = 'f' ifTrue: [ ^self moveForward ].
		self moveBackwards
	]! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 13:04:03'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:04:03'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:04:03'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 13:04:03'!
PASSED!

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 13:04:03'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:04:03'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:04:03'!
PASSED!

!testRun: #MarsRoverTest #test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast stamp: 'AEC 5/16/2022 13:04:03'!
PASSED!

!testRun: #MarsRoverTest #test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest stamp: 'AEC 5/16/2022 13:04:03'!
PASSED!

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:04:03'!
PASSED!

!testRun: #MarsRoverTest #test11RoverAdvancesOneStepNorthWhenReceivesForwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:04:03'!
PASSED!

!testRun: #MarsRoverTest #test12RoverAdvancesOneStepEastWhenReceivesForwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:04:03'!
PASSED!

!testRun: #MarsRoverTest #test13RoverAdvancesOneStepWestWhenReceivesForwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:04:03'!
PASSED!

!testRun: #MarsRoverTest #test14RoverMovesOneStepNorthWhenReceivesBackwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:04:03'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 13:05:22'!
test15RoverMovesOneStepSouthWhenReceivesBackwardAndIsHeadingNorth

	| rover |
	rover := MarsRover heading: North new.
	
	rover process: 'b'.
	
	self assert: rover position equals: (0@-1).! !

!testRun: #MarsRoverTest #test15RoverMovesOneStepSouthWhenReceivesBackwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:05:23'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'AEC 5/16/2022 13:06:01' prior: 50476615!
moveBackwards
	
	self isHeadingSouth ifTrue:[position := 0@1].
	self isHeadingNorth ifTrue:[position := 0@-1]! !
!MarsRover methodsFor: 'movement' stamp: 'AEC 5/16/2022 13:06:09' prior: 50476759!
moveBackwards
	
	self isHeadingSouth ifTrue:[position := 0@1].
	position := 0@-1! !

!testRun: #MarsRoverTest #test15RoverMovesOneStepSouthWhenReceivesBackwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:06:14'!
PASSED!

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 13:06:14'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:06:14'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:06:14'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 13:06:14'!
PASSED!

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 13:06:14'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:06:14'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:06:14'!
PASSED!

!testRun: #MarsRoverTest #test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast stamp: 'AEC 5/16/2022 13:06:14'!
PASSED!

!testRun: #MarsRoverTest #test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest stamp: 'AEC 5/16/2022 13:06:14'!
PASSED!

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:06:14'!
PASSED!

!testRun: #MarsRoverTest #test11RoverAdvancesOneStepNorthWhenReceivesForwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:06:14'!
PASSED!

!testRun: #MarsRoverTest #test12RoverAdvancesOneStepEastWhenReceivesForwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:06:14'!
PASSED!

!testRun: #MarsRoverTest #test13RoverAdvancesOneStepWestWhenReceivesForwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:06:14'!
PASSED!

!testRun: #MarsRoverTest #test14RoverMovesOneStepNorthWhenReceivesBackwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:06:14'!
FAILURE!

!testRun: #MarsRoverTest #test15RoverMovesOneStepSouthWhenReceivesBackwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:06:14'!
PASSED!

!testRun: #MarsRoverTest #test14RoverMovesOneStepNorthWhenReceivesBackwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:06:14'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'AEC 5/16/2022 13:06:29' prior: 50476766!
moveBackwards
	
	self isHeadingSouth ifTrue:[^position := 0@1].
	position := 0@-1! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 13:06:31'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:06:31'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:06:31'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 13:06:31'!
PASSED!

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 13:06:31'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:06:31'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:06:31'!
PASSED!

!testRun: #MarsRoverTest #test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast stamp: 'AEC 5/16/2022 13:06:32'!
PASSED!

!testRun: #MarsRoverTest #test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest stamp: 'AEC 5/16/2022 13:06:32'!
PASSED!

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:06:32'!
PASSED!

!testRun: #MarsRoverTest #test11RoverAdvancesOneStepNorthWhenReceivesForwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:06:32'!
PASSED!

!testRun: #MarsRoverTest #test12RoverAdvancesOneStepEastWhenReceivesForwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:06:32'!
PASSED!

!testRun: #MarsRoverTest #test13RoverAdvancesOneStepWestWhenReceivesForwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:06:32'!
PASSED!

!testRun: #MarsRoverTest #test14RoverMovesOneStepNorthWhenReceivesBackwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:06:32'!
PASSED!

!testRun: #MarsRoverTest #test15RoverMovesOneStepSouthWhenReceivesBackwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:06:32'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 13:07:25'!
test16RoverMovesOneStepWestWhenReceivesBackwardAndIsHeadingEast

	| rover |
	rover := MarsRover heading: East new.
	
	rover process: 'b'.
	
	self assert: rover position equals: (-1@0).! !

!testRun: #MarsRoverTest #test16RoverMovesOneStepWestWhenReceivesBackwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:07:26'!
FAILURE!

!testRun: #MarsRoverTest #test16RoverMovesOneStepWestWhenReceivesBackwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:07:40'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'AEC 5/16/2022 13:08:18' prior: 50476843!
moveBackwards
	
	self isHeadingSouth ifTrue:[^position := 0@1].
	self isHeadingSouth ifTrue:[^position := 0@-1].
	position := -1@0! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 13:08:21'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:08:21'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:08:21'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 13:08:21'!
PASSED!

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 13:08:21'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:08:21'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:08:21'!
PASSED!

!testRun: #MarsRoverTest #test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast stamp: 'AEC 5/16/2022 13:08:21'!
PASSED!

!testRun: #MarsRoverTest #test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest stamp: 'AEC 5/16/2022 13:08:21'!
PASSED!

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:08:21'!
PASSED!

!testRun: #MarsRoverTest #test11RoverAdvancesOneStepNorthWhenReceivesForwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:08:21'!
PASSED!

!testRun: #MarsRoverTest #test12RoverAdvancesOneStepEastWhenReceivesForwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:08:21'!
PASSED!

!testRun: #MarsRoverTest #test13RoverAdvancesOneStepWestWhenReceivesForwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:08:21'!
PASSED!

!testRun: #MarsRoverTest #test14RoverMovesOneStepNorthWhenReceivesBackwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:08:21'!
PASSED!

!testRun: #MarsRoverTest #test15RoverMovesOneStepSouthWhenReceivesBackwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:08:21'!
FAILURE!

!testRun: #MarsRoverTest #test16RoverMovesOneStepWestWhenReceivesBackwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:08:21'!
PASSED!

!testRun: #MarsRoverTest #test15RoverMovesOneStepSouthWhenReceivesBackwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:08:21'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'AEC 5/16/2022 13:08:37' prior: 50476928!
moveBackwards
	
	self isHeadingSouth ifTrue:[^position := 0@1].
	self isHeadingNorth ifTrue:[^position := 0@-1].
	position := -1@0! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 13:08:41'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:08:41'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:08:41'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 13:08:41'!
PASSED!

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 13:08:41'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:08:41'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:08:41'!
PASSED!

!testRun: #MarsRoverTest #test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast stamp: 'AEC 5/16/2022 13:08:41'!
PASSED!

!testRun: #MarsRoverTest #test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest stamp: 'AEC 5/16/2022 13:08:41'!
PASSED!

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:08:41'!
PASSED!

!testRun: #MarsRoverTest #test11RoverAdvancesOneStepNorthWhenReceivesForwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:08:41'!
PASSED!

!testRun: #MarsRoverTest #test12RoverAdvancesOneStepEastWhenReceivesForwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:08:41'!
PASSED!

!testRun: #MarsRoverTest #test13RoverAdvancesOneStepWestWhenReceivesForwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:08:41'!
PASSED!

!testRun: #MarsRoverTest #test14RoverMovesOneStepNorthWhenReceivesBackwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:08:41'!
PASSED!

!testRun: #MarsRoverTest #test15RoverMovesOneStepSouthWhenReceivesBackwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:08:41'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesOneStepWestWhenReceivesBackwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:08:41'!
PASSED!

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 13:10:21'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:10:21'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:10:21'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 13:10:21'!
PASSED!

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 13:10:21'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:10:21'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:10:21'!
PASSED!

!testRun: #MarsRoverTest #test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast stamp: 'AEC 5/16/2022 13:10:21'!
PASSED!

!testRun: #MarsRoverTest #test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest stamp: 'AEC 5/16/2022 13:10:21'!
PASSED!

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:10:21'!
PASSED!

!testRun: #MarsRoverTest #test11RoverAdvancesOneStepNorthWhenReceivesForwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:10:21'!
PASSED!

!testRun: #MarsRoverTest #test12RoverAdvancesOneStepEastWhenReceivesForwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:10:21'!
PASSED!

!testRun: #MarsRoverTest #test13RoverAdvancesOneStepWestWhenReceivesForwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:10:21'!
PASSED!

!testRun: #MarsRoverTest #test14RoverMovesOneStepNorthWhenReceivesBackwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:10:21'!
PASSED!

!testRun: #MarsRoverTest #test15RoverMovesOneStepSouthWhenReceivesBackwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:10:21'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesOneStepWestWhenReceivesBackwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:10:21'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 13:10:24'!
test17RoverMovesOneStepEastWhenReceivesBackwardAndIsHeadingWest

	| rover |
	rover := MarsRover heading: West new.
	
	rover process: 'b'.
	
	self assert: rover position equals: (1@0).! !

!testRun: #MarsRoverTest #test17RoverMovesOneStepEastWhenReceivesBackwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:10:25'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'AEC 5/16/2022 13:10:50' prior: 50477006!
moveBackwards
	
	self isHeadingSouth ifTrue:[^position := 0@1].
	self isHeadingNorth ifTrue:[^position := 0@-1].
	self isHeadingEast ifTrue:[^position := -1@0].
	position := 1@0! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 13:10:53'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:10:53'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:10:53'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 13:10:53'!
PASSED!

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 13:10:53'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:10:53'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:10:53'!
PASSED!

!testRun: #MarsRoverTest #test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast stamp: 'AEC 5/16/2022 13:10:53'!
PASSED!

!testRun: #MarsRoverTest #test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest stamp: 'AEC 5/16/2022 13:10:53'!
PASSED!

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:10:53'!
PASSED!

!testRun: #MarsRoverTest #test11RoverAdvancesOneStepNorthWhenReceivesForwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:10:53'!
PASSED!

!testRun: #MarsRoverTest #test12RoverAdvancesOneStepEastWhenReceivesForwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:10:53'!
PASSED!

!testRun: #MarsRoverTest #test13RoverAdvancesOneStepWestWhenReceivesForwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:10:53'!
PASSED!

!testRun: #MarsRoverTest #test14RoverMovesOneStepNorthWhenReceivesBackwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:10:53'!
PASSED!

!testRun: #MarsRoverTest #test15RoverMovesOneStepSouthWhenReceivesBackwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:10:53'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesOneStepWestWhenReceivesBackwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:10:53'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesOneStepEastWhenReceivesBackwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:10:53'!
PASSED!
!MarsRover methodsFor: 'movement' stamp: 'AEC 5/16/2022 13:11:21' prior: 50477159!
moveBackwards
"	
	self isHeadingSouth ifTrue:[^position := 0@1].
	self isHeadingNorth ifTrue:[^position := 0@-1].
	self isHeadingEast ifTrue:[^position := -1@0].
	position := 1@0
"
	heading moveBackwards! !
!MarsRover methodsFor: 'movement' stamp: 'AEC 5/16/2022 13:11:54' prior: 50477238!
moveBackwards
"	
	self isHeadingSouth ifTrue:[^position := 0@1].
	self isHeadingNorth ifTrue:[^position := 0@-1].
	self isHeadingEast ifTrue:[^position := -1@0].
	position := 1@0
"
	heading moveBackwards: self! !
!Direction methodsFor: 'movement' stamp: 'AEC 5/16/2022 13:12:13'!
moveBackwards: aMarsRover

	^ self subclassResponsibility ! !
!East methodsFor: 'movement' stamp: 'AEC 5/16/2022 13:12:48' overrides: 50477257!
moveBackwards: aMarsRover

	^aMarsRover moveWest! !
!North methodsFor: 'movement' stamp: 'AEC 5/16/2022 13:13:02' overrides: 50477257!
moveBackwards: aMarsRover

	^aMarsRover moveSouth! !
!South methodsFor: 'movement' stamp: 'AEC 5/16/2022 13:13:12' overrides: 50477257!
moveBackwards: aMarsRover

	^aMarsRover moveNorth! !
!West methodsFor: 'movement' stamp: 'AEC 5/16/2022 13:13:19' overrides: 50477257!
moveBackwards: aMarsRover

	^aMarsRover moveEast! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 13:13:59'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:13:59'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:13:59'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 13:13:59'!
PASSED!

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 13:13:59'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:13:59'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:13:59'!
PASSED!

!testRun: #MarsRoverTest #test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast stamp: 'AEC 5/16/2022 13:13:59'!
PASSED!

!testRun: #MarsRoverTest #test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest stamp: 'AEC 5/16/2022 13:13:59'!
PASSED!

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:13:59'!
PASSED!

!testRun: #MarsRoverTest #test11RoverAdvancesOneStepNorthWhenReceivesForwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:13:59'!
PASSED!

!testRun: #MarsRoverTest #test12RoverAdvancesOneStepEastWhenReceivesForwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:13:59'!
PASSED!

!testRun: #MarsRoverTest #test13RoverAdvancesOneStepWestWhenReceivesForwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:13:59'!
PASSED!

!testRun: #MarsRoverTest #test14RoverMovesOneStepNorthWhenReceivesBackwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:13:59'!
PASSED!

!testRun: #MarsRoverTest #test15RoverMovesOneStepSouthWhenReceivesBackwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:13:59'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesOneStepWestWhenReceivesBackwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:13:59'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesOneStepEastWhenReceivesBackwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:13:59'!
PASSED!
!Behavior method!
heading: aDirection
	^ [
	(self coverAll:
		{25 to: 28})
		heading:
			(aDirection
				cover: (39 to: 48)
				declaredAt: (10 to: 19))
		at:
			([
			(0 coverAll:
				{54 to: 54}) @
				(0 coverAll:
					{55 to: 56}) ] valueCoveringAll:
				{55 to: 55}) ] valueCoveringAll:
		{30 to: 37. 50 to: 52}.! !
!Behavior method!
heading: aDirection at: aPosition
	^ [
	([
	(self coverAll:
		{39 to: 42}) new ] valueCoveringAll:
		{44 to: 46})
		initializeHeading:
			(aDirection
				cover: (67 to: 76)
				declaredAt: (10 to: 19))
		at:
			(aPosition
				cover: (82 to: 90)
				declaredAt: (25 to: 33)) ] valueCoveringAll:
		{48 to: 65. 78 to: 80}.! !
!Behavior method!
initializeHeading: aDirection at: aPosition
	(heading _ aDirection
		cover: (59 to: 68)
		declaredAt: (20 to: 29))
		cover: (48 to: 54)
		declaredAt: (48 to: 54).
	(position _ aPosition
		cover: (84 to: 92)
		declaredAt: (35 to: 43))
		cover: (72 to: 79)
		declaredAt: (72 to: 79).! !
!Behavior method!
process: aString
	[
	([
	(aString
		cover: (20 to: 26)
		declaredAt: (10 to: 16)) notEmpty ] valueCoveringAll:
		{28 to: 35}) ifTrue: [
		[
		([
		(aString
			cover: (49 to: 55)
			declaredAt: (10 to: 16)) =
			('l' coverAll:
				{59 to: 61}) ] valueCoveringAll:
			{57 to: 57}) ifTrue: [ ^ [
			(self coverAll:
				{74 to: 77}) rotateLeft ] valueCoveringAll:
				{79 to: 88} ]] valueCoveringAll:
			{63 to: 69}.
		[
		([
		(aString
			cover: (95 to: 101)
			declaredAt: (10 to: 16)) =
			('r' coverAll:
				{105 to: 107}) ] valueCoveringAll:
			{103 to: 103}) ifTrue: [ ^ [
			(self coverAll:
				{120 to: 123}) rotateRight ] valueCoveringAll:
				{125 to: 135} ]] valueCoveringAll:
			{109 to: 115}.
		[
		([
		(aString
			cover: (142 to: 148)
			declaredAt: (10 to: 16)) =
			('f' coverAll:
				{152 to: 154}) ] valueCoveringAll:
			{150 to: 150}) ifTrue: [ ^ [
			(self coverAll:
				{167 to: 170}) moveForward ] valueCoveringAll:
				{172 to: 182} ]] valueCoveringAll:
			{156 to: 162}.
		[
		(self coverAll:
			{189 to: 192}) moveBackwards ] valueCoveringAll:
			{194 to: 206} ]] valueCoveringAll:
		{37 to: 43}.! !
!Behavior method!
position
	^ position
		cover: (14 to: 21)
		declaredAt: (14 to: 21).! !
!Behavior method!
isHeadingSouth
	^ [
	(heading
		cover: (21 to: 27)
		declaredAt: (21 to: 27)) is:
		(#South coverAll:
			{33 to: 38}) ] valueCoveringAll:
		{29 to: 31}.! !
!Behavior method!
is: aSymbol
	^ [
	([
	([
	(self coverAll:
		{16 to: 19}) class ] valueCoveringAll:
		{21 to: 25}) name ] valueCoveringAll:
		{27 to: 30}) =
		(aSymbol
			cover: (34 to: 40)
			declaredAt: (5 to: 11)) ] valueCoveringAll:
		{32 to: 32}.! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 13:14:01'!
PASSED!
!Behavior method!
rotateLeft
	^ (heading _ [
	(heading
		cover: (16 to: 22)
		declaredAt: (16 to: 22)) rotateLeft ] valueCoveringAll:
		{35 to: 44})
		cover: (27 to: 33)
		declaredAt: (16 to: 22).! !
!Behavior method!
rotateLeft
	^ [
	(East
		cover: (15 to: 18)
		declaredAt: (15 to: 18)) new ] valueCoveringAll:
		{20 to: 22}.! !
!Behavior method!
isHeadingEast
	^ [
	(heading
		cover: (20 to: 26)
		declaredAt: (20 to: 26)) is:
		(#East coverAll:
			{32 to: 36}) ] valueCoveringAll:
		{28 to: 30}.! !

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:14:01'!
PASSED!
!Behavior method!
rotateLeft
	^ [
	(West
		cover: (15 to: 18)
		declaredAt: (15 to: 18)) new ] valueCoveringAll:
		{20 to: 22}.! !
!Behavior method!
isHeadingNorth
	^ [
	(heading
		cover: (20 to: 26)
		declaredAt: (20 to: 26)) is:
		(#North coverAll:
			{32 to: 37}) ] valueCoveringAll:
		{28 to: 30}.! !
!Behavior method!
isHeadingWest
	^ [
	(heading
		cover: (19 to: 25)
		declaredAt: (19 to: 25)) is:
		(#West coverAll:
			{31 to: 35}) ] valueCoveringAll:
		{27 to: 29}.! !

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:14:02'!
PASSED!
!Behavior method!
rotateLeft
	^ [
	(North
		cover: (15 to: 19)
		declaredAt: (15 to: 19)) new ] valueCoveringAll:
		{21 to: 23}.! !

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 13:14:02'!
PASSED!
!Behavior method!
rotateLeft
	^ [
	(South
		cover: (15 to: 19)
		declaredAt: (15 to: 19)) new ] valueCoveringAll:
		{21 to: 23}.! !

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 13:14:02'!
PASSED!
!Behavior method!
rotateRight
	^ (heading _ [
	(heading
		cover: (17 to: 23)
		declaredAt: (17 to: 23)) rotateRight ] valueCoveringAll:
		{36 to: 46})
		cover: (28 to: 34)
		declaredAt: (17 to: 23).! !
!Behavior method!
rotateRight
	^ [
	(West
		cover: (16 to: 19)
		declaredAt: (16 to: 19)) new ] valueCoveringAll:
		{21 to: 23}.! !

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:14:02'!
PASSED!
!Behavior method!
rotateRight
	^ [
	(East
		cover: (16 to: 19)
		declaredAt: (16 to: 19)) new ] valueCoveringAll:
		{21 to: 23}.! !

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:14:02'!
PASSED!
!Behavior method!
rotateRight
	^ [
	(South
		cover: (16 to: 20)
		declaredAt: (16 to: 20)) new ] valueCoveringAll:
		{22 to: 24}.! !

!testRun: #MarsRoverTest #test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast stamp: 'AEC 5/16/2022 13:14:02'!
PASSED!
!Behavior method!
rotateRight
	^ [
	(North
		cover: (16 to: 20)
		declaredAt: (16 to: 20)) new ] valueCoveringAll:
		{22 to: 24}.! !

!testRun: #MarsRoverTest #test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest stamp: 'AEC 5/16/2022 13:14:02'!
PASSED!
!Behavior method!
moveForward
	[
	(heading
		cover: (16 to: 22)
		declaredAt: (16 to: 22)) moveForward:
		(self coverAll:
			{37 to: 40}) ] valueCoveringAll:
		{24 to: 35}.! !
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (28 to: 37)
		declaredAt: (14 to: 23)) moveSouth ] valueCoveringAll:
		{39 to: 47}.! !
!Behavior method!
moveSouth
	(position _ [
	(position
		cover: (13 to: 20)
		declaredAt: (13 to: 20)) -
		([
		(0 coverAll:
			{37 to: 37}) @
			(1 coverAll:
				{39 to: 39}) ] valueCoveringAll:
			{38 to: 38}) ] valueCoveringAll:
		{34 to: 34})
		cover: (25 to: 32)
		declaredAt: (13 to: 20).! !

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:14:02'!
PASSED!
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (28 to: 37)
		declaredAt: (14 to: 23)) moveNorth ] valueCoveringAll:
		{39 to: 47}.! !
!Behavior method!
moveNorth
	(position _ [
	(position
		cover: (13 to: 20)
		declaredAt: (13 to: 20)) +
		([
		(0 coverAll:
			{37 to: 37}) @
			(1 coverAll:
				{39 to: 39}) ] valueCoveringAll:
			{38 to: 38}) ] valueCoveringAll:
		{34 to: 34})
		cover: (25 to: 32)
		declaredAt: (13 to: 20).! !

!testRun: #MarsRoverTest #test11RoverAdvancesOneStepNorthWhenReceivesForwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:14:02'!
PASSED!
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (28 to: 37)
		declaredAt: (14 to: 23)) moveEast ] valueCoveringAll:
		{39 to: 46}.! !
!Behavior method!
moveEast
	(position _ [
	(position
		cover: (12 to: 19)
		declaredAt: (12 to: 19)) +
		([
		(1 coverAll:
			{36 to: 36}) @
			(0 coverAll:
				{38 to: 38}) ] valueCoveringAll:
			{37 to: 37}) ] valueCoveringAll:
		{33 to: 33})
		cover: (24 to: 31)
		declaredAt: (12 to: 19).! !

!testRun: #MarsRoverTest #test12RoverAdvancesOneStepEastWhenReceivesForwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:14:02'!
PASSED!
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (28 to: 37)
		declaredAt: (14 to: 23)) moveWest ] valueCoveringAll:
		{39 to: 46}.! !
!Behavior method!
moveWest
	(position _ [
	(position
		cover: (12 to: 19)
		declaredAt: (12 to: 19)) -
		([
		(1 coverAll:
			{36 to: 36}) @
			(0 coverAll:
				{38 to: 38}) ] valueCoveringAll:
			{37 to: 37}) ] valueCoveringAll:
		{33 to: 33})
		cover: (24 to: 31)
		declaredAt: (12 to: 19).! !

!testRun: #MarsRoverTest #test13RoverAdvancesOneStepWestWhenReceivesForwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:14:02'!
PASSED!
!Behavior method!
moveBackwards
	"	
	self isHeadingSouth ifTrue:[^position := 0@1].
	self isHeadingNorth ifTrue:[^position := 0@-1].
	self isHeadingEast ifTrue:[^position := -1@0].
	position := 1@0
"
	[
	(heading
		cover: (183 to: 189)
		declaredAt: (183 to: 189)) moveBackwards:
		(self coverAll:
			{206 to: 209}) ] valueCoveringAll:
		{191 to: 204}.! !
!Behavior method!
moveBackwards: aMarsRover
	^ [
	(aMarsRover
		cover: (30 to: 39)
		declaredAt: (16 to: 25)) moveNorth ] valueCoveringAll:
		{41 to: 49}.! !

!testRun: #MarsRoverTest #test14RoverMovesOneStepNorthWhenReceivesBackwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:14:02'!
PASSED!
!Behavior method!
moveBackwards: aMarsRover
	^ [
	(aMarsRover
		cover: (30 to: 39)
		declaredAt: (16 to: 25)) moveSouth ] valueCoveringAll:
		{41 to: 49}.! !

!testRun: #MarsRoverTest #test15RoverMovesOneStepSouthWhenReceivesBackwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:14:02'!
PASSED!
!Behavior method!
moveBackwards: aMarsRover
	^ [
	(aMarsRover
		cover: (30 to: 39)
		declaredAt: (16 to: 25)) moveWest ] valueCoveringAll:
		{41 to: 48}.! !

!testRun: #MarsRoverTest #test16RoverMovesOneStepWestWhenReceivesBackwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:14:02'!
PASSED!
!Behavior method!
moveBackwards: aMarsRover
	^ [
	(aMarsRover
		cover: (30 to: 39)
		declaredAt: (16 to: 25)) moveEast ] valueCoveringAll:
		{41 to: 48}.! !

!testRun: #MarsRoverTest #test17RoverMovesOneStepEastWhenReceivesBackwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:14:02'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 13:15:25'!
test18RoverRotatesRightAndAdvancesOneStepEastWhenReceivesRotateRightAndForwardHeadingNorth

	| rover |
	rover := MarsRover heading: North new.
	
	rover process: 'rf'.
	
	self assert: rover position equals: (1@0).
	self assert: rover isHeadingEast! !

!testRun: #MarsRoverTest #test18RoverRotatesRightAndAdvancesOneStepEastWhenReceivesRotateRightAndForwardHeadingNorth stamp: 'AEC 5/16/2022 13:15:33'!
FAILURE!
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 13:15:51' prior: 50477679!
test18RoverRotatesRightAndAdvancesOneStepEastWhenReceivesRotateRightAndForwardHeadingNorth

	| rover |
	rover := MarsRover heading: North new.
	
	rover process: 'rf'.
	
	self assert: rover isHeadingEast.
	self assert: rover position equals: (1@0)! !

!testRun: #MarsRoverTest #test18RoverRotatesRightAndAdvancesOneStepEastWhenReceivesRotateRightAndForwardHeadingNorth stamp: 'AEC 5/16/2022 13:15:52'!
FAILURE!
!MarsRover methodsFor: 'command-process' stamp: 'AEC 5/16/2022 13:18:30' prior: 50476678!
process: aString

	aString isEmpty ifTrue:[^self].
	
	(aString at: 1) = $l ifTrue:[ self rotateLeft ].
	(aString at: 1) = $r ifTrue:[ self rotateRight ].
	(aString at: 1) = $f ifTrue:[ self moveForward ].
	(aString at: 1) = $b ifTrue:[ self moveBackwards ].
	
	aString size = 1 ifTrue:[^self].
	
	(aString at: 2) = $l ifTrue:[ self rotateLeft ].
	(aString at: 2) = $r ifTrue:[ self rotateRight ].
	(aString at: 2) = $f ifTrue:[ self moveForward ].
	(aString at: 2) = $b ifTrue:[ self moveBackwards ]! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 13:18:37'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:18:37'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:18:37'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 13:18:37'!
PASSED!

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 13:18:37'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:18:37'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:18:37'!
PASSED!

!testRun: #MarsRoverTest #test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast stamp: 'AEC 5/16/2022 13:18:37'!
PASSED!

!testRun: #MarsRoverTest #test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest stamp: 'AEC 5/16/2022 13:18:37'!
PASSED!

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:18:37'!
PASSED!

!testRun: #MarsRoverTest #test11RoverAdvancesOneStepNorthWhenReceivesForwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:18:37'!
PASSED!

!testRun: #MarsRoverTest #test12RoverAdvancesOneStepEastWhenReceivesForwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:18:37'!
PASSED!

!testRun: #MarsRoverTest #test13RoverAdvancesOneStepWestWhenReceivesForwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:18:37'!
PASSED!

!testRun: #MarsRoverTest #test14RoverMovesOneStepNorthWhenReceivesBackwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:18:37'!
PASSED!

!testRun: #MarsRoverTest #test15RoverMovesOneStepSouthWhenReceivesBackwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:18:37'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesOneStepWestWhenReceivesBackwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:18:37'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesOneStepEastWhenReceivesBackwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:18:37'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesRightAndAdvancesOneStepEastWhenReceivesRotateRightAndForwardHeadingNorth stamp: 'AEC 5/16/2022 13:18:37'!
PASSED!
!MarsRover methodsFor: 'command-process' stamp: 'AEC 5/16/2022 13:19:17'!
processCommand: aString

	(aString at: 1) = $l ifTrue:[ self rotateLeft ].
	(aString at: 1) = $r ifTrue:[ self rotateRight ].
	(aString at: 1) = $f ifTrue:[ self moveForward ].
	(aString at: 1) = $b ifTrue:[ self moveBackwards ]! !
!MarsRover methodsFor: 'command-process' stamp: 'AEC 5/16/2022 13:19:17' prior: 50477711!
process: aString

	aString isEmpty ifTrue:[^self].
	
	self processCommand: aString.
	
	aString size = 1 ifTrue:[^self].
	
	(aString at: 2) = $l ifTrue:[ self rotateLeft ].
	(aString at: 2) = $r ifTrue:[ self rotateRight ].
	(aString at: 2) = $f ifTrue:[ self moveForward ].
	(aString at: 2) = $b ifTrue:[ self moveBackwards ]! !
!MarsRover methodsFor: 'command-process' stamp: 'AEC 5/16/2022 13:19:59' prior: 50477805!
processCommand: aCommandCharacter

	aCommandCharacter = $l ifTrue:[ self rotateLeft ].
	aCommandCharacter = $r ifTrue:[ self rotateRight ].
	aCommandCharacter = $f ifTrue:[ self moveForward ].
	aCommandCharacter = $b ifTrue:[ self moveBackwards ]! !
!MarsRover methodsFor: 'command-process' stamp: 'AEC 5/16/2022 13:20:18' prior: 50477816!
process: aString

	aString isEmpty ifTrue:[^self].
	
	self processCommand: (aString at: 1).
	
	aString size = 1 ifTrue:[^self].
	
	self processCommand: (aString at: 2).! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 13:20:22'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:20:22'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:20:22'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 13:20:22'!
PASSED!

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 13:20:22'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:20:22'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:20:22'!
PASSED!

!testRun: #MarsRoverTest #test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast stamp: 'AEC 5/16/2022 13:20:22'!
PASSED!

!testRun: #MarsRoverTest #test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest stamp: 'AEC 5/16/2022 13:20:22'!
PASSED!

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:20:22'!
PASSED!

!testRun: #MarsRoverTest #test11RoverAdvancesOneStepNorthWhenReceivesForwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:20:22'!
PASSED!

!testRun: #MarsRoverTest #test12RoverAdvancesOneStepEastWhenReceivesForwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:20:22'!
PASSED!

!testRun: #MarsRoverTest #test13RoverAdvancesOneStepWestWhenReceivesForwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:20:22'!
PASSED!

!testRun: #MarsRoverTest #test14RoverMovesOneStepNorthWhenReceivesBackwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:20:22'!
PASSED!

!testRun: #MarsRoverTest #test15RoverMovesOneStepSouthWhenReceivesBackwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:20:22'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesOneStepWestWhenReceivesBackwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:20:22'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesOneStepEastWhenReceivesBackwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:20:22'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesRightAndAdvancesOneStepEastWhenReceivesRotateRightAndForwardHeadingNorth stamp: 'AEC 5/16/2022 13:20:22'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 13:21:08'!
test19RoverRotatesRightAndAdvancesTwoStepsEastWhenReceivesRotateRightOnceAndForwardTwiceHeadingNorth

	| rover |
	rover := MarsRover heading: North new.
	
	rover process: 'rff'.
	
	self assert: rover isHeadingEast.
	self assert: rover position equals: (2@0)! !

!testRun: #MarsRoverTest #test19RoverRotatesRightAndAdvancesTwoStepsEastWhenReceivesRotateRightOnceAndForwardTwiceHeadingNorth stamp: 'AEC 5/16/2022 13:21:11'!
FAILURE!
!MarsRover methodsFor: 'command-process' stamp: 'AEC 5/16/2022 13:21:44' prior: 50477841!
process: aString

	aString do: [:command | self processCommand: command ]! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 13:22:26'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:22:26'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:22:26'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 13:22:26'!
PASSED!

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 13:22:26'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:22:26'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:22:26'!
PASSED!

!testRun: #MarsRoverTest #test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast stamp: 'AEC 5/16/2022 13:22:26'!
PASSED!

!testRun: #MarsRoverTest #test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest stamp: 'AEC 5/16/2022 13:22:26'!
PASSED!

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:22:26'!
PASSED!

!testRun: #MarsRoverTest #test11RoverAdvancesOneStepNorthWhenReceivesForwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:22:26'!
PASSED!

!testRun: #MarsRoverTest #test12RoverAdvancesOneStepEastWhenReceivesForwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:22:26'!
PASSED!

!testRun: #MarsRoverTest #test13RoverAdvancesOneStepWestWhenReceivesForwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:22:26'!
PASSED!

!testRun: #MarsRoverTest #test14RoverMovesOneStepNorthWhenReceivesBackwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:22:26'!
PASSED!

!testRun: #MarsRoverTest #test15RoverMovesOneStepSouthWhenReceivesBackwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:22:26'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesOneStepWestWhenReceivesBackwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:22:26'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesOneStepEastWhenReceivesBackwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:22:26'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesRightAndAdvancesOneStepEastWhenReceivesRotateRightAndForwardHeadingNorth stamp: 'AEC 5/16/2022 13:22:26'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightAndAdvancesTwoStepsEastWhenReceivesRotateRightOnceAndForwardTwiceHeadingNorth stamp: 'AEC 5/16/2022 13:22:26'!
PASSED!
!Behavior method!
heading: aDirection
	^ [
	(self coverAll:
		{25 to: 28})
		heading:
			(aDirection
				cover: (39 to: 48)
				declaredAt: (10 to: 19))
		at:
			([
			(0 coverAll:
				{54 to: 54}) @
				(0 coverAll:
					{55 to: 56}) ] valueCoveringAll:
				{55 to: 55}) ] valueCoveringAll:
		{30 to: 37. 50 to: 52}.! !
!Behavior method!
heading: aDirection at: aPosition
	^ [
	([
	(self coverAll:
		{39 to: 42}) new ] valueCoveringAll:
		{44 to: 46})
		initializeHeading:
			(aDirection
				cover: (67 to: 76)
				declaredAt: (10 to: 19))
		at:
			(aPosition
				cover: (82 to: 90)
				declaredAt: (25 to: 33)) ] valueCoveringAll:
		{48 to: 65. 78 to: 80}.! !
!Behavior method!
initializeHeading: aDirection at: aPosition
	(heading _ aDirection
		cover: (59 to: 68)
		declaredAt: (20 to: 29))
		cover: (48 to: 54)
		declaredAt: (48 to: 54).
	(position _ aPosition
		cover: (84 to: 92)
		declaredAt: (35 to: 43))
		cover: (72 to: 79)
		declaredAt: (72 to: 79).! !
!Behavior method!
process: aString
	[
	(aString
		cover: (20 to: 26)
		declaredAt: (10 to: 16)) do: [ :command |
		[
		(self coverAll:
			{44 to: 47}) processCommand:
			(command
				cover: (65 to: 71)
				declaredAt: (34 to: 40)) ] valueCoveringAll:
			{49 to: 63} ]] valueCoveringAll:
		{28 to: 30}.! !
!Behavior method!
position
	^ position
		cover: (14 to: 21)
		declaredAt: (14 to: 21).! !
!Behavior method!
isHeadingSouth
	^ [
	(heading
		cover: (21 to: 27)
		declaredAt: (21 to: 27)) is:
		(#South coverAll:
			{33 to: 38}) ] valueCoveringAll:
		{29 to: 31}.! !
!Behavior method!
is: aSymbol
	^ [
	([
	([
	(self coverAll:
		{16 to: 19}) class ] valueCoveringAll:
		{21 to: 25}) name ] valueCoveringAll:
		{27 to: 30}) =
		(aSymbol
			cover: (34 to: 40)
			declaredAt: (5 to: 11)) ] valueCoveringAll:
		{32 to: 32}.! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 13:22:44'!
PASSED!
!Behavior method!
processCommand: aCommandCharacter
	[
	([
	(aCommandCharacter
		cover: (37 to: 53)
		declaredAt: (17 to: 33)) =
		($l coverAll:
			{57 to: 58}) ] valueCoveringAll:
		{55 to: 55}) ifTrue: [
		[
		(self coverAll:
			{69 to: 72}) rotateLeft ] valueCoveringAll:
			{74 to: 83} ]] valueCoveringAll:
		{60 to: 66}.
	[
	([
	(aCommandCharacter
		cover: (89 to: 105)
		declaredAt: (17 to: 33)) =
		($r coverAll:
			{109 to: 110}) ] valueCoveringAll:
		{107 to: 107}) ifTrue: [
		[
		(self coverAll:
			{121 to: 124}) rotateRight ] valueCoveringAll:
			{126 to: 136} ]] valueCoveringAll:
		{112 to: 118}.
	[
	([
	(aCommandCharacter
		cover: (142 to: 158)
		declaredAt: (17 to: 33)) =
		($f coverAll:
			{162 to: 163}) ] valueCoveringAll:
		{160 to: 160}) ifTrue: [
		[
		(self coverAll:
			{174 to: 177}) moveForward ] valueCoveringAll:
			{179 to: 189} ]] valueCoveringAll:
		{165 to: 171}.
	[
	([
	(aCommandCharacter
		cover: (195 to: 211)
		declaredAt: (17 to: 33)) =
		($b coverAll:
			{215 to: 216}) ] valueCoveringAll:
		{213 to: 213}) ifTrue: [
		[
		(self coverAll:
			{227 to: 230}) moveBackwards ] valueCoveringAll:
			{232 to: 244} ]] valueCoveringAll:
		{218 to: 224}.! !
!Behavior method!
rotateLeft
	^ (heading _ [
	(heading
		cover: (16 to: 22)
		declaredAt: (16 to: 22)) rotateLeft ] valueCoveringAll:
		{35 to: 44})
		cover: (27 to: 33)
		declaredAt: (16 to: 22).! !
!Behavior method!
rotateLeft
	^ [
	(East
		cover: (15 to: 18)
		declaredAt: (15 to: 18)) new ] valueCoveringAll:
		{20 to: 22}.! !
!Behavior method!
isHeadingEast
	^ [
	(heading
		cover: (20 to: 26)
		declaredAt: (20 to: 26)) is:
		(#East coverAll:
			{32 to: 36}) ] valueCoveringAll:
		{28 to: 30}.! !

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:22:44'!
PASSED!
!Behavior method!
rotateLeft
	^ [
	(West
		cover: (15 to: 18)
		declaredAt: (15 to: 18)) new ] valueCoveringAll:
		{20 to: 22}.! !
!Behavior method!
isHeadingNorth
	^ [
	(heading
		cover: (20 to: 26)
		declaredAt: (20 to: 26)) is:
		(#North coverAll:
			{32 to: 37}) ] valueCoveringAll:
		{28 to: 30}.! !
!Behavior method!
isHeadingWest
	^ [
	(heading
		cover: (19 to: 25)
		declaredAt: (19 to: 25)) is:
		(#West coverAll:
			{31 to: 35}) ] valueCoveringAll:
		{27 to: 29}.! !

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:22:44'!
PASSED!
!Behavior method!
rotateLeft
	^ [
	(North
		cover: (15 to: 19)
		declaredAt: (15 to: 19)) new ] valueCoveringAll:
		{21 to: 23}.! !

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 13:22:44'!
PASSED!
!Behavior method!
rotateLeft
	^ [
	(South
		cover: (15 to: 19)
		declaredAt: (15 to: 19)) new ] valueCoveringAll:
		{21 to: 23}.! !

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 13:22:44'!
PASSED!
!Behavior method!
rotateRight
	^ (heading _ [
	(heading
		cover: (17 to: 23)
		declaredAt: (17 to: 23)) rotateRight ] valueCoveringAll:
		{36 to: 46})
		cover: (28 to: 34)
		declaredAt: (17 to: 23).! !
!Behavior method!
rotateRight
	^ [
	(West
		cover: (16 to: 19)
		declaredAt: (16 to: 19)) new ] valueCoveringAll:
		{21 to: 23}.! !

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:22:44'!
PASSED!
!Behavior method!
rotateRight
	^ [
	(East
		cover: (16 to: 19)
		declaredAt: (16 to: 19)) new ] valueCoveringAll:
		{21 to: 23}.! !

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:22:44'!
PASSED!
!Behavior method!
rotateRight
	^ [
	(South
		cover: (16 to: 20)
		declaredAt: (16 to: 20)) new ] valueCoveringAll:
		{22 to: 24}.! !

!testRun: #MarsRoverTest #test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast stamp: 'AEC 5/16/2022 13:22:44'!
PASSED!
!Behavior method!
rotateRight
	^ [
	(North
		cover: (16 to: 20)
		declaredAt: (16 to: 20)) new ] valueCoveringAll:
		{22 to: 24}.! !

!testRun: #MarsRoverTest #test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest stamp: 'AEC 5/16/2022 13:22:44'!
PASSED!
!Behavior method!
moveForward
	[
	(heading
		cover: (16 to: 22)
		declaredAt: (16 to: 22)) moveForward:
		(self coverAll:
			{37 to: 40}) ] valueCoveringAll:
		{24 to: 35}.! !
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (28 to: 37)
		declaredAt: (14 to: 23)) moveSouth ] valueCoveringAll:
		{39 to: 47}.! !
!Behavior method!
moveSouth
	(position _ [
	(position
		cover: (13 to: 20)
		declaredAt: (13 to: 20)) -
		([
		(0 coverAll:
			{37 to: 37}) @
			(1 coverAll:
				{39 to: 39}) ] valueCoveringAll:
			{38 to: 38}) ] valueCoveringAll:
		{34 to: 34})
		cover: (25 to: 32)
		declaredAt: (13 to: 20).! !

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:22:44'!
PASSED!
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (28 to: 37)
		declaredAt: (14 to: 23)) moveNorth ] valueCoveringAll:
		{39 to: 47}.! !
!Behavior method!
moveNorth
	(position _ [
	(position
		cover: (13 to: 20)
		declaredAt: (13 to: 20)) +
		([
		(0 coverAll:
			{37 to: 37}) @
			(1 coverAll:
				{39 to: 39}) ] valueCoveringAll:
			{38 to: 38}) ] valueCoveringAll:
		{34 to: 34})
		cover: (25 to: 32)
		declaredAt: (13 to: 20).! !

!testRun: #MarsRoverTest #test11RoverAdvancesOneStepNorthWhenReceivesForwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:22:44'!
PASSED!
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (28 to: 37)
		declaredAt: (14 to: 23)) moveEast ] valueCoveringAll:
		{39 to: 46}.! !
!Behavior method!
moveEast
	(position _ [
	(position
		cover: (12 to: 19)
		declaredAt: (12 to: 19)) +
		([
		(1 coverAll:
			{36 to: 36}) @
			(0 coverAll:
				{38 to: 38}) ] valueCoveringAll:
			{37 to: 37}) ] valueCoveringAll:
		{33 to: 33})
		cover: (24 to: 31)
		declaredAt: (12 to: 19).! !

!testRun: #MarsRoverTest #test12RoverAdvancesOneStepEastWhenReceivesForwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:22:44'!
PASSED!
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (28 to: 37)
		declaredAt: (14 to: 23)) moveWest ] valueCoveringAll:
		{39 to: 46}.! !
!Behavior method!
moveWest
	(position _ [
	(position
		cover: (12 to: 19)
		declaredAt: (12 to: 19)) -
		([
		(1 coverAll:
			{36 to: 36}) @
			(0 coverAll:
				{38 to: 38}) ] valueCoveringAll:
			{37 to: 37}) ] valueCoveringAll:
		{33 to: 33})
		cover: (24 to: 31)
		declaredAt: (12 to: 19).! !

!testRun: #MarsRoverTest #test13RoverAdvancesOneStepWestWhenReceivesForwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:22:44'!
PASSED!
!Behavior method!
moveBackwards
	"	
	self isHeadingSouth ifTrue:[^position := 0@1].
	self isHeadingNorth ifTrue:[^position := 0@-1].
	self isHeadingEast ifTrue:[^position := -1@0].
	position := 1@0
"
	[
	(heading
		cover: (183 to: 189)
		declaredAt: (183 to: 189)) moveBackwards:
		(self coverAll:
			{206 to: 209}) ] valueCoveringAll:
		{191 to: 204}.! !
!Behavior method!
moveBackwards: aMarsRover
	^ [
	(aMarsRover
		cover: (30 to: 39)
		declaredAt: (16 to: 25)) moveNorth ] valueCoveringAll:
		{41 to: 49}.! !

!testRun: #MarsRoverTest #test14RoverMovesOneStepNorthWhenReceivesBackwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:22:44'!
PASSED!
!Behavior method!
moveBackwards: aMarsRover
	^ [
	(aMarsRover
		cover: (30 to: 39)
		declaredAt: (16 to: 25)) moveSouth ] valueCoveringAll:
		{41 to: 49}.! !

!testRun: #MarsRoverTest #test15RoverMovesOneStepSouthWhenReceivesBackwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:22:44'!
PASSED!
!Behavior method!
moveBackwards: aMarsRover
	^ [
	(aMarsRover
		cover: (30 to: 39)
		declaredAt: (16 to: 25)) moveWest ] valueCoveringAll:
		{41 to: 48}.! !

!testRun: #MarsRoverTest #test16RoverMovesOneStepWestWhenReceivesBackwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:22:44'!
PASSED!
!Behavior method!
moveBackwards: aMarsRover
	^ [
	(aMarsRover
		cover: (30 to: 39)
		declaredAt: (16 to: 25)) moveEast ] valueCoveringAll:
		{41 to: 48}.! !

!testRun: #MarsRoverTest #test17RoverMovesOneStepEastWhenReceivesBackwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:22:44'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesRightAndAdvancesOneStepEastWhenReceivesRotateRightAndForwardHeadingNorth stamp: 'AEC 5/16/2022 13:22:44'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightAndAdvancesTwoStepsEastWhenReceivesRotateRightOnceAndForwardTwiceHeadingNorth stamp: 'AEC 5/16/2022 13:22:44'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 13:23:19'!
test20RoverRaisesErrorWhenFirstCommandIsInvalid

	| rover |
	rover := MarsRover heading: North new.
	
	self should: [ rover process: 'xrff'. ] raise: Error description: MarsRover invalidCommandErrorDescription.
	self assert: rover isHeadingNorth.
	self assert: rover position equals: (0@0)! !
!MarsRover class methodsFor: 'nil' stamp: 'AEC 5/16/2022 13:23:45'!
invalidCommandErrorDescription

	^'Comando invalido, no se procesaran los comandos restantes.'! !
!MarsRover methodsFor: 'command-process' stamp: 'AEC 5/16/2022 13:26:00' prior: 50477942!
process: aCommandsString
	
	| validCommands |
	
	aCommandsString isEmpty ifTrue:[^self].
	
	validCommands := #($l $r $f $b).
	(validCommands includes: (aCommandsString first)) ifFalse: [ self error: self class invalidCommandErrorDescription ].
	
	aCommandsString do: [:command | self processCommand: command ]! !
!MarsRover methodsFor: 'command-process' stamp: 'AEC 5/16/2022 13:26:30' prior: 50478395!
process: aCommandsString
"	
	| validCommands |
	
	aCommandsString isEmpty ifTrue:[^self].
	
	validCommands := #($l $r $f $b).
	(validCommands includes: (aCommandsString first)) ifFalse: [ self error: self class invalidCommandErrorDescription ].
"
	
	aCommandsString do: [:command | self processCommand: command ]! !

!methodRemoval: MarsRover class #invalidCommandErrorDescription stamp: 'AEC 5/16/2022 13:26:40'!
invalidCommandErrorDescription

	^'Comando invalido, no se procesaran los comandos restantes.'!

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 13:26:44'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:26:44'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:26:44'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 13:26:44'!
PASSED!

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 13:26:44'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:26:44'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:26:44'!
PASSED!

!testRun: #MarsRoverTest #test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast stamp: 'AEC 5/16/2022 13:26:44'!
PASSED!

!testRun: #MarsRoverTest #test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest stamp: 'AEC 5/16/2022 13:26:44'!
PASSED!

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:26:44'!
PASSED!

!testRun: #MarsRoverTest #test11RoverAdvancesOneStepNorthWhenReceivesForwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:26:44'!
PASSED!

!testRun: #MarsRoverTest #test12RoverAdvancesOneStepEastWhenReceivesForwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:26:44'!
PASSED!

!testRun: #MarsRoverTest #test13RoverAdvancesOneStepWestWhenReceivesForwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:26:44'!
PASSED!

!testRun: #MarsRoverTest #test14RoverMovesOneStepNorthWhenReceivesBackwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:26:44'!
PASSED!

!testRun: #MarsRoverTest #test15RoverMovesOneStepSouthWhenReceivesBackwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:26:44'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesOneStepWestWhenReceivesBackwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:26:44'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesOneStepEastWhenReceivesBackwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:26:44'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesRightAndAdvancesOneStepEastWhenReceivesRotateRightAndForwardHeadingNorth stamp: 'AEC 5/16/2022 13:26:44'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightAndAdvancesTwoStepsEastWhenReceivesRotateRightOnceAndForwardTwiceHeadingNorth stamp: 'AEC 5/16/2022 13:26:44'!
PASSED!

!testRun: #MarsRoverTest #test20RoverRaisesErrorWhenFirstCommandIsInvalid stamp: 'AEC 5/16/2022 13:26:44'!
ERROR!

!testRun: #MarsRoverTest #test20RoverRaisesErrorWhenFirstCommandIsInvalid stamp: 'AEC 5/16/2022 13:26:44'!
ERROR!
!MarsRover class methodsFor: 'error descriptions' stamp: 'AEC 5/16/2022 13:26:49'!
invalidCommandErrorDescription
	self shouldBeImplemented.! !
!MarsRover class methodsFor: 'error descriptions' stamp: 'AEC 5/16/2022 13:26:57' prior: 50478515!
invalidCommandErrorDescription

	^'Comando invalido, no se procesaran los comandos restantes.'! !

!testRun: #MarsRoverTest #test20RoverRaisesErrorWhenFirstCommandIsInvalid stamp: 'AEC 5/16/2022 13:26:58'!
FAILURE!
!MarsRover methodsFor: 'command-process' stamp: 'AEC 5/16/2022 13:27:23' prior: 50478408!
process: aCommandsString
	
	| validCommands |
	
	aCommandsString isEmpty ifTrue:[^self].
	
	validCommands := #($l $r $f $b).
	(validCommands includes: (aCommandsString first)) ifFalse: [ self error: self class invalidCommandErrorDescription ].

	
	aCommandsString do: [:command | self processCommand: command ]! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 13:27:26'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:27:26'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:27:26'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 13:27:26'!
PASSED!

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 13:27:26'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:27:26'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:27:26'!
PASSED!

!testRun: #MarsRoverTest #test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast stamp: 'AEC 5/16/2022 13:27:26'!
PASSED!

!testRun: #MarsRoverTest #test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest stamp: 'AEC 5/16/2022 13:27:26'!
PASSED!

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:27:26'!
PASSED!

!testRun: #MarsRoverTest #test11RoverAdvancesOneStepNorthWhenReceivesForwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:27:26'!
PASSED!

!testRun: #MarsRoverTest #test12RoverAdvancesOneStepEastWhenReceivesForwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:27:26'!
PASSED!

!testRun: #MarsRoverTest #test13RoverAdvancesOneStepWestWhenReceivesForwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:27:26'!
PASSED!

!testRun: #MarsRoverTest #test14RoverMovesOneStepNorthWhenReceivesBackwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:27:26'!
PASSED!

!testRun: #MarsRoverTest #test15RoverMovesOneStepSouthWhenReceivesBackwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:27:26'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesOneStepWestWhenReceivesBackwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:27:26'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesOneStepEastWhenReceivesBackwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:27:26'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesRightAndAdvancesOneStepEastWhenReceivesRotateRightAndForwardHeadingNorth stamp: 'AEC 5/16/2022 13:27:26'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightAndAdvancesTwoStepsEastWhenReceivesRotateRightOnceAndForwardTwiceHeadingNorth stamp: 'AEC 5/16/2022 13:27:26'!
PASSED!

!testRun: #MarsRoverTest #test20RoverRaisesErrorWhenFirstCommandIsInvalid stamp: 'AEC 5/16/2022 13:27:26'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 13:28:46'!
test21RoverProcessesValidCommandsThenReachesInvalidCommandAndRaisesError

	| rover |
	rover := MarsRover heading: North new.
	
	self should: [ rover process: 'rffxbbl'. ] raise: Error description: MarsRover invalidCommandErrorDescription.
	self assert: rover isHeadingEast.
	self assert: rover position equals: (2@0)! !

!testRun: #MarsRoverTest #test21RoverProcessesValidCommandsThenReachesInvalidCommandAndRaisesError stamp: 'AEC 5/16/2022 13:28:49'!
FAILURE!
!MarsRover methodsFor: 'command-process' stamp: 'AEC 5/16/2022 13:29:18' prior: 50478530!
process: aCommandsString
	
	aCommandsString do: [:command | self processCommand: command ]! !
!MarsRover methodsFor: 'command-process' stamp: 'AEC 5/16/2022 13:29:27' prior: 50477830!
processCommand: aCommandCharacter

	aCommandCharacter = $l ifTrue:[ self rotateLeft ].
	aCommandCharacter = $r ifTrue:[ self rotateRight ].
	aCommandCharacter = $f ifTrue:[ self moveForward ].
	aCommandCharacter = $b ifTrue:[ self moveBackwards ].
	
	self error: self class invalidCommandErrorDescription! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 13:29:30'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:29:30'!
ERROR!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:29:30'!
ERROR!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 13:29:30'!
ERROR!

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 13:29:30'!
ERROR!

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:29:30'!
ERROR!

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:29:30'!
ERROR!

!testRun: #MarsRoverTest #test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast stamp: 'AEC 5/16/2022 13:29:30'!
ERROR!

!testRun: #MarsRoverTest #test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest stamp: 'AEC 5/16/2022 13:29:30'!
ERROR!

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:29:30'!
ERROR!

!testRun: #MarsRoverTest #test11RoverAdvancesOneStepNorthWhenReceivesForwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:29:30'!
ERROR!

!testRun: #MarsRoverTest #test12RoverAdvancesOneStepEastWhenReceivesForwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:29:30'!
ERROR!

!testRun: #MarsRoverTest #test13RoverAdvancesOneStepWestWhenReceivesForwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:29:31'!
ERROR!

!testRun: #MarsRoverTest #test14RoverMovesOneStepNorthWhenReceivesBackwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:29:31'!
ERROR!

!testRun: #MarsRoverTest #test15RoverMovesOneStepSouthWhenReceivesBackwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:29:31'!
ERROR!

!testRun: #MarsRoverTest #test16RoverMovesOneStepWestWhenReceivesBackwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:29:31'!
ERROR!

!testRun: #MarsRoverTest #test17RoverMovesOneStepEastWhenReceivesBackwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:29:31'!
ERROR!

!testRun: #MarsRoverTest #test18RoverRotatesRightAndAdvancesOneStepEastWhenReceivesRotateRightAndForwardHeadingNorth stamp: 'AEC 5/16/2022 13:29:31'!
ERROR!

!testRun: #MarsRoverTest #test19RoverRotatesRightAndAdvancesTwoStepsEastWhenReceivesRotateRightOnceAndForwardTwiceHeadingNorth stamp: 'AEC 5/16/2022 13:29:31'!
ERROR!

!testRun: #MarsRoverTest #test20RoverRaisesErrorWhenFirstCommandIsInvalid stamp: 'AEC 5/16/2022 13:29:31'!
PASSED!

!testRun: #MarsRoverTest #test21RoverProcessesValidCommandsThenReachesInvalidCommandAndRaisesError stamp: 'AEC 5/16/2022 13:29:31'!
FAILURE!
!MarsRover methodsFor: 'command-process' stamp: 'AEC 5/16/2022 13:29:50' prior: 50478651!
processCommand: aCommandCharacter

	aCommandCharacter = $l ifTrue:[ ^self rotateLeft ].
	aCommandCharacter = $r ifTrue:[ ^self rotateRight ].
	aCommandCharacter = $f ifTrue:[ ^self moveForward ].
	aCommandCharacter = $b ifTrue:[ ^self moveBackwards ].
	
	self error: self class invalidCommandErrorDescription! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 13:29:52'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:29:52'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:29:52'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 13:29:52'!
PASSED!

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 13:29:52'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:29:52'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:29:52'!
PASSED!

!testRun: #MarsRoverTest #test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast stamp: 'AEC 5/16/2022 13:29:52'!
PASSED!

!testRun: #MarsRoverTest #test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest stamp: 'AEC 5/16/2022 13:29:53'!
PASSED!

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:29:53'!
PASSED!

!testRun: #MarsRoverTest #test11RoverAdvancesOneStepNorthWhenReceivesForwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:29:53'!
PASSED!

!testRun: #MarsRoverTest #test12RoverAdvancesOneStepEastWhenReceivesForwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:29:53'!
PASSED!

!testRun: #MarsRoverTest #test13RoverAdvancesOneStepWestWhenReceivesForwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:29:53'!
PASSED!

!testRun: #MarsRoverTest #test14RoverMovesOneStepNorthWhenReceivesBackwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:29:53'!
PASSED!

!testRun: #MarsRoverTest #test15RoverMovesOneStepSouthWhenReceivesBackwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:29:53'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesOneStepWestWhenReceivesBackwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:29:53'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesOneStepEastWhenReceivesBackwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:29:53'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesRightAndAdvancesOneStepEastWhenReceivesRotateRightAndForwardHeadingNorth stamp: 'AEC 5/16/2022 13:29:53'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightAndAdvancesTwoStepsEastWhenReceivesRotateRightOnceAndForwardTwiceHeadingNorth stamp: 'AEC 5/16/2022 13:29:53'!
PASSED!

!testRun: #MarsRoverTest #test20RoverRaisesErrorWhenFirstCommandIsInvalid stamp: 'AEC 5/16/2022 13:29:53'!
PASSED!

!testRun: #MarsRoverTest #test21RoverProcessesValidCommandsThenReachesInvalidCommandAndRaisesError stamp: 'AEC 5/16/2022 13:29:53'!
PASSED!
!Behavior method!
heading: aDirection
	^ [
	(self coverAll:
		{25 to: 28})
		heading:
			(aDirection
				cover: (39 to: 48)
				declaredAt: (10 to: 19))
		at:
			([
			(0 coverAll:
				{54 to: 54}) @
				(0 coverAll:
					{55 to: 56}) ] valueCoveringAll:
				{55 to: 55}) ] valueCoveringAll:
		{30 to: 37. 50 to: 52}.! !
!Behavior method!
heading: aDirection at: aPosition
	^ [
	([
	(self coverAll:
		{39 to: 42}) new ] valueCoveringAll:
		{44 to: 46})
		initializeHeading:
			(aDirection
				cover: (67 to: 76)
				declaredAt: (10 to: 19))
		at:
			(aPosition
				cover: (82 to: 90)
				declaredAt: (25 to: 33)) ] valueCoveringAll:
		{48 to: 65. 78 to: 80}.! !
!Behavior method!
initializeHeading: aDirection at: aPosition
	(heading _ aDirection
		cover: (59 to: 68)
		declaredAt: (20 to: 29))
		cover: (48 to: 54)
		declaredAt: (48 to: 54).
	(position _ aPosition
		cover: (84 to: 92)
		declaredAt: (35 to: 43))
		cover: (72 to: 79)
		declaredAt: (72 to: 79).! !
!Behavior method!
process: aCommandsString
	[
	(aCommandsString
		cover: (29 to: 43)
		declaredAt: (10 to: 24)) do: [ :command |
		[
		(self coverAll:
			{61 to: 64}) processCommand:
			(command
				cover: (82 to: 88)
				declaredAt: (51 to: 57)) ] valueCoveringAll:
			{66 to: 80} ]] valueCoveringAll:
		{45 to: 47}.! !
!Behavior method!
position
	^ position
		cover: (14 to: 21)
		declaredAt: (14 to: 21).! !
!Behavior method!
isHeadingSouth
	^ [
	(heading
		cover: (21 to: 27)
		declaredAt: (21 to: 27)) is:
		(#South coverAll:
			{33 to: 38}) ] valueCoveringAll:
		{29 to: 31}.! !
!Behavior method!
is: aSymbol
	^ [
	([
	([
	(self coverAll:
		{16 to: 19}) class ] valueCoveringAll:
		{21 to: 25}) name ] valueCoveringAll:
		{27 to: 30}) =
		(aSymbol
			cover: (34 to: 40)
			declaredAt: (5 to: 11)) ] valueCoveringAll:
		{32 to: 32}.! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 13:31:35'!
PASSED!
!Behavior method!
processCommand: aCommandCharacter
	[
	([
	(aCommandCharacter
		cover: (37 to: 53)
		declaredAt: (17 to: 33)) =
		($l coverAll:
			{57 to: 58}) ] valueCoveringAll:
		{55 to: 55}) ifTrue: [ ^ [
		(self coverAll:
			{70 to: 73}) rotateLeft ] valueCoveringAll:
			{75 to: 84} ]] valueCoveringAll:
		{60 to: 66}.
	[
	([
	(aCommandCharacter
		cover: (90 to: 106)
		declaredAt: (17 to: 33)) =
		($r coverAll:
			{110 to: 111}) ] valueCoveringAll:
		{108 to: 108}) ifTrue: [ ^ [
		(self coverAll:
			{123 to: 126}) rotateRight ] valueCoveringAll:
			{128 to: 138} ]] valueCoveringAll:
		{113 to: 119}.
	[
	([
	(aCommandCharacter
		cover: (144 to: 160)
		declaredAt: (17 to: 33)) =
		($f coverAll:
			{164 to: 165}) ] valueCoveringAll:
		{162 to: 162}) ifTrue: [ ^ [
		(self coverAll:
			{177 to: 180}) moveForward ] valueCoveringAll:
			{182 to: 192} ]] valueCoveringAll:
		{167 to: 173}.
	[
	([
	(aCommandCharacter
		cover: (198 to: 214)
		declaredAt: (17 to: 33)) =
		($b coverAll:
			{218 to: 219}) ] valueCoveringAll:
		{216 to: 216}) ifTrue: [ ^ [
		(self coverAll:
			{231 to: 234}) moveBackwards ] valueCoveringAll:
			{236 to: 248} ]] valueCoveringAll:
		{221 to: 227}.
	[
	(self coverAll:
		{256 to: 259}) error:
		([
		([
		(self coverAll:
			{268 to: 271}) class ] valueCoveringAll:
			{273 to: 277}) invalidCommandErrorDescription ] valueCoveringAll:
			{279 to: 308}) ] valueCoveringAll:
		{261 to: 266}.! !
!Behavior method!
rotateLeft
	^ (heading _ [
	(heading
		cover: (16 to: 22)
		declaredAt: (16 to: 22)) rotateLeft ] valueCoveringAll:
		{35 to: 44})
		cover: (27 to: 33)
		declaredAt: (16 to: 22).! !
!Behavior method!
rotateLeft
	^ [
	(East
		cover: (15 to: 18)
		declaredAt: (15 to: 18)) new ] valueCoveringAll:
		{20 to: 22}.! !
!Behavior method!
isHeadingEast
	^ [
	(heading
		cover: (20 to: 26)
		declaredAt: (20 to: 26)) is:
		(#East coverAll:
			{32 to: 36}) ] valueCoveringAll:
		{28 to: 30}.! !

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:31:35'!
PASSED!
!Behavior method!
rotateLeft
	^ [
	(West
		cover: (15 to: 18)
		declaredAt: (15 to: 18)) new ] valueCoveringAll:
		{20 to: 22}.! !
!Behavior method!
isHeadingNorth
	^ [
	(heading
		cover: (20 to: 26)
		declaredAt: (20 to: 26)) is:
		(#North coverAll:
			{32 to: 37}) ] valueCoveringAll:
		{28 to: 30}.! !
!Behavior method!
isHeadingWest
	^ [
	(heading
		cover: (19 to: 25)
		declaredAt: (19 to: 25)) is:
		(#West coverAll:
			{31 to: 35}) ] valueCoveringAll:
		{27 to: 29}.! !

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:31:35'!
PASSED!
!Behavior method!
rotateLeft
	^ [
	(North
		cover: (15 to: 19)
		declaredAt: (15 to: 19)) new ] valueCoveringAll:
		{21 to: 23}.! !

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 13:31:35'!
PASSED!
!Behavior method!
rotateLeft
	^ [
	(South
		cover: (15 to: 19)
		declaredAt: (15 to: 19)) new ] valueCoveringAll:
		{21 to: 23}.! !

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 13:31:35'!
PASSED!
!Behavior method!
rotateRight
	^ (heading _ [
	(heading
		cover: (17 to: 23)
		declaredAt: (17 to: 23)) rotateRight ] valueCoveringAll:
		{36 to: 46})
		cover: (28 to: 34)
		declaredAt: (17 to: 23).! !
!Behavior method!
rotateRight
	^ [
	(West
		cover: (16 to: 19)
		declaredAt: (16 to: 19)) new ] valueCoveringAll:
		{21 to: 23}.! !

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:31:35'!
PASSED!
!Behavior method!
rotateRight
	^ [
	(East
		cover: (16 to: 19)
		declaredAt: (16 to: 19)) new ] valueCoveringAll:
		{21 to: 23}.! !

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:31:35'!
PASSED!
!Behavior method!
rotateRight
	^ [
	(South
		cover: (16 to: 20)
		declaredAt: (16 to: 20)) new ] valueCoveringAll:
		{22 to: 24}.! !

!testRun: #MarsRoverTest #test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast stamp: 'AEC 5/16/2022 13:31:35'!
PASSED!
!Behavior method!
rotateRight
	^ [
	(North
		cover: (16 to: 20)
		declaredAt: (16 to: 20)) new ] valueCoveringAll:
		{22 to: 24}.! !

!testRun: #MarsRoverTest #test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest stamp: 'AEC 5/16/2022 13:31:35'!
PASSED!
!Behavior method!
moveForward
	[
	(heading
		cover: (16 to: 22)
		declaredAt: (16 to: 22)) moveForward:
		(self coverAll:
			{37 to: 40}) ] valueCoveringAll:
		{24 to: 35}.! !
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (28 to: 37)
		declaredAt: (14 to: 23)) moveSouth ] valueCoveringAll:
		{39 to: 47}.! !
!Behavior method!
moveSouth
	(position _ [
	(position
		cover: (13 to: 20)
		declaredAt: (13 to: 20)) -
		([
		(0 coverAll:
			{37 to: 37}) @
			(1 coverAll:
				{39 to: 39}) ] valueCoveringAll:
			{38 to: 38}) ] valueCoveringAll:
		{34 to: 34})
		cover: (25 to: 32)
		declaredAt: (13 to: 20).! !

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:31:35'!
PASSED!
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (28 to: 37)
		declaredAt: (14 to: 23)) moveNorth ] valueCoveringAll:
		{39 to: 47}.! !
!Behavior method!
moveNorth
	(position _ [
	(position
		cover: (13 to: 20)
		declaredAt: (13 to: 20)) +
		([
		(0 coverAll:
			{37 to: 37}) @
			(1 coverAll:
				{39 to: 39}) ] valueCoveringAll:
			{38 to: 38}) ] valueCoveringAll:
		{34 to: 34})
		cover: (25 to: 32)
		declaredAt: (13 to: 20).! !

!testRun: #MarsRoverTest #test11RoverAdvancesOneStepNorthWhenReceivesForwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:31:35'!
PASSED!
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (28 to: 37)
		declaredAt: (14 to: 23)) moveEast ] valueCoveringAll:
		{39 to: 46}.! !
!Behavior method!
moveEast
	(position _ [
	(position
		cover: (12 to: 19)
		declaredAt: (12 to: 19)) +
		([
		(1 coverAll:
			{36 to: 36}) @
			(0 coverAll:
				{38 to: 38}) ] valueCoveringAll:
			{37 to: 37}) ] valueCoveringAll:
		{33 to: 33})
		cover: (24 to: 31)
		declaredAt: (12 to: 19).! !

!testRun: #MarsRoverTest #test12RoverAdvancesOneStepEastWhenReceivesForwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:31:35'!
PASSED!
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (28 to: 37)
		declaredAt: (14 to: 23)) moveWest ] valueCoveringAll:
		{39 to: 46}.! !
!Behavior method!
moveWest
	(position _ [
	(position
		cover: (12 to: 19)
		declaredAt: (12 to: 19)) -
		([
		(1 coverAll:
			{36 to: 36}) @
			(0 coverAll:
				{38 to: 38}) ] valueCoveringAll:
			{37 to: 37}) ] valueCoveringAll:
		{33 to: 33})
		cover: (24 to: 31)
		declaredAt: (12 to: 19).! !

!testRun: #MarsRoverTest #test13RoverAdvancesOneStepWestWhenReceivesForwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:31:35'!
PASSED!
!Behavior method!
moveBackwards
	"	
	self isHeadingSouth ifTrue:[^position := 0@1].
	self isHeadingNorth ifTrue:[^position := 0@-1].
	self isHeadingEast ifTrue:[^position := -1@0].
	position := 1@0
"
	[
	(heading
		cover: (183 to: 189)
		declaredAt: (183 to: 189)) moveBackwards:
		(self coverAll:
			{206 to: 209}) ] valueCoveringAll:
		{191 to: 204}.! !
!Behavior method!
moveBackwards: aMarsRover
	^ [
	(aMarsRover
		cover: (30 to: 39)
		declaredAt: (16 to: 25)) moveNorth ] valueCoveringAll:
		{41 to: 49}.! !

!testRun: #MarsRoverTest #test14RoverMovesOneStepNorthWhenReceivesBackwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:31:35'!
PASSED!
!Behavior method!
moveBackwards: aMarsRover
	^ [
	(aMarsRover
		cover: (30 to: 39)
		declaredAt: (16 to: 25)) moveSouth ] valueCoveringAll:
		{41 to: 49}.! !

!testRun: #MarsRoverTest #test15RoverMovesOneStepSouthWhenReceivesBackwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:31:35'!
PASSED!
!Behavior method!
moveBackwards: aMarsRover
	^ [
	(aMarsRover
		cover: (30 to: 39)
		declaredAt: (16 to: 25)) moveWest ] valueCoveringAll:
		{41 to: 48}.! !

!testRun: #MarsRoverTest #test16RoverMovesOneStepWestWhenReceivesBackwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:31:35'!
PASSED!
!Behavior method!
moveBackwards: aMarsRover
	^ [
	(aMarsRover
		cover: (30 to: 39)
		declaredAt: (16 to: 25)) moveEast ] valueCoveringAll:
		{41 to: 48}.! !

!testRun: #MarsRoverTest #test17RoverMovesOneStepEastWhenReceivesBackwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:31:35'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesRightAndAdvancesOneStepEastWhenReceivesRotateRightAndForwardHeadingNorth stamp: 'AEC 5/16/2022 13:31:35'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightAndAdvancesTwoStepsEastWhenReceivesRotateRightOnceAndForwardTwiceHeadingNorth stamp: 'AEC 5/16/2022 13:31:35'!
PASSED!
!Behavior method!
invalidCommandErrorDescription
	^ 'Comando invalido, no se procesaran los comandos restantes.' coverAll:
		{35 to: 94}.! !

!testRun: #MarsRoverTest #test20RoverRaisesErrorWhenFirstCommandIsInvalid stamp: 'AEC 5/16/2022 13:31:35'!
PASSED!

!testRun: #MarsRoverTest #test21RoverProcessesValidCommandsThenReachesInvalidCommandAndRaisesError stamp: 'AEC 5/16/2022 13:31:35'!
PASSED!
!MarsRoverTest methodsFor: 'nil' stamp: 'AEC 5/16/2022 13:32:25'!
marsRoverHeadingSouth! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'AEC 5/16/2022 13:32:30'!
marsRoverHeadingNorth! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'AEC 5/16/2022 13:32:33'!
marsRoverHeadingWest! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'AEC 5/16/2022 13:32:36'!
marsRoverHeadingEast! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 13:33:30' prior: 50479224!
marsRoverHeadingSouth

	^ MarsRover heading: South new! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 13:33:30' prior: 50475357!
test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth

	| rover |
	rover := self marsRoverHeadingSouth.
	
	rover process: 'f'.
	
	self assert: rover position equals: (0@-1).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 13:33:30' prior: 50476589!
test14RoverMovesOneStepNorthWhenReceivesBackwardAndIsHeadingSouth

	| rover |
	rover := self marsRoverHeadingSouth.
	
	rover process: 'b'.
	
	self assert: rover position equals: (0@1).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 13:33:30' prior: 50474900!
test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth

	| rover |
	rover := self marsRoverHeadingSouth.
	
	rover process: 'l'.
	
	self assert: rover position equals: (0@0).
	self deny: rover isHeadingSouth.
	self assert: rover isHeadingEast! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 13:33:30' prior: 50474890!
test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString

	| rover |
	rover := self marsRoverHeadingSouth.
	
	rover process: ''.
	
	self assert: rover position equals: (0@0).
	self assert: rover isHeadingSouth.! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 13:33:30' prior: 50475072!
test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth

	| rover |
	rover := self marsRoverHeadingSouth.
	
	rover process: 'r'.
	
	self assert: rover position equals: (0@0).
	self deny: rover isHeadingSouth.
	self assert: rover isHeadingWest! !

!methodRemoval: MarsRoverTest #marsRoverHeadingEast stamp: 'AEC 5/16/2022 13:33:56'!
marsRoverHeadingEast!

!methodRemoval: MarsRoverTest #marsRoverHeadingNorth stamp: 'AEC 5/16/2022 13:33:58'!
marsRoverHeadingNorth!

!methodRemoval: MarsRoverTest #marsRoverHeadingWest stamp: 'AEC 5/16/2022 13:33:59'!
marsRoverHeadingWest!
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 13:34:19'!
marsRoverHeadingNorth

	^ MarsRover heading: North new! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 13:34:19' prior: 50477695!
test18RoverRotatesRightAndAdvancesOneStepEastWhenReceivesRotateRightAndForwardHeadingNorth

	| rover |
	rover := self marsRoverHeadingNorth.
	
	rover process: 'rf'.
	
	self assert: rover isHeadingEast.
	self assert: rover position equals: (1@0)! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 13:34:19' prior: 50474911!
test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth

	| rover |
	rover := self marsRoverHeadingNorth.
	
	rover process: 'l'.
	
	self assert: rover position equals: (0@0).
	self deny: rover isHeadingNorth.
	self assert: rover isHeadingWest! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 13:34:19' prior: 50477925!
test19RoverRotatesRightAndAdvancesTwoStepsEastWhenReceivesRotateRightOnceAndForwardTwiceHeadingNorth

	| rover |
	rover := self marsRoverHeadingNorth.
	
	rover process: 'rff'.
	
	self assert: rover isHeadingEast.
	self assert: rover position equals: (2@0)! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 13:34:19' prior: 50478627!
test21RoverProcessesValidCommandsThenReachesInvalidCommandAndRaisesError

	| rover |
	rover := self marsRoverHeadingNorth.
	
	self should: [ rover process: 'rffxbbl'. ] raise: Error description: MarsRover invalidCommandErrorDescription.
	self assert: rover isHeadingEast.
	self assert: rover position equals: (2@0)! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 13:34:19' prior: 50475150!
test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth

	| rover |
	rover := self marsRoverHeadingNorth.
	
	rover process: 'r'.
	
	self assert: rover position equals: (0@0).
	self deny: rover isHeadingNorth.
	self assert: rover isHeadingEast! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 13:34:19' prior: 50476746!
test15RoverMovesOneStepSouthWhenReceivesBackwardAndIsHeadingNorth

	| rover |
	rover := self marsRoverHeadingNorth.
	
	rover process: 'b'.
	
	self assert: rover position equals: (0@-1).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 13:34:19' prior: 50478377!
test20RoverRaisesErrorWhenFirstCommandIsInvalid

	| rover |
	rover := self marsRoverHeadingNorth.
	
	self should: [ rover process: 'xrff'. ] raise: Error description: MarsRover invalidCommandErrorDescription.
	self assert: rover isHeadingNorth.
	self assert: rover position equals: (0@0)! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 13:34:19' prior: 50475652!
test11RoverAdvancesOneStepNorthWhenReceivesForwardAndIsHeadingNorth

	| rover |
	rover := self marsRoverHeadingNorth.
	
	rover process: 'f'.
	
	self assert: rover position equals: (0@1).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 13:34:33'!
marsRoverHeadingEast

	^ MarsRover heading: East new! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 13:34:34' prior: 50475249!
test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast

	| rover |
	rover := self marsRoverHeadingEast.
	
	rover process: 'r'.
	
	self assert: rover position equals: (0@0).
	self deny: rover isHeadingEast.
	self assert: rover isHeadingSouth! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 13:34:34' prior: 50474922!
test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast

	| rover |
	rover := self marsRoverHeadingEast.
	
	rover process: 'l'.
	
	self assert: rover position equals: (0@0).
	self deny: rover isHeadingEast.
	self assert: rover isHeadingNorth! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 13:34:34' prior: 50476911!
test16RoverMovesOneStepWestWhenReceivesBackwardAndIsHeadingEast

	| rover |
	rover := self marsRoverHeadingEast.
	
	rover process: 'b'.
	
	self assert: rover position equals: (-1@0).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 13:34:34' prior: 50475915!
test12RoverAdvancesOneStepEastWhenReceivesForwardAndIsHeadingEast

	| rover |
	rover := self marsRoverHeadingEast.
	
	rover process: 'f'.
	
	self assert: rover position equals: (1@0).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 13:34:46'!
marsRoverHeadingWest

	^ MarsRover heading: West new! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 13:34:46' prior: 50474933!
test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest

	| rover |
	rover := self marsRoverHeadingWest.
	
	rover process: 'l'.
	
	self assert: rover position equals: (0@0).
	self deny: rover isHeadingWest.
	self assert: rover isHeadingSouth! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 13:34:46' prior: 50475990!
test13RoverAdvancesOneStepWestWhenReceivesForwardAndIsHeadingWest

	| rover |
	rover := self marsRoverHeadingWest.
	
	rover process: 'f'.
	
	self assert: rover position equals: (-1@0).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 13:34:46' prior: 50477146!
test17RoverMovesOneStepEastWhenReceivesBackwardAndIsHeadingWest

	| rover |
	rover := self marsRoverHeadingWest.
	
	rover process: 'b'.
	
	self assert: rover position equals: (1@0).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AEC 5/16/2022 13:34:46' prior: 50475301!
test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest

	| rover |
	rover := self marsRoverHeadingWest.
	
	rover process: 'r'.
	
	self assert: rover position equals: (0@0).
	self deny: rover isHeadingWest.
	self assert: rover isHeadingNorth! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 13:36:38'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:36:39'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:36:39'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 13:36:39'!
PASSED!

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 13:36:39'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:36:39'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:36:39'!
PASSED!

!testRun: #MarsRoverTest #test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast stamp: 'AEC 5/16/2022 13:36:39'!
PASSED!

!testRun: #MarsRoverTest #test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest stamp: 'AEC 5/16/2022 13:36:39'!
PASSED!

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:36:39'!
PASSED!

!testRun: #MarsRoverTest #test11RoverAdvancesOneStepNorthWhenReceivesForwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:36:39'!
PASSED!

!testRun: #MarsRoverTest #test12RoverAdvancesOneStepEastWhenReceivesForwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:36:39'!
PASSED!

!testRun: #MarsRoverTest #test13RoverAdvancesOneStepWestWhenReceivesForwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:36:39'!
PASSED!

!testRun: #MarsRoverTest #test14RoverMovesOneStepNorthWhenReceivesBackwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:36:39'!
PASSED!

!testRun: #MarsRoverTest #test15RoverMovesOneStepSouthWhenReceivesBackwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:36:39'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesOneStepWestWhenReceivesBackwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:36:39'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesOneStepEastWhenReceivesBackwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:36:39'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesRightAndAdvancesOneStepEastWhenReceivesRotateRightAndForwardHeadingNorth stamp: 'AEC 5/16/2022 13:36:39'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightAndAdvancesTwoStepsEastWhenReceivesRotateRightOnceAndForwardTwiceHeadingNorth stamp: 'AEC 5/16/2022 13:36:39'!
PASSED!

!testRun: #MarsRoverTest #test20RoverRaisesErrorWhenFirstCommandIsInvalid stamp: 'AEC 5/16/2022 13:36:39'!
PASSED!

!testRun: #MarsRoverTest #test21RoverProcessesValidCommandsThenReachesInvalidCommandAndRaisesError stamp: 'AEC 5/16/2022 13:36:39'!
PASSED!
!Behavior method!
heading: aDirection
	^ [
	(self coverAll:
		{25 to: 28})
		heading:
			(aDirection
				cover: (39 to: 48)
				declaredAt: (10 to: 19))
		at:
			([
			(0 coverAll:
				{54 to: 54}) @
				(0 coverAll:
					{55 to: 56}) ] valueCoveringAll:
				{55 to: 55}) ] valueCoveringAll:
		{30 to: 37. 50 to: 52}.! !
!Behavior method!
heading: aDirection at: aPosition
	^ [
	([
	(self coverAll:
		{39 to: 42}) new ] valueCoveringAll:
		{44 to: 46})
		initializeHeading:
			(aDirection
				cover: (67 to: 76)
				declaredAt: (10 to: 19))
		at:
			(aPosition
				cover: (82 to: 90)
				declaredAt: (25 to: 33)) ] valueCoveringAll:
		{48 to: 65. 78 to: 80}.! !
!Behavior method!
initializeHeading: aDirection at: aPosition
	(heading _ aDirection
		cover: (59 to: 68)
		declaredAt: (20 to: 29))
		cover: (48 to: 54)
		declaredAt: (48 to: 54).
	(position _ aPosition
		cover: (84 to: 92)
		declaredAt: (35 to: 43))
		cover: (72 to: 79)
		declaredAt: (72 to: 79).! !
!Behavior method!
process: aCommandsString
	[
	(aCommandsString
		cover: (29 to: 43)
		declaredAt: (10 to: 24)) do: [ :command |
		[
		(self coverAll:
			{61 to: 64}) processCommand:
			(command
				cover: (82 to: 88)
				declaredAt: (51 to: 57)) ] valueCoveringAll:
			{66 to: 80} ]] valueCoveringAll:
		{45 to: 47}.! !
!Behavior method!
position
	^ position
		cover: (14 to: 21)
		declaredAt: (14 to: 21).! !
!Behavior method!
isHeadingSouth
	^ [
	(heading
		cover: (21 to: 27)
		declaredAt: (21 to: 27)) is:
		(#South coverAll:
			{33 to: 38}) ] valueCoveringAll:
		{29 to: 31}.! !
!Behavior method!
is: aSymbol
	^ [
	([
	([
	(self coverAll:
		{16 to: 19}) class ] valueCoveringAll:
		{21 to: 25}) name ] valueCoveringAll:
		{27 to: 30}) =
		(aSymbol
			cover: (34 to: 40)
			declaredAt: (5 to: 11)) ] valueCoveringAll:
		{32 to: 32}.! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 13:36:43'!
PASSED!
!Behavior method!
processCommand: aCommandCharacter
	[
	([
	(aCommandCharacter
		cover: (37 to: 53)
		declaredAt: (17 to: 33)) =
		($l coverAll:
			{57 to: 58}) ] valueCoveringAll:
		{55 to: 55}) ifTrue: [ ^ [
		(self coverAll:
			{70 to: 73}) rotateLeft ] valueCoveringAll:
			{75 to: 84} ]] valueCoveringAll:
		{60 to: 66}.
	[
	([
	(aCommandCharacter
		cover: (90 to: 106)
		declaredAt: (17 to: 33)) =
		($r coverAll:
			{110 to: 111}) ] valueCoveringAll:
		{108 to: 108}) ifTrue: [ ^ [
		(self coverAll:
			{123 to: 126}) rotateRight ] valueCoveringAll:
			{128 to: 138} ]] valueCoveringAll:
		{113 to: 119}.
	[
	([
	(aCommandCharacter
		cover: (144 to: 160)
		declaredAt: (17 to: 33)) =
		($f coverAll:
			{164 to: 165}) ] valueCoveringAll:
		{162 to: 162}) ifTrue: [ ^ [
		(self coverAll:
			{177 to: 180}) moveForward ] valueCoveringAll:
			{182 to: 192} ]] valueCoveringAll:
		{167 to: 173}.
	[
	([
	(aCommandCharacter
		cover: (198 to: 214)
		declaredAt: (17 to: 33)) =
		($b coverAll:
			{218 to: 219}) ] valueCoveringAll:
		{216 to: 216}) ifTrue: [ ^ [
		(self coverAll:
			{231 to: 234}) moveBackwards ] valueCoveringAll:
			{236 to: 248} ]] valueCoveringAll:
		{221 to: 227}.
	[
	(self coverAll:
		{256 to: 259}) error:
		([
		([
		(self coverAll:
			{268 to: 271}) class ] valueCoveringAll:
			{273 to: 277}) invalidCommandErrorDescription ] valueCoveringAll:
			{279 to: 308}) ] valueCoveringAll:
		{261 to: 266}.! !
!Behavior method!
rotateLeft
	^ (heading _ [
	(heading
		cover: (16 to: 22)
		declaredAt: (16 to: 22)) rotateLeft ] valueCoveringAll:
		{35 to: 44})
		cover: (27 to: 33)
		declaredAt: (16 to: 22).! !
!Behavior method!
rotateLeft
	^ [
	(East
		cover: (15 to: 18)
		declaredAt: (15 to: 18)) new ] valueCoveringAll:
		{20 to: 22}.! !
!Behavior method!
isHeadingEast
	^ [
	(heading
		cover: (20 to: 26)
		declaredAt: (20 to: 26)) is:
		(#East coverAll:
			{32 to: 36}) ] valueCoveringAll:
		{28 to: 30}.! !

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:36:43'!
PASSED!
!Behavior method!
rotateLeft
	^ [
	(West
		cover: (15 to: 18)
		declaredAt: (15 to: 18)) new ] valueCoveringAll:
		{20 to: 22}.! !
!Behavior method!
isHeadingNorth
	^ [
	(heading
		cover: (20 to: 26)
		declaredAt: (20 to: 26)) is:
		(#North coverAll:
			{32 to: 37}) ] valueCoveringAll:
		{28 to: 30}.! !
!Behavior method!
isHeadingWest
	^ [
	(heading
		cover: (19 to: 25)
		declaredAt: (19 to: 25)) is:
		(#West coverAll:
			{31 to: 35}) ] valueCoveringAll:
		{27 to: 29}.! !

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:36:43'!
PASSED!
!Behavior method!
rotateLeft
	^ [
	(North
		cover: (15 to: 19)
		declaredAt: (15 to: 19)) new ] valueCoveringAll:
		{21 to: 23}.! !

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 13:36:43'!
PASSED!
!Behavior method!
rotateLeft
	^ [
	(South
		cover: (15 to: 19)
		declaredAt: (15 to: 19)) new ] valueCoveringAll:
		{21 to: 23}.! !

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 13:36:43'!
PASSED!
!Behavior method!
rotateRight
	^ (heading _ [
	(heading
		cover: (17 to: 23)
		declaredAt: (17 to: 23)) rotateRight ] valueCoveringAll:
		{36 to: 46})
		cover: (28 to: 34)
		declaredAt: (17 to: 23).! !
!Behavior method!
rotateRight
	^ [
	(West
		cover: (16 to: 19)
		declaredAt: (16 to: 19)) new ] valueCoveringAll:
		{21 to: 23}.! !

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:36:43'!
PASSED!
!Behavior method!
rotateRight
	^ [
	(East
		cover: (16 to: 19)
		declaredAt: (16 to: 19)) new ] valueCoveringAll:
		{21 to: 23}.! !

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:36:43'!
PASSED!
!Behavior method!
rotateRight
	^ [
	(South
		cover: (16 to: 20)
		declaredAt: (16 to: 20)) new ] valueCoveringAll:
		{22 to: 24}.! !

!testRun: #MarsRoverTest #test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast stamp: 'AEC 5/16/2022 13:36:43'!
PASSED!
!Behavior method!
rotateRight
	^ [
	(North
		cover: (16 to: 20)
		declaredAt: (16 to: 20)) new ] valueCoveringAll:
		{22 to: 24}.! !

!testRun: #MarsRoverTest #test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest stamp: 'AEC 5/16/2022 13:36:43'!
PASSED!
!Behavior method!
moveForward
	[
	(heading
		cover: (16 to: 22)
		declaredAt: (16 to: 22)) moveForward:
		(self coverAll:
			{37 to: 40}) ] valueCoveringAll:
		{24 to: 35}.! !
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (28 to: 37)
		declaredAt: (14 to: 23)) moveSouth ] valueCoveringAll:
		{39 to: 47}.! !
!Behavior method!
moveSouth
	(position _ [
	(position
		cover: (13 to: 20)
		declaredAt: (13 to: 20)) -
		([
		(0 coverAll:
			{37 to: 37}) @
			(1 coverAll:
				{39 to: 39}) ] valueCoveringAll:
			{38 to: 38}) ] valueCoveringAll:
		{34 to: 34})
		cover: (25 to: 32)
		declaredAt: (13 to: 20).! !

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:36:43'!
PASSED!
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (28 to: 37)
		declaredAt: (14 to: 23)) moveNorth ] valueCoveringAll:
		{39 to: 47}.! !
!Behavior method!
moveNorth
	(position _ [
	(position
		cover: (13 to: 20)
		declaredAt: (13 to: 20)) +
		([
		(0 coverAll:
			{37 to: 37}) @
			(1 coverAll:
				{39 to: 39}) ] valueCoveringAll:
			{38 to: 38}) ] valueCoveringAll:
		{34 to: 34})
		cover: (25 to: 32)
		declaredAt: (13 to: 20).! !

!testRun: #MarsRoverTest #test11RoverAdvancesOneStepNorthWhenReceivesForwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:36:43'!
PASSED!
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (28 to: 37)
		declaredAt: (14 to: 23)) moveEast ] valueCoveringAll:
		{39 to: 46}.! !
!Behavior method!
moveEast
	(position _ [
	(position
		cover: (12 to: 19)
		declaredAt: (12 to: 19)) +
		([
		(1 coverAll:
			{36 to: 36}) @
			(0 coverAll:
				{38 to: 38}) ] valueCoveringAll:
			{37 to: 37}) ] valueCoveringAll:
		{33 to: 33})
		cover: (24 to: 31)
		declaredAt: (12 to: 19).! !

!testRun: #MarsRoverTest #test12RoverAdvancesOneStepEastWhenReceivesForwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:36:43'!
PASSED!
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (28 to: 37)
		declaredAt: (14 to: 23)) moveWest ] valueCoveringAll:
		{39 to: 46}.! !
!Behavior method!
moveWest
	(position _ [
	(position
		cover: (12 to: 19)
		declaredAt: (12 to: 19)) -
		([
		(1 coverAll:
			{36 to: 36}) @
			(0 coverAll:
				{38 to: 38}) ] valueCoveringAll:
			{37 to: 37}) ] valueCoveringAll:
		{33 to: 33})
		cover: (24 to: 31)
		declaredAt: (12 to: 19).! !

!testRun: #MarsRoverTest #test13RoverAdvancesOneStepWestWhenReceivesForwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:36:43'!
PASSED!
!Behavior method!
moveBackwards
	"	
	self isHeadingSouth ifTrue:[^position := 0@1].
	self isHeadingNorth ifTrue:[^position := 0@-1].
	self isHeadingEast ifTrue:[^position := -1@0].
	position := 1@0
"
	[
	(heading
		cover: (183 to: 189)
		declaredAt: (183 to: 189)) moveBackwards:
		(self coverAll:
			{206 to: 209}) ] valueCoveringAll:
		{191 to: 204}.! !
!Behavior method!
moveBackwards: aMarsRover
	^ [
	(aMarsRover
		cover: (30 to: 39)
		declaredAt: (16 to: 25)) moveNorth ] valueCoveringAll:
		{41 to: 49}.! !

!testRun: #MarsRoverTest #test14RoverMovesOneStepNorthWhenReceivesBackwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:36:43'!
PASSED!
!Behavior method!
moveBackwards: aMarsRover
	^ [
	(aMarsRover
		cover: (30 to: 39)
		declaredAt: (16 to: 25)) moveSouth ] valueCoveringAll:
		{41 to: 49}.! !

!testRun: #MarsRoverTest #test15RoverMovesOneStepSouthWhenReceivesBackwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:36:43'!
PASSED!
!Behavior method!
moveBackwards: aMarsRover
	^ [
	(aMarsRover
		cover: (30 to: 39)
		declaredAt: (16 to: 25)) moveWest ] valueCoveringAll:
		{41 to: 48}.! !

!testRun: #MarsRoverTest #test16RoverMovesOneStepWestWhenReceivesBackwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:36:43'!
PASSED!
!Behavior method!
moveBackwards: aMarsRover
	^ [
	(aMarsRover
		cover: (30 to: 39)
		declaredAt: (16 to: 25)) moveEast ] valueCoveringAll:
		{41 to: 48}.! !

!testRun: #MarsRoverTest #test17RoverMovesOneStepEastWhenReceivesBackwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:36:43'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesRightAndAdvancesOneStepEastWhenReceivesRotateRightAndForwardHeadingNorth stamp: 'AEC 5/16/2022 13:36:43'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightAndAdvancesTwoStepsEastWhenReceivesRotateRightOnceAndForwardTwiceHeadingNorth stamp: 'AEC 5/16/2022 13:36:43'!
PASSED!
!Behavior method!
invalidCommandErrorDescription
	^ 'Comando invalido, no se procesaran los comandos restantes.' coverAll:
		{35 to: 94}.! !

!testRun: #MarsRoverTest #test20RoverRaisesErrorWhenFirstCommandIsInvalid stamp: 'AEC 5/16/2022 13:36:43'!
PASSED!

!testRun: #MarsRoverTest #test21RoverProcessesValidCommandsThenReachesInvalidCommandAndRaisesError stamp: 'AEC 5/16/2022 13:36:43'!
PASSED!
!MarsRover methodsFor: 'movement' stamp: 'AEC 5/16/2022 13:37:23' prior: 50477248!
moveBackwards

	heading moveBackwards: self! !

----SNAPSHOT----(16 May 2022 13:38:14) CuisUniversity-5096.image priorSource: 4557982!

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 13:46:53'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:46:53'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:46:53'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 13:46:53'!
PASSED!

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 13:46:53'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:46:53'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:46:53'!
PASSED!

!testRun: #MarsRoverTest #test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast stamp: 'AEC 5/16/2022 13:46:53'!
PASSED!

!testRun: #MarsRoverTest #test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest stamp: 'AEC 5/16/2022 13:46:53'!
PASSED!

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:46:53'!
PASSED!

!testRun: #MarsRoverTest #test11RoverAdvancesOneStepNorthWhenReceivesForwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:46:53'!
PASSED!

!testRun: #MarsRoverTest #test12RoverAdvancesOneStepEastWhenReceivesForwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:46:53'!
PASSED!

!testRun: #MarsRoverTest #test13RoverAdvancesOneStepWestWhenReceivesForwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:46:53'!
PASSED!

!testRun: #MarsRoverTest #test14RoverMovesOneStepNorthWhenReceivesBackwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:46:53'!
PASSED!

!testRun: #MarsRoverTest #test15RoverMovesOneStepSouthWhenReceivesBackwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:46:53'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesOneStepWestWhenReceivesBackwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:46:53'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesOneStepEastWhenReceivesBackwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:46:53'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesRightAndAdvancesOneStepEastWhenReceivesRotateRightAndForwardHeadingNorth stamp: 'AEC 5/16/2022 13:46:53'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightAndAdvancesTwoStepsEastWhenReceivesRotateRightOnceAndForwardTwiceHeadingNorth stamp: 'AEC 5/16/2022 13:46:54'!
PASSED!

!testRun: #MarsRoverTest #test20RoverRaisesErrorWhenFirstCommandIsInvalid stamp: 'AEC 5/16/2022 13:46:54'!
PASSED!

!testRun: #MarsRoverTest #test21RoverProcessesValidCommandsThenReachesInvalidCommandAndRaisesError stamp: 'AEC 5/16/2022 13:46:54'!
PASSED!
!Behavior method!
heading: aDirection
	^ [
	(self coverAll:
		{25 to: 28})
		heading:
			(aDirection
				cover: (39 to: 48)
				declaredAt: (10 to: 19))
		at:
			([
			(0 coverAll:
				{54 to: 54}) @
				(0 coverAll:
					{55 to: 56}) ] valueCoveringAll:
				{55 to: 55}) ] valueCoveringAll:
		{30 to: 37. 50 to: 52}.! !
!Behavior method!
heading: aDirection at: aPosition
	^ [
	([
	(self coverAll:
		{39 to: 42}) new ] valueCoveringAll:
		{44 to: 46})
		initializeHeading:
			(aDirection
				cover: (67 to: 76)
				declaredAt: (10 to: 19))
		at:
			(aPosition
				cover: (82 to: 90)
				declaredAt: (25 to: 33)) ] valueCoveringAll:
		{48 to: 65. 78 to: 80}.! !
!Behavior method!
initializeHeading: aDirection at: aPosition
	(heading _ aDirection
		cover: (59 to: 68)
		declaredAt: (20 to: 29))
		cover: (48 to: 54)
		declaredAt: (48 to: 54).
	(position _ aPosition
		cover: (84 to: 92)
		declaredAt: (35 to: 43))
		cover: (72 to: 79)
		declaredAt: (72 to: 79).! !
!Behavior method!
process: aCommandsString
	[
	(aCommandsString
		cover: (29 to: 43)
		declaredAt: (10 to: 24)) do: [ :command |
		[
		(self coverAll:
			{61 to: 64}) processCommand:
			(command
				cover: (82 to: 88)
				declaredAt: (51 to: 57)) ] valueCoveringAll:
			{66 to: 80} ]] valueCoveringAll:
		{45 to: 47}.! !
!Behavior method!
position
	^ position
		cover: (14 to: 21)
		declaredAt: (14 to: 21).! !
!Behavior method!
isHeadingSouth
	^ [
	(heading
		cover: (21 to: 27)
		declaredAt: (21 to: 27)) is:
		(#South coverAll:
			{33 to: 38}) ] valueCoveringAll:
		{29 to: 31}.! !
!Behavior method!
is: aSymbol
	^ [
	([
	([
	(self coverAll:
		{16 to: 19}) class ] valueCoveringAll:
		{21 to: 25}) name ] valueCoveringAll:
		{27 to: 30}) =
		(aSymbol
			cover: (34 to: 40)
			declaredAt: (5 to: 11)) ] valueCoveringAll:
		{32 to: 32}.! !

!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 13:46:56'!
PASSED!
!Behavior method!
processCommand: aCommandCharacter
	[
	([
	(aCommandCharacter
		cover: (37 to: 53)
		declaredAt: (17 to: 33)) =
		($l coverAll:
			{57 to: 58}) ] valueCoveringAll:
		{55 to: 55}) ifTrue: [ ^ [
		(self coverAll:
			{70 to: 73}) rotateLeft ] valueCoveringAll:
			{75 to: 84} ]] valueCoveringAll:
		{60 to: 66}.
	[
	([
	(aCommandCharacter
		cover: (90 to: 106)
		declaredAt: (17 to: 33)) =
		($r coverAll:
			{110 to: 111}) ] valueCoveringAll:
		{108 to: 108}) ifTrue: [ ^ [
		(self coverAll:
			{123 to: 126}) rotateRight ] valueCoveringAll:
			{128 to: 138} ]] valueCoveringAll:
		{113 to: 119}.
	[
	([
	(aCommandCharacter
		cover: (144 to: 160)
		declaredAt: (17 to: 33)) =
		($f coverAll:
			{164 to: 165}) ] valueCoveringAll:
		{162 to: 162}) ifTrue: [ ^ [
		(self coverAll:
			{177 to: 180}) moveForward ] valueCoveringAll:
			{182 to: 192} ]] valueCoveringAll:
		{167 to: 173}.
	[
	([
	(aCommandCharacter
		cover: (198 to: 214)
		declaredAt: (17 to: 33)) =
		($b coverAll:
			{218 to: 219}) ] valueCoveringAll:
		{216 to: 216}) ifTrue: [ ^ [
		(self coverAll:
			{231 to: 234}) moveBackwards ] valueCoveringAll:
			{236 to: 248} ]] valueCoveringAll:
		{221 to: 227}.
	[
	(self coverAll:
		{256 to: 259}) error:
		([
		([
		(self coverAll:
			{268 to: 271}) class ] valueCoveringAll:
			{273 to: 277}) invalidCommandErrorDescription ] valueCoveringAll:
			{279 to: 308}) ] valueCoveringAll:
		{261 to: 266}.! !
!Behavior method!
rotateLeft
	^ (heading _ [
	(heading
		cover: (16 to: 22)
		declaredAt: (16 to: 22)) rotateLeft ] valueCoveringAll:
		{35 to: 44})
		cover: (27 to: 33)
		declaredAt: (16 to: 22).! !
!Behavior method!
rotateLeft
	^ [
	(East
		cover: (15 to: 18)
		declaredAt: (15 to: 18)) new ] valueCoveringAll:
		{20 to: 22}.! !
!Behavior method!
isHeadingEast
	^ [
	(heading
		cover: (20 to: 26)
		declaredAt: (20 to: 26)) is:
		(#East coverAll:
			{32 to: 36}) ] valueCoveringAll:
		{28 to: 30}.! !

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:46:56'!
PASSED!
!Behavior method!
rotateLeft
	^ [
	(West
		cover: (15 to: 18)
		declaredAt: (15 to: 18)) new ] valueCoveringAll:
		{20 to: 22}.! !
!Behavior method!
isHeadingNorth
	^ [
	(heading
		cover: (20 to: 26)
		declaredAt: (20 to: 26)) is:
		(#North coverAll:
			{32 to: 37}) ] valueCoveringAll:
		{28 to: 30}.! !
!Behavior method!
isHeadingWest
	^ [
	(heading
		cover: (19 to: 25)
		declaredAt: (19 to: 25)) is:
		(#West coverAll:
			{31 to: 35}) ] valueCoveringAll:
		{27 to: 29}.! !

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:46:56'!
PASSED!
!Behavior method!
rotateLeft
	^ [
	(North
		cover: (15 to: 19)
		declaredAt: (15 to: 19)) new ] valueCoveringAll:
		{21 to: 23}.! !

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 13:46:56'!
PASSED!
!Behavior method!
rotateLeft
	^ [
	(South
		cover: (15 to: 19)
		declaredAt: (15 to: 19)) new ] valueCoveringAll:
		{21 to: 23}.! !

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 13:46:57'!
PASSED!
!Behavior method!
rotateRight
	^ (heading _ [
	(heading
		cover: (17 to: 23)
		declaredAt: (17 to: 23)) rotateRight ] valueCoveringAll:
		{36 to: 46})
		cover: (28 to: 34)
		declaredAt: (17 to: 23).! !
!Behavior method!
rotateRight
	^ [
	(West
		cover: (16 to: 19)
		declaredAt: (16 to: 19)) new ] valueCoveringAll:
		{21 to: 23}.! !

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:46:57'!
PASSED!
!Behavior method!
rotateRight
	^ [
	(East
		cover: (16 to: 19)
		declaredAt: (16 to: 19)) new ] valueCoveringAll:
		{21 to: 23}.! !

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:46:57'!
PASSED!
!Behavior method!
rotateRight
	^ [
	(South
		cover: (16 to: 20)
		declaredAt: (16 to: 20)) new ] valueCoveringAll:
		{22 to: 24}.! !

!testRun: #MarsRoverTest #test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast stamp: 'AEC 5/16/2022 13:46:57'!
PASSED!
!Behavior method!
rotateRight
	^ [
	(North
		cover: (16 to: 20)
		declaredAt: (16 to: 20)) new ] valueCoveringAll:
		{22 to: 24}.! !

!testRun: #MarsRoverTest #test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest stamp: 'AEC 5/16/2022 13:46:57'!
PASSED!
!Behavior method!
moveForward
	[
	(heading
		cover: (16 to: 22)
		declaredAt: (16 to: 22)) moveForward:
		(self coverAll:
			{37 to: 40}) ] valueCoveringAll:
		{24 to: 35}.! !
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (28 to: 37)
		declaredAt: (14 to: 23)) moveSouth ] valueCoveringAll:
		{39 to: 47}.! !
!Behavior method!
moveSouth
	(position _ [
	(position
		cover: (13 to: 20)
		declaredAt: (13 to: 20)) -
		([
		(0 coverAll:
			{37 to: 37}) @
			(1 coverAll:
				{39 to: 39}) ] valueCoveringAll:
			{38 to: 38}) ] valueCoveringAll:
		{34 to: 34})
		cover: (25 to: 32)
		declaredAt: (13 to: 20).! !

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:46:57'!
PASSED!
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (28 to: 37)
		declaredAt: (14 to: 23)) moveNorth ] valueCoveringAll:
		{39 to: 47}.! !
!Behavior method!
moveNorth
	(position _ [
	(position
		cover: (13 to: 20)
		declaredAt: (13 to: 20)) +
		([
		(0 coverAll:
			{37 to: 37}) @
			(1 coverAll:
				{39 to: 39}) ] valueCoveringAll:
			{38 to: 38}) ] valueCoveringAll:
		{34 to: 34})
		cover: (25 to: 32)
		declaredAt: (13 to: 20).! !

!testRun: #MarsRoverTest #test11RoverAdvancesOneStepNorthWhenReceivesForwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:46:57'!
PASSED!
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (28 to: 37)
		declaredAt: (14 to: 23)) moveEast ] valueCoveringAll:
		{39 to: 46}.! !
!Behavior method!
moveEast
	(position _ [
	(position
		cover: (12 to: 19)
		declaredAt: (12 to: 19)) +
		([
		(1 coverAll:
			{36 to: 36}) @
			(0 coverAll:
				{38 to: 38}) ] valueCoveringAll:
			{37 to: 37}) ] valueCoveringAll:
		{33 to: 33})
		cover: (24 to: 31)
		declaredAt: (12 to: 19).! !

!testRun: #MarsRoverTest #test12RoverAdvancesOneStepEastWhenReceivesForwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:46:57'!
PASSED!
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (28 to: 37)
		declaredAt: (14 to: 23)) moveWest ] valueCoveringAll:
		{39 to: 46}.! !
!Behavior method!
moveWest
	(position _ [
	(position
		cover: (12 to: 19)
		declaredAt: (12 to: 19)) -
		([
		(1 coverAll:
			{36 to: 36}) @
			(0 coverAll:
				{38 to: 38}) ] valueCoveringAll:
			{37 to: 37}) ] valueCoveringAll:
		{33 to: 33})
		cover: (24 to: 31)
		declaredAt: (12 to: 19).! !

!testRun: #MarsRoverTest #test13RoverAdvancesOneStepWestWhenReceivesForwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:46:57'!
PASSED!
!Behavior method!
moveBackwards
	[
	(heading
		cover: (17 to: 23)
		declaredAt: (17 to: 23)) moveBackwards:
		(self coverAll:
			{40 to: 43}) ] valueCoveringAll:
		{25 to: 38}.! !
!Behavior method!
moveBackwards: aMarsRover
	^ [
	(aMarsRover
		cover: (30 to: 39)
		declaredAt: (16 to: 25)) moveNorth ] valueCoveringAll:
		{41 to: 49}.! !

!testRun: #MarsRoverTest #test14RoverMovesOneStepNorthWhenReceivesBackwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 13:46:57'!
PASSED!
!Behavior method!
moveBackwards: aMarsRover
	^ [
	(aMarsRover
		cover: (30 to: 39)
		declaredAt: (16 to: 25)) moveSouth ] valueCoveringAll:
		{41 to: 49}.! !

!testRun: #MarsRoverTest #test15RoverMovesOneStepSouthWhenReceivesBackwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 13:46:57'!
PASSED!
!Behavior method!
moveBackwards: aMarsRover
	^ [
	(aMarsRover
		cover: (30 to: 39)
		declaredAt: (16 to: 25)) moveWest ] valueCoveringAll:
		{41 to: 48}.! !

!testRun: #MarsRoverTest #test16RoverMovesOneStepWestWhenReceivesBackwardAndIsHeadingEast stamp: 'AEC 5/16/2022 13:46:57'!
PASSED!
!Behavior method!
moveBackwards: aMarsRover
	^ [
	(aMarsRover
		cover: (30 to: 39)
		declaredAt: (16 to: 25)) moveEast ] valueCoveringAll:
		{41 to: 48}.! !

!testRun: #MarsRoverTest #test17RoverMovesOneStepEastWhenReceivesBackwardAndIsHeadingWest stamp: 'AEC 5/16/2022 13:46:57'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesRightAndAdvancesOneStepEastWhenReceivesRotateRightAndForwardHeadingNorth stamp: 'AEC 5/16/2022 13:46:57'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightAndAdvancesTwoStepsEastWhenReceivesRotateRightOnceAndForwardTwiceHeadingNorth stamp: 'AEC 5/16/2022 13:46:57'!
PASSED!
!Behavior method!
invalidCommandErrorDescription
	^ 'Comando invalido, no se procesaran los comandos restantes.' coverAll:
		{35 to: 94}.! !

!testRun: #MarsRoverTest #test20RoverRaisesErrorWhenFirstCommandIsInvalid stamp: 'AEC 5/16/2022 13:46:57'!
PASSED!

!testRun: #MarsRoverTest #test21RoverProcessesValidCommandsThenReachesInvalidCommandAndRaisesError stamp: 'AEC 5/16/2022 13:46:57'!
PASSED!

----QUIT----(16 May 2022 13:51:53) CuisUniversity-5096.image priorSource: 4745582!

----STARTUP---- (16 May 2022 14:05:01) as /mnt/c/Users/Ari/Desktop/Ingenieria/CuisUniversity/MarsRoverTDD/linux64/CuisUniversity-5096.image!


!testRun: #MarsRoverTest #test01RoverStaysAtOriginHeadingSouthWhenItRecievesAnEmptyString stamp: 'AEC 5/16/2022 14:05:04'!
PASSED!

!testRun: #MarsRoverTest #test02RoverRotatesToEastWhenReceivesRotateLeftAndIsHeadingSouth stamp: 'AEC 5/16/2022 14:05:04'!
PASSED!

!testRun: #MarsRoverTest #test03RoverRotatesToWestWhenReceivesRotateLeftAndIsHeadingNorth stamp: 'AEC 5/16/2022 14:05:04'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesToNorthWhenReceivesRotateLeftAndIsHeadingEast stamp: 'AEC 5/16/2022 14:05:04'!
PASSED!

!testRun: #MarsRoverTest #test05RoverRotatesToSouthWhenReceivesRotateLeftAndIsHeadingWest stamp: 'AEC 5/16/2022 14:05:04'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesToWestWhenReceivesRotateRightAndIsHeadingSouth stamp: 'AEC 5/16/2022 14:05:04'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesToEastWhenReceivesRotateRightAndIsHeadingNorth stamp: 'AEC 5/16/2022 14:05:04'!
PASSED!

!testRun: #MarsRoverTest #test08RoverRotatesToSouthWhenReceivesRotateRightAndIsHeadingEast stamp: 'AEC 5/16/2022 14:05:04'!
PASSED!

!testRun: #MarsRoverTest #test09RoverRotatesToNorthWhenReceivesRotateRightAndIsHeadingWest stamp: 'AEC 5/16/2022 14:05:04'!
PASSED!

!testRun: #MarsRoverTest #test10RoverAdvancesOneStepSouthWhenReceivesForwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 14:05:04'!
PASSED!

!testRun: #MarsRoverTest #test11RoverAdvancesOneStepNorthWhenReceivesForwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 14:05:04'!
PASSED!

!testRun: #MarsRoverTest #test12RoverAdvancesOneStepEastWhenReceivesForwardAndIsHeadingEast stamp: 'AEC 5/16/2022 14:05:04'!
PASSED!

!testRun: #MarsRoverTest #test13RoverAdvancesOneStepWestWhenReceivesForwardAndIsHeadingWest stamp: 'AEC 5/16/2022 14:05:04'!
PASSED!

!testRun: #MarsRoverTest #test14RoverMovesOneStepNorthWhenReceivesBackwardAndIsHeadingSouth stamp: 'AEC 5/16/2022 14:05:04'!
PASSED!

!testRun: #MarsRoverTest #test15RoverMovesOneStepSouthWhenReceivesBackwardAndIsHeadingNorth stamp: 'AEC 5/16/2022 14:05:04'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesOneStepWestWhenReceivesBackwardAndIsHeadingEast stamp: 'AEC 5/16/2022 14:05:04'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesOneStepEastWhenReceivesBackwardAndIsHeadingWest stamp: 'AEC 5/16/2022 14:05:04'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesRightAndAdvancesOneStepEastWhenReceivesRotateRightAndForwardHeadingNorth stamp: 'AEC 5/16/2022 14:05:04'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightAndAdvancesTwoStepsEastWhenReceivesRotateRightOnceAndForwardTwiceHeadingNorth stamp: 'AEC 5/16/2022 14:05:04'!
PASSED!

!testRun: #MarsRoverTest #test20RoverRaisesErrorWhenFirstCommandIsInvalid stamp: 'AEC 5/16/2022 14:05:04'!
PASSED!

!testRun: #MarsRoverTest #test21RoverProcessesValidCommandsThenReachesInvalidCommandAndRaisesError stamp: 'AEC 5/16/2022 14:05:04'!
PASSED!